;;; bb2-mode.el
;;; Emacs major mode for ascii Blitz Basic II source code
;;; Richard Dare
;;; www.richardjdare.com

(require 'cl-lib)

(defvar bb2-keywords nil "Blitz Basic II language keywords")
(setq bb2-keywords
      '("ACos" "ADDValue" "AGABlue" "AGAFillPalette" "AGAGreen" 
	"AGAPalBlue" "AGAPalGreen" "AGAPalRGB" "AGAPalRed" "AGARGB" 
	"AGARed" "ALibJsr" "AMIGA" "ASLFileRequest" "ASLFileRequest$" 
	"ASLFontRequest" "ASLPathRequest$" "ASLScreenRequest" "ASLScreenRequest$" "ASin" 
	"ASyncFade" "ATan" "AbleICR_a" "AbleICR_b" "Abs" 
	"AbsMouse" "Activate" "ActivateSelectedBox" "ActivateString" "ActiveScreen" 
	"ActiveWindow" "AddAppIcon" "AddAppMenu" "AddAppWindow" "AddBox" 
	"AddFirst" "AddICRVector_a" "AddICRVector_b" "AddIDCMP" "AddItem" 
	"AddLast" "Addr" "AdjustChunky" "AllFire" "AllocFill" 
	"AllocMem" "AnalyzeDisk" "AnimLoop" "AppEvent" "AppEventID" 
	"AppEventType" "AppFile" "AppIconEvent" "AppIconFile" "AppIconHit" 
	"AppLock" "AppMenuEvent" "AppMenuFile" "AppMenuHit" "AppMessage" 
	"AppNumFiles" "AppWindowEvent" "AppWindowFile" "Asc" "AsmExit" 
	"Assign" "Assign$" "AttachGTList" "AutoCookie" "Avg" 
	"Avg.l" "Avg.q" "BBlit" "BBlitMode" "BLITZ" 
	"BLibJsr" "BLoad" "BSave" "Bank" "BankLoc" 
	"BankSize" "BeepScreen" "Bin#" "Bin$" "BitMap" 
	"BitMapInput" "BitMapOrigin" "BitMapOutput" "BitMapPoly" "BitMapToWindow" 
	"BitMapWindow" "BitMaptoWindow" "BitPlanesBitMap" "Blit" "BlitColl" 
	"BlitMode" "BlitterDone" "BlitterNasty" "BlitzEvent" "BlitzFont" 
	"BlitzKey" "BlitzKeys" "BlitzQualifier" "BlitzRepeat" "Block" 
	"BlockScroll" "Blue" "BootProg" "BorderPens" "Borders" 
	"Box" "BoxPrint" "BoxPropX" "BoxPropY" "BoxSelected" 
	"BoxShow" "BoxString" "BoxValue" "Boxf" "Buffer" 
	"ButtonGroup" "ButtonId" "CDDoor" "CDFastForward" "CDFirstTrack" 
	"CDFlush" "CDLastTrack" "CDNormalSpeed" "CDNumTracks" "CDPause" 
	"CDPlayTrack" "CDReadTOC" "CDRewind" "CDSpeed" "CDStatus" 
	"CDStop" "CDTrackLength" "CDTrackMins" "CDTrackPlaying" "CDTrackSecs" 
	"CDUpdateInfo" "CDVolume" "CELSE" "CEND" "CERR" 
	"CHDir" "CMPMEM" "CNIF" "CPUCls" "CPlot" 
	"CPoint" "CSIF" "CacheOff" "CachePCF" "CachesOff" 
	"CachesOn" "Call" "Case" "CaseSense" "CatchDosErrs" 
	"Centre$" "ChDir" "ChangeBox" "ChangeDir" "ChangeTrackerMask" 
	"ChangeTrackerVBlank" "CharCount" "CheckAGA" "CheckPrt" "CheckTrackerEvent" 
	"CheckTrackerID" "Checksum" "ChipFree" "Chr$" "ChunkHeader" 
	"ChunkyCLS" "ChunkyConvert" "ChunkyLoc" "ChunkyPlot" "ChunkyPoly" 
	"ChunkyToBitMap" "ChunkyToPlanar" "ChunkyVlin" "Cipher$" "Circle" 
	"Circlef" "ClearBitmap" "ClearList" "ClearRexxMsg" "ClearString" 
	"ClearToolTypes" "ClickButton" "ClickMouse" "ClipBlit" "ClipBlitMode" 
	"CloseCD" "CloseConsole" "CloseDisk" "CloseEd" "CloseFile" 
	"CloseScreen" "CloseSerial" "CloseWindow" "ClrErr" "ClrInt" 
	"Cls" "CludgeBitMap" "CludgeShapes" "CludgeSound" "Col8" 
	"ColSplit" "ColorChunky" "Colour" "ColourRequest" "CommoditiesBase" 
	"CommodityEvent" "ComparePaths" "Con_Base" "CookieMode" "CopLen" 
	"CopLoc" "CopperAGACol" "CopperCommand" "CopperEnd" "CopperInfoBlock" 
	"CopperMove" "CopperReset" "CopperSkip" "CopperWait" "CopyBitMap" 
	"CopyByte" "CopyChunky" "CopyColour" "CopyFile" "CopyLong" 
	"CopyShape" "CopyWord" "Cos" "CrMDecrunch" "CreateArgString" 
	"CreateDisplay" "CreateMsgPort" "CreateRexxMsg" "CurrentDir$" "CursX" 
	"CursY" "Cursor" "CustomChunky" "CustomChunkySize" "CustomColors" 
	"CustomCop" "CustomSprites" "CustomString" "Cvi" "Cvl" 
	"Cvq" "CxAppear" "CxChangeList" "CxDisAppear" "CxDisable" 
	"CxEnable" "CxKill" "CxListChange" "CxUnique" "Cycle" 
	"CyclePalette" "DBCasesense" "DBInit" "DBLoad" "DBSave" 
	"DBactive" "DBadd" "DBaddFirst" "DBaddLast" "DBcurrent" 
	"DBdelete" "DBfind" "DBfindnext" "DBfirst" "DBget" 
	"DBisnext" "DBisprev" "DBkill" "DBlast" "DBlistaddr" 
	"DBmemtype" "DBmodified" "DBnext" "DBpop" "DBprev" 
	"DBpush" "DBrecs" "DBsetkey" "DBsetpos" "DBupdate" 
	"DCB" "DEFTYPE" "D_CheckNMove" "D_CheckNMoveA" "D_CheckNMoveWord" 
	"D_FindStringPtr" "D_FindVolume" "D_GetSR" "D_HexWord" "Data" 
	"Data$" "Date$" "DateFormat" "Days" "Dc" 
	"Dcb" "DeIce" "DeSelectBox" "DecodeILBM" "DecodeMedModule" 
	"DecodeModule" "DecodePalette" "DecodeShapes" "DecodeSound" "Decrypt" 
	"Default" "DefaultIDCMP" "DefaultInput" "DefaultOutput" "DelAppIcon" 
	"DelAppMenu" "DelAppWindow" "DeleteArgString" "DeleteMsgPort" "DeleteRexxMsg" 
	"Deplode" "Depth" "Derez" "DetachGTList" "DeviceName$" 
	"Dim" "Disable" "DisableBox" "DiskBlocks" "DiskBuffer" 
	"DiskCapacity" "DiskErrors" "DiskErrs" "DiskFontBase" "DiskFree" 
	"DiskIO" "DiskMotor" "DiskPlay" "DiskState" "DiskStatus" 
	"DiskType$" "DiskUnit" "DiskUsed" "DiskfontBase" "DispHeight" 
	"Display" "DisplayAdjust" "DisplayBitMap" "DisplayControls" "DisplayDblScan" 
	"DisplayGenlock" "DisplayOff" "DisplayOn" "DisplayPalette" "DisplayRGB" 
	"DisplayRainbow" "DisplayScroll" "DisplaySprite" "DisplayUser" "DoColSplit" 
	"DoColl" "DoFade" "DosBase" "DosBuffLen" "DosError$" 
	"Dos_Base" "DuplicatePalette" "EMouseX" "EMouseY" "EVEN" 
	"EasyRequest" "Edit" "Edit$" "EditExit" "EditFrom" 
	"Editat" "Else" "Enable" "EnableBox" "Encrypt" 
	"End" "EndIf" "EntryBits$" "EntryComment$" "EntryDate" 
	"EntryDir" "EntryHour" "EntryMins" "EntryName$" "EntrySecs" 
	"EntrySize" "Eof" "Erase" "EraseAll" "EraseMode" 
	"ErrFail" "Even" "Event" "EventCode" "EventQualifier" 
	"EventWindow" "Examine" "Exchange" "ExchangeAppear" "ExchangeChangeList" 
	"ExchangeDisAble" "ExchangeDisAppear" "ExchangeDisable" "ExchangeEnable" "ExchangeKill" 
	"ExchangeListChange" "ExchangeMessage" "ExchangeUnique" "Exec" "ExecVersion" 
	"Exists" "Exp" "ExtractLabel" "FFPBase" "FInverse" 
	"FLocate" "FNPrint" "FNSClip" "FNSClipOutput" "FNSHeight" 
	"FNSInk" "FNSLength" "FNSLoad" "FNSOrigin" "FNSOutput" 
	"FNSPrefs" "FNSPrint" "FNSSetTab" "FNSSlot" "FNSUnLoad" 
	"FNSUnderline" "FNSUnload" "FNSVersion" "FNSWidth" "FPrint" 
	"FPrintDetoke" "FXLibReserved1" "FXLibReserved2" "FYOffset" "FadeIn" 
	"FadeInBitmap" "FadeOut" "FadePalette" "FadeStatus" "False" 
	"FastFree" "Fields" "FileFilter" "FileInput" "FileOutput" 
	"FilePart$" "FileReqSize" "FileRequest$" "FileSeek" "FileSize" 
	"FileStructure" "FillMem" "FillPalette" "FillRexxMsg" "Filter" 
	"FindScreen" "FindToolNumber" "FindToolType" "FindToolValue" "FindVolume" 
	"FirstItem" "FloatMode" "FloodFill" "FlsToStr$" "FlushBuffer" 
	"FlushEvents" "FlushQueue" "For" "ForceNTSC" "ForcePAL" 
	"Forever" "Format" "FormatTrack" "Frac" "Frames" 
	"Free" "FreeBank" "FreeCatalog" "FreeChunky" "FreeFill" 
	"FreeIconObject" "FreeIncData" "FreeMacroKey" "FreeMem" "FreePCFCache" 
	"FreePage" "FreeSlices" "FreeTrackerModule" "FreeZoneTable" "Freq" 
	"FromCLI" "FullPath$" "FuncLibVersion" "Function" "GPlot" 
	"GPoint" "GTArrowSize" "GTBevelBox" "GTButton" "GTChangeList" 
	"GTCheckBox" "GTCycle" "GTDisable" "GTEnable" "GTFreeGadget" 
	"GTGadPtr" "GTGetAttrs" "GTGetInteger" "GTGetString" "GTGimmeCludge" 
	"GTInteger" "GTListView" "GTMX" "GTNumber" "GTPalette" 
	"GTScroller" "GTSetAttrs" "GTSetHighlight" "GTSetInteger" "GTSetString" 
	"GTShape" "GTSlider" "GTStatus" "GTString" "GTTagValue" 
	"GTTags" "GTText" "GTToggle" "GadgetBorder" "GadgetHit" 
	"GadgetJam" "GadgetPens" "GadgetStatus" "Gameb" "Get" 
	"GetAssigns" "GetCCOffset" "GetCopIns$" "GetCustomReg" "GetCustomRegAdr" 
	"GetEnv$" "GetHex$" "GetHexAdr$" "GetIconInfo" "GetIconObject" 
	"GetLocal$" "GetLocaleStr" "GetMedInstr" "GetMedNote" "GetMedVolume" 
	"GetModuleName$" "GetModulePosition" "GetProgMode" "GetReg" "GetResultString" 
	"GetRexxCommand" "GetRexxResult" "GetString$" "GetSuperBitMap" "GetTrackerEvent" 
	"GetTrackerLocation" "GetTrackerSize" "GetWheel" "GetZoneX1" "GetZoneX2" 
	"GetZoneY1" "GetZoneY2" "GetaShape" "GetaSprite" "Gfx_Base" 
	"Gosub" "Goto" "GraphicsBase" "Green" "GreyChunky" 
	"HCos" "HPropBody" "HPropPot" "HSin" "HTan" 
	"Handle" "HandleRawKey" "HardCopy" "Hardcopy" "Hex#" 
	"Hex$" "HideScreen" "HotKeyHit" "Hours" "ILBMDepth" 
	"ILBMGrab" "ILBMHeight" "ILBMInfo" "ILBMPalette" "ILBMViewMode" 
	"ILBMWidth" "ILLEGAL" "INCDIR" "INCLUDE" "IconBase" 
	"IconDefTool" "IconDefTool$" "IconDefaultTool" "IconRender" "IconStack" 
	"IconSubTool$" "IconTool$" "IconType" "If" "Implode" 
	"InFront" "InFrontB" "InFrontF" "IncBin" "IncBitmap" 
	"IncData" "IncDataAbs" "IncMed" "IncMod" "IncNextShape" 
	"IncShape" "IncSize" "IncSound" "IncText$" "Index" 
	"InitAnim" "InitBank" "InitChunky" "InitCopList" "InitPage" 
	"InitPalette" "InitShape" "InitSound" "InitZoomXY" "Inkey$" 
	"InnerCls" "InnerHeight" "InnerWidth" "InstallFNS" "Instr" 
	"Int" "Int_Base" "IntuitionBase" "InvMode" "IsEven" 
	"IsLocale" "IsReqToolsActive" "IsReqtoolsActive" "IsRexxMsg" "ItemHit" 
	"ItemStackSize" "JAdaptorStatus" "JFire" "JHoriz" "JVert" 
	"JoYY" "JoyC" "Joyb" "Joyr" "Joyx" 
	"Joyy" "JumpMed" "KeyCode" "KillFile" "KillGreyChunky" 
	"KillItem" "LCase$" "LECludgeShapes" "LECompressShapes" "LEInitShape" 
	"LELoadShapes" "LEMaxShapeDepth" "LEMaxShapeHeight" "LEMaxShapeWidth" "LESaveShapes" 
	"LEScanShapes" "LSet$" "Largest" "Largest.l" "Largest.q" 
	"LargestFree" "LastItem" "Left$" "Len" "Length" 
	"Let" "Line" "Lisa" "List" "ListBase" 
	"LoadAnim" "LoadBank" "LoadBitMap" "LoadBlitzFont" "LoadChunky" 
	"LoadFont" "LoadIFF" "LoadMedModule" "LoadModule" "LoadPCF" 
	"LoadPalette" "LoadScreen" "LoadShape" "LoadShapes" "LoadSound" 
	"LoadSprites" "LoadTape" "LoadTrackerModule" "Loc" "Locate" 
	"Lof" "Log" "Log10" "LoopSound" "MButtons" 
	"MOD" "Macro" "MacroKey" "MakeCommodity" "MakeCookie" 
	"MakeDir" "MatchToolValue" "MatchWild" "Max" "MaxLen" 
	"MaxSelect$" "Maximum" "MemFree" "MenuChecked" "MenuColour" 
	"MenuGap" "MenuHit" "MenuItem" "MenuState" "MenuTitle" 
	"Menus" "MenusOff" "MenusOn" "Mid$" "MidHandle" 
	"Min" "Mins" "MixPalette" "Mki$" "Mkl$" 
	"Mkq$" "Module" "ModulePatterns" "ModulePositionJump" "ModuleSampleName" 
	"ModuleToChip" "Months" "MoreEntries" "MotorOff" "MotorOn" 
	"Mouse" "MouseArea" "MouseButton" "MouseEnabled" "MouseWait" 
	"MouseX" "MouseXSpeed" "MouseY" "MouseYSpeed" "MoveFile" 
	"MoveScreen" "NEWTYPE" "NPrint" "NPrintCon" "NTSC" 
	"NameFile" "NewPaletteMode" "NewToolType" "NewZoneTable" "Next" 
	"NextAppFile" "NextBank" "NextFile$" "NextFrame" "NextItem" 
	"NoCli" "NoMoreEntries" "Null" "NumDays" "NumPars" 
	"On" "OpenCD" "OpenConsole" "OpenDisk" "OpenFile" 
	"OpenSerial" "OutText" "OutTextPen" "PCFDepth" "PCFHeight" 
	"PCFInfo" "PCFVersion" "PCFWidth" "PColl" "PICreateRequest" 
	"PIEndRequest" "PIUpdateRequest" "PLoad" "PPDecrunch" "PackPBM" 
	"PalAdjust" "PalBlue" "PalGreen" "PalRGB" "PalRed" 
	"Palette" "PaletteInfo" "PaletteRange" "Par$" "ParPath$" 
	"PathLock" "PathPart$" "PauseModule" "Peek" "PeekMax$" 
	"PeekSound" "PeekTo$" "Peeks$" "Peekto$" "PhoneticSpeak" 
	"Pi" "PlanarToChunky" "PlayBack" "PlayMed" "PlayModule" 
	"PlayTracker" "PlayWait" "Plot" "Point" "Pointer" 
	"Poke" "Poly" "Polyf" "Pop" "PopInput" 
	"PopItem" "PopOutput" "PositionMouse" "PositionSuperBitMap" "PositionSuperBitmap" 
	"PrevItem" "Print" "PrintCon" "ProcessChunky" "Processor" 
	"PropGadget" "PrtCommand" "PrtText" "PushItem" "Put" 
	"PutIconObject" "PutReg" "PutSuperBitMap" "QAMIGA" "QAbs" 
	"QAngle" "QBlit" "QBlitMode" "QFrac" "QLimit" 
	"QWrap" "Qualifier" "Queue" "QuickPlay" "Quiet" 
	"QuietTrap" "RGB" "RIAnimFrameCount" "RIAnimInit" "RINextAnimFrame" 
	"RRandomize" "RRnd" "RSet$" "RTASyncPaletteRequest" "RTASyncRequest" 
	"RTCheckASyncPaletteRequest" "RTCheckASyncRequest" "RTEZFlagsRequest" "RTEZFontRequest" "RTEZFreePattern" 
	"RTEZGetLong" "RTEZGetLongRange" "RTEZGetString" "RTEZLoadFile" "RTEZMultiLoadFile" 
	"RTEZPaletteRequest" "RTEZPathRequest" "RTEZRNextPathEntry" "RTEZRequest" "RTEZSaveFile" 
	"RTEZScreenModeRequest" "RTEZSetDefaultDirectory" "RTEZSetPattern" "RTEndASyncPaletteRequest" "RTEndASyncRequest" 
	"RTFileRequest" "RTLockWindow" "RTNextPathEntry" "RTRequest" "RTRevision" 
	"RTUnlockWindow" "RTVersion" "RastPort" "RawKey" "RawStatus" 
	"ReMap" "Read" "ReadChunky" "ReadFile" "ReadMem" 
	"ReadSector" "ReadSerial" "ReadSerialMem" "ReadSerialString" "Reboot" 
	"Record" "RectsHit" "Red" "RedoColSplit" "Redraw" 
	"RedrawBox" "RedrawPage" "ReduceX2" "RelMouse" "RemICRVector_a" 
	"RemICRVector_b" "RemoveFNS" "Rename" "RenderPoly" "RenderToBitmap" 
	"RenderToChunky" "Repeat" "Repeats" "Replace$" "ReplyRexxMsg" 
	"ReqColours" "ReqFileLoc" "ReqFileRequest" "ReqFileRequest$" "ReqFontSize" 
	"ReqOutput" "Req_Base" "Request" "Reserve" "ResetList" 
	"ResetString" "ResetTimer" "Restore" "Return" "Rex_Base" 
	"RexxError" "RexxEvent" "RexxSysBase" "RexxsysBase" "Right$" 
	"Rnd" "Rotate" "Rrandomize" "Rrnd" "Run" 
	"Runerrsoff" "Runerrson" "SBlit" "SBlitMode" "SColl" 
	"SHARED" "SMouseX" "SMouseY" "SPACE$" "SafeToBlit" 
	"SaveBank" "SaveBitmap" "SaveCMAP" "SaveChunky" "SaveIncData" 
	"SavePalette" "SaveScreen" "SaveShape" "SaveShapes" "SaveSprites" 
	"SaveTape" "Scale" "ScaleChunkyX" "ScaleChunkyY" "Screen" 
	"ScreenHeight" "ScreenPens" "ScreenTags" "ScreenWidth" "ScreensBitMap" 
	"Scroll" "SearchBegin" "SearchEnd" "SearchMem" "SearchMemFound" 
	"SearchString" "Secs" "Select" "SelectBox" "SelectMode" 
	"SendRexxCommand" "SerialEvent" "SetBLWait" "SetBPLCON0" "SetBits" 
	"SetBox" "SetBoxColor" "SetBoxString" "SetBoxTitle" "SetColl" 
	"SetCollHi" "SetCollOdd" "SetCopyBuffer" "SetCxStatus" "SetCycle" 
	"SetEnv" "SetErr" "SetEventFilter" "SetFileComment" "SetGadgetStatus" 
	"SetHProp" "SetHotKey" "SetICR_a" "SetICR_b" "SetIconHit" 
	"SetIconType" "SetInt" "SetLocal" "SetMedMask" "SetMedVolume" 
	"SetMenu" "SetPagePens" "SetPeriod" "SetSerialBuffer" "SetSerialLens" 
	"SetSerialParams" "SetStatus" "SetString" "SetTextGadget" "SetToolValue" 
	"SetVProp" "SetVoice" "SetWildString" "SetZone" "SetZoneMode" 
	"SetupLESDebug" "Sgn" "Shape" "ShapeGadget" "ShapeHeight" 
	"ShapeItem" "ShapeSpriteHit" "ShapeSub" "ShapeToIcon" "ShapeWidth" 
	"ShapesBitMap" "ShapesHit" "Shared" "Show" "ShowB" 
	"ShowBitMap" "ShowBitmap" "ShowBlitz" "ShowF" "ShowPalette" 
	"ShowRequesters" "ShowScreen" "ShowSprite" "ShowStencil" "Sin" 
	"SizeLimits" "SizeOf" "Slice" "Smallest" "Smallest.l" 
	"Smallest.q" "SolidMode" "Sort" "SortDown" "SortList" 
	"SortUp" "Sound" "SoundData" "Space$" "Speak" 
	"SpotBox" "SpriteMode" "SpritesHit" "Sqr" "Start" 
	"StartMedModule" "StartTracker" "Statement" "Stencil" "StopCycle" 
	"StopMed" "StopModule" "StopTracker" "Str$" "StrToFls" 
	"String$" "StringGadget" "StringSort" "StringSortDir" "StringSortItem" 
	"StringText$" "StripLead$" "StripTrail$" "SubHit" "SubIDCMP" 
	"SubItem" "SubItemOff" "SwapBank" "SysJsr" "SystemDate" 
	"Tan" "TapeTrap" "TaskName$" "TextGadget" "TextRequest" 
	"TextTimeout" "Then" "Ticks" "Timer" "To" 
	"Toggle" "ToggleBox" "TokeJsr" "TrackerVolume" "Translate$" 
	"True" "Type" "UCase$" "USED" "USEPATH" 
	"UStr$" "UnBuffer" "UnLeft$" "UnPackPBM" "UnQueue" 
	"UnRight$" "UnSetEnv" "UnSetLocal" "UnpackIFF" "UnpackPCF" 
	"Until" "Use" "UseCatalog" "UseZoneTable" "Used" 
	"VPos" "VPropBody" "VPropPot" "VWait" "VWaitPos" 
	"Val" "ViewPort" "VoiceLoc" "Volume" "Vpos" 
	"VwaitPos" "WBDepth" "WBExtViewMode" "WBHeight" "WBStartup" 
	"WBViewMode" "WBWidth" "WBlit" "WBox" "WCircle" 
	"WCls" "WColour" "WCursX" "WCursY" "WEllipse" 
	"WJam" "WLeftOff" "WLine" "WLocate" "WMouseX" 
	"WMouseY" "WMove" "WPlot" "WPointer" "WPrintScroll" 
	"WScroll" "WSize" "WTitle" "WTopOff" "Wait" 
	"WaitBlitter" "WaitCommodity" "WaitEvent" "WaitFor" "WaitTrackerEvent" 
	"WbToScreen" "WeekDay" "Wend" "While" "Window" 
	"WindowFont" "WindowHeight" "WindowInput" "WindowOutput" "WindowTags" 
	"WindowWidth" "WindowX" "WindowY" "Wline" "WriteBoot" 
	"WriteChunky" "WriteFile" "WriteMem" "WriteSector" "WriteSerial" 
	"WriteSerialMem" "WriteSerialString" "XBDecodeSound" "XBDiskBuffer" "XBDiskPlay" 
	"XBFilter" "XBInitSound" "XBLoadSound" "XBLoopSound" "XBPeekSound" 
	"XBSetPeriod" "XBSound" "XBSoundData" "XBVolume" "XFlip" 
	"XINCLUDE" "XOR" "XStatus" "Xor" "YFlip" 
	"Years" "Zone" "ZoneInit" "ZoneMode" "ZoneTable" 
	"ZoneTableNumber" "ZoneTableSize" "ZoneTest" "ZoomX2" "ZoomX4" 
	"ZoomX8" "ZoomXY" "cr_vbr"
	
					; 68000 keywords
	
	"ABCD" "ADD" "ADDA" "ADDI" "ADDQ" 
	"ADDX" "AND" "ANDI" "ASL" "ASR" 
	"BCC" "BCS" "BEQ" "BGE" "BGT" 
	"BHI" "BLE" "BLS" "BLT" "BMI" 
	"BNE" "BPL" "BVC" "BVS" "BRA" 
	"BSR" "BCHG" "BCLR" "BSET" "BTST" 
	"CHK" "CLR" "CMP" "CMPA" "CMPI" 
	"CMPM" "DBCC" "DBCS" "DBEQ" "DBF" 
	"DBRA" "DBGE" "DBGT" "DBHI" "DBLE" 
	"DBLS" "DBLT" "DBMI" "DBNE" "DBPL" 
	"DBT" "DBVC" "DBVS" "DIVS" "DIVU" 
	"EOR" "EORI" "EXG" "EXT" "JMP" 
	"JSR" "LEA" "LINK" "LSL" "LSR" 
	"MOVE" "MOVEA" "MOVEM" "MOVEP" "MOVEQ" 
	"MULS" "MULU" "NBCD" "NEG" "NEGX" 
	"NOP" "NOT" "OR" "ORI" "PEA" 
	"RESET" "ROL" "ROR" "ROXL" "ROXR" 
	"RTE" "RTR" "RTS" "SBCD" "SCC" 
	"SCS" "SEQ" "SF" "SGE" "SGT" 
	"SHI" "SLE" "SLS" "SLT" "SMI" 
	"SNE" "SPL" "ST" "SVC" "SVS" 
	"STOP" "SUB" "SUBA" "SUBI" "SUBQ" 
	"SUBX" "SWAP" "TAS" "TRAP" "TRAPV" 
	"TST" "UNLK"))

(defvar bb2-amigados-keywords nil "AmigaDOS keywords")
(setq bb2-amigados-keywords
      '("AGARexxHost_" "AbortIO_" "AbortPkt_" "ActivateCxObj_" "ActivateGadget_" 
	"ActivateWindow_" "AddAmigaGuideHostA_" "AddAnimOb_" "AddAppIconA_" "AddAppMenuItemA_" 
	"AddAppWindowA_" "AddBob_" "AddBootNode_" "AddBuffers_" "AddClass_" 
	"AddConfigDev_" "AddDTObject_" "AddDevice_" "AddDosEntry_" "AddDosNode_" 
	"AddFont_" "AddFreeList_" "AddGList_" "AddGadget_" "AddHead_" 
	"AddIEvents_" "AddIntServer_" "AddLibrary_" "AddMemHandler_" "AddMemList_" 
	"AddNamedObject_" "AddPart_" "AddPort_" "AddResource_" "AddSegment_" 
	"AddSemaphore_" "AddTail_" "AddTask_" "AddVSprite_" "Alert_" 
	"AllocAbs_" "AllocAslRequest_" "AllocBitMap_" "AllocBoardInfo_" "AllocBoardMem_" 
	"AllocConfigDev_" "AllocDBufInfo_" "AllocDosObject_" "AllocEntry_" "AllocExpansionMem_" 
	"AllocFileRequest_" "AllocIFF_" "AllocLocalItem_" "AllocMem_" "AllocMiscResource_" 
	"AllocNamedObjectA_" "AllocPooled_" "AllocPotBits_" "AllocRaster_" "AllocRemember_" 
	"AllocScreenBuffer_" "AllocSignal_" "AllocSpriteDataA_" "AllocTrap_" "AllocUnit_" 
	"AllocVec_" "AllocateTagItems_" "Allocate_" "AlohaWorkbench_" "Amiga2Date_" 
	"AmigaGuideSignal_" "AndRectRegion_" "AndRegionRegion_" "Animate_" "ApplyTagChanges_" 
	"AreaDraw_" "AreaEllipse_" "AreaEnd_" "AreaMove_" "AskFont_" 
	"AskKeyMapDefault_" "AskSoftStyle_" "AslRequest_" "AssignAdd_" "AssignLate_" 
	"AssignLock_" "AssignPath_" "AttachCxObj_" "AttachPalExtra_" "AttemptLockDosList_" 
	"AttemptLockLayerRom_" "AttemptRemNamedObject_" "AttemptSemaphoreShared_" "AttemptSemaphore_" "AutoRequest_" 
	"AvailFonts_" "AvailMem_" "BeginCardAccess_" "BeginRefresh_" "BeginUpdate_" 
	"BehindLayer_" "BestModeIDA_" "BitMapScale_" "BltBitMapRastPort_" "BltBitMap_" 
	"BltClear_" "BltMaskBitMapRastPort_" "BltPattern_" "BltTemplate_" "BoardsPrivate1_" 
	"BuildEasyRequestArgs_" "BuildSysRequest_" "BumpRevision_" "CBump_" "CMove_" 
	"CWait_" "CacheClearE_" "CacheClearU_" "CacheControl_" "CachePostDMA_" 
	"CachePreDMA_" "CalcIVG_" "CallHookPkt_" "CardAccessSpeed_" "CardChangeCount_" 
	"CardForceChange_" "CardInterface_" "CardMiscControl_" "CardProgramVoltage_" "CardResetCard_" 
	"CardResetRemove_" "Cause_" "ChangeExtSpriteA_" "ChangeMode_" "ChangeScreenBuffer_" 
	"ChangeSprite_" "ChangeVPBitMap_" "ChangeWindowBox_" "CheckDate_" "CheckIO_" 
	"CheckSignal_" "ChildFree_" "ChildOrphan_" "ChildStatus_" "ChildWait_" 
	"ClearCxObjError_" "ClearDMRequest_" "ClearEOL_" "ClearMenuStrip_" "ClearPointer_" 
	"ClearRectRegion_" "ClearRegion_" "ClearRexxMsg_" "ClearScreen_" "CliInitNewcli_" 
	"CliInitRun_" "Cli_" "ClipBlit_" "CloneTagItems_" "CloseAmigaGuide_" 
	"CloseCatalog_" "CloseClipboard_" "CloseDevice_" "CloseEngine_" "CloseFont_" 
	"CloseIFF_" "CloseLibrary_" "CloseLocale_" "CloseMonitor_" "CloseScreen_" 
	"CloseWindow_" "CloseWorkBench_" "Close_" "CoerceMode_" "ColdReboot_" 
	"CollectionChunk_" "CollectionChunks_" "CompareDates_" "ConfigBoard_" "ConfigChain_" 
	"ConvToLower_" "ConvToUpper_" "ConvertHSBToRGB_" "ConvertRGBToHSB_" "CopyMemQuick_" 
	"CopyMem_" "CopySBitMap_" "CopyTuple_" "CreateArgstring_" "CreateBehindHookLayer_" 
	"CreateBehindLayer_" "CreateContext_" "CreateCxObj_" "CreateDir_" "CreateGadgetA_" 
	"CreateIORequest_" "CreateMenusA_" "CreateMsgPort_" "CreateNewProc_" "CreatePool_" 
	"CreateProc_" "CreateRexxMsg_" "CreateUpfrontHookLayer_" "CreateUpfrontLayer_" "CurrentChunk_" 
	"CurrentDir_" "CurrentTime_" "CxBroker_" "CxMsgData_" "CxMsgID_" 
	"CxMsgType_" "CxObjError_" "CxObjType_" "Date2Amiga_" "DateStamp_" 
	"DateToStr_" "Deallocate_" "Debug_" "Delay_" "DeleteArgstring_" 
	"DeleteCxObjAll_" "DeleteCxObj_" "DeleteDiskObject_" "DeleteFile_" "DeleteIORequest_" 
	"DeleteLayer_" "DeleteMsgPort_" "DeletePool_" "DeleteRexxMsg_" "DeleteVar_" 
	"DeviceProc_" "DeviceTuple_" "Disable_" "DisownBlitter_" "DisplayAlert_" 
	"DisplayBeep_" "DisposeCxMsg_" "DisposeDTObject_" "DisposeFontContents_" "DisposeLayerInfo_" 
	"DisposeObject_" "DisposeRegion_" "DivertCxMsg_" "DoAsyncLayout_" "DoCollision_" 
	"DoDTMethodA_" "DoGadgetMethodA_" "DoHookClipRects_" "DoIO_" "DoPkt_" 
	"DoubleClick_" "DrawBevelBoxA_" "DrawBorder_" "DrawEllipse_" "DrawGList_" 
	"DrawImageState_" "DrawImage_" "Draw_" "DupLockFromFH_" "DupLock_" 
	"EasyRequestArgs_" "Enable_" "EndCardAccess_" "EndNotify_" "EndRefresh_" 
	"EndRequest_" "EndUpdate_" "EnqueueCxObj_" "Enqueue_" "EntryHandler_" 
	"EraseImage_" "EraseRect_" "ErrorReport_" "ExAllEnd_" "ExAll_" 
	"ExNext_" "ExamineFH_" "Examine_" "Execute_" "ExitHandler_" 
	"Exit_" "ExtendFont_" "FGetC_" "FGets_" "FPutC_" 
	"FPuts_" "FRead_" "FWrite_" "FattenLayerInfo_" "Fault_" 
	"FilePart_" "FillRexxMsg_" "FilterTagChanges_" "FilterTagItems_" "FindArg_" 
	"FindCliProc_" "FindCollection_" "FindColor_" "FindConfigDev_" "FindDisplayInfo_" 
	"FindDosEntry_" "FindLocalItem_" "FindName_" "FindNamedObject_" "FindPort_" 
	"FindPropContext_" "FindProp_" "FindResident_" "FindSegment_" "FindSemaphore_" 
	"FindTagItem_" "FindTask_" "FindToolType_" "FindVar_" "Flood_" 
	"Flush_" "FontExtent_" "Forbid_" "FormatDate_" "FormatString_" 
	"Format_" "FreeArgs_" "FreeAslRequest_" "FreeBitMap_" "FreeBoardInfo_" 
	"FreeBoardMem_" "FreeClass_" "FreeColorMap_" "FreeConfigDev_" "FreeCopList_" 
	"FreeCprList_" "FreeDBufInfo_" "FreeDeviceProc_" "FreeDiskObject_" "FreeDosEntry_" 
	"FreeDosObject_" "FreeEntry_" "FreeExpansionMem_" "FreeFileRequest_" "FreeFreeList_" 
	"FreeGBuffers_" "FreeGadgets_" "FreeIFF_" "FreeLocalItem_" "FreeMem_" 
	"FreeMenus_" "FreeMiscResource_" "FreeNamedObject_" "FreePooled_" "FreePotBits_" 
	"FreeRaster_" "FreeRemember_" "FreeScreenBuffer_" "FreeScreenDrawInfo_" "FreeSignal_" 
	"FreeSpriteData_" "FreeSprite_" "FreeSysRequest_" "FreeTagItems_" "FreeTrap_" 
	"FreeUnit_" "FreeVPortCopLists_" "FreeVec_" "FreeVisualInfo_" "GT_BeginRefresh_" 
	"GT_EndRefresh_" "GT_FilterIMsg_" "GT_GetGadgetAttrsA_" "GT_GetIMsg_" "GT_PostFilterIMsg_" 
	"GT_RefreshWindow_" "GT_ReplyIMsg_" "GT_SetGadgetAttrsA_" "GadgetMouse_" "GetAPen_" 
	"GetAmigaGuideAttr_" "GetAmigaGuideMsg_" "GetAmigaGuideString_" "GetArgStr_" "GetAttr_" 
	"GetBPen_" "GetBitMapAttr_" "GetBoardName_" "GetCC_" "GetCardMap_" 
	"GetCatalogStr_" "GetColorMap_" "GetConsoleTask_" "GetCurrentBinding_" "GetCurrentDirName_" 
	"GetDTAttrsA_" "GetDTMethods_" "GetDTString_" "GetDTTriggerMethods_" "GetDefDiskObject_" 
	"GetDefPrefs_" "GetDefaultPubScreen_" "GetDeviceProc_" "GetDiskObjectNew_" "GetDiskObject_" 
	"GetDisplayInfoData_" "GetDrMd_" "GetExtSpriteA_" "GetFileSysTask_" "GetGBuffers_" 
	"GetIcon_" "GetLocaleStr_" "GetMsg_" "GetOutlinePen_" "GetPrefs_" 
	"GetProgramDir_" "GetProgramName_" "GetPrompt_" "GetRGB32_" "GetRGB4_" 
	"GetRPAttrsA_" "GetScreenData_" "GetScreenDrawInfo_" "GetSprite_" "GetTagData_" 
	"GetUniqueID_" "GetUnitID_" "GetUnit_" "GetVPModeID_" "GetVar_" 
	"GetVisualInfoA_" "GfxAssociate_" "GfxFree_" "GfxInternal1_" "GfxInternal2_" 
	"GfxInternal3_" "GfxLookUp_" "GfxNew_" "GfxSpare1_" "GfxSpare2_" 
	"GiveUnit_" "GoodID_" "GoodType_" "HelpControl_" "IDtoStr_" 
	"IEEEDPAbs_" "IEEEDPAcos_" "IEEEDPAdd_" "IEEEDPAsin_" "IEEEDPAtan_" 
	"IEEEDPCeil_" "IEEEDPCmp_" "IEEEDPCos_" "IEEEDPCosh_" "IEEEDPDiv_" 
	"IEEEDPExp_" "IEEEDPFieee_" "IEEEDPFix_" "IEEEDPFloor_" "IEEEDPFlt_" 
	"IEEEDPLog10_" "IEEEDPLog_" "IEEEDPMul_" "IEEEDPNeg_" "IEEEDPPow_" 
	"IEEEDPSin_" "IEEEDPSincos_" "IEEEDPSinh_" "IEEEDPSqrt_" "IEEEDPSub_" 
	"IEEEDPTan_" "IEEEDPTanh_" "IEEEDPTieee_" "IEEEDPTst_" "IEEESPAbs_" 
	"IEEESPAcos_" "IEEESPAdd_" "IEEESPAsin_" "IEEESPAtan_" "IEEESPCeil_" 
	"IEEESPCmp_" "IEEESPCos_" "IEEESPCosh_" "IEEESPDiv_" "IEEESPExp_" 
	"IEEESPFieee_" "IEEESPFix_" "IEEESPFloor_" "IEEESPFlt_" "IEEESPLog10_" 
	"IEEESPLog_" "IEEESPMul_" "IEEESPNeg_" "IEEESPPow_" "IEEESPSin_" 
	"IEEESPSincos_" "IEEESPSinh_" "IEEESPSqrt_" "IEEESPSub_" "IEEESPTan_" 
	"IEEESPTanh_" "IEEESPTieee_" "IEEESPTst_" "IfAmigaXIP_" "Info_" 
	"Inhibit_" "InitArea_" "InitBitMap_" "InitCode_" "InitGMasks_" 
	"InitGels_" "InitIFF_" "InitIFFasClip_" "InitIFFasDOS_" "InitLayers_" 
	"InitMasks_" "InitRastPort_" "InitRequester_" "InitResident_" "InitSemaphore_" 
	"InitStruct_" "InitTmpRas_" "InitVPort_" "InitView_" "Input_" 
	"InsertCxObj_" "Insert_" "InstallClipRegion_" "InstallLayerHook_" "InstallLayerInfoHook_" 
	"InternalLoadSeg_" "InternalUnLoadSeg_" "IntuiTextLength_" "Intuition_" "InvertKeyMap_" 
	"IoErr_" "IsAlNum_" "IsAlpha_" "IsCntrl_" "IsDigit_" 
	"IsFileSystem_" "IsGraph_" "IsInteractive_" "IsLower_" "IsPrint_" 
	"IsPunct_" "IsRexxMsg_" "IsSpace_" "IsUpper_" "IsXDigit_" 
	"ItemAddress_" "LayoutMenuItemsA_" "LayoutMenusA_" "LendMenus_" "LengthArgstring_" 
	"LoadRGB32_" "LoadRGB4_" "LoadSeg_" "LoadView_" "LocalItemData_" 
	"LockAmigaGuideBase_" "LockDosList_" "LockIBase_" "LockLayerInfo_" "LockLayerRom_" 
	"LockLayer_" "LockLayers_" "LockPubScreenList_" "LockPubScreen_" "LockRecord_" 
	"LockRecords_" "LockRexxBase_" "Lock_" "MakeClass_" "MakeDosEntry_" 
	"MakeDosNode_" "MakeFunctions_" "MakeLibrary_" "MakeLink_" "MakeScreen_" 
	"MakeVPort_" "MapANSI_" "MapRawKey_" "MapTags_" "MatchEnd_" 
	"MatchFirst_" "MatchIX_" "MatchNext_" "MatchPatternNoCase_" "MatchPattern_" 
	"MatchToolValue_" "MaxCli_" "ModeNotAvailable_" "ModifyIDCMP_" "ModifyProp_" 
	"MoveLayerInFrontOf_" "MoveLayer_" "MoveScreen_" "MoveSizeLayer_" "MoveSprite_" 
	"MoveWindowInFrontOf_" "MoveWindow_" "Move_" "MrgCop_" "NameFromFH_" 
	"NameFromLock_" "NamedObjectName_" "NewDTObjectA_" "NewFontContents_" "NewLayerInfo_" 
	"NewLoadSeg_" "NewModifyProp_" "NewObjectA_" "NewRegion_" "NewScaledDiskFont_" 
	"NextBoardInfo_" "NextDisplayInfo_" "NextDosEntry_" "NextObject_" "NextPubScreen_" 
	"NextTagItem_" "ObtainBattSemaphore_" "ObtainBestPenA_" "ObtainConfigBinding_" "ObtainDataTypeA_" 
	"ObtainGIRPort_" "ObtainInfoA_" "ObtainPen_" "ObtainSemaphoreList_" "ObtainSemaphoreShared_" 
	"ObtainSemaphore_" "OffGadget_" "OffMenu_" "OldOpenLibrary_" "OnGadget_" 
	"OnMenu_" "OpenAmigaGuideA_" "OpenAmigaGuideAsyncA_" "OpenCatalogA_" "OpenClipboard_" 
	"OpenDevice_" "OpenDiskFont_" "OpenEngine_" "OpenFont_" "OpenFromLock_" 
	"OpenIFF_" "OpenIntuition_" "OpenLibrary_" "OpenLocale_" "OpenMonitor_" 
	"OpenResource_" "OpenScreenTagList_" "OpenScreen_" "OpenWindowTagList_" "OpenWindow_" 
	"OpenWorkBench_" "Open_" "OrRectRegion_" "OrRegionRegion_" "Output_" 
	"OwnBlitter_" "OwnCard_" "PackBoolTags_" "PackStructureTags_" "ParentChunk_" 
	"ParentDir_" "ParentOfFH_" "ParseDate_" "ParseIFF_" "ParseIX_" 
	"ParsePatternNoCase_" "ParsePattern_" "PathPart_" "Permit_" "PointInImage_" 
	"PolyDraw_" "PopChunk_" "PrintDTObjectA_" "PrintFault_" "PrintIText_" 
	"Procure_" "PropChunk_" "PropChunks_" "PubScreenStatus_" "PushChunk_" 
	"PutDefDiskObject_" "PutDiskObject_" "PutIcon_" "PutMsg_" "PutStr_" 
	"QBSBlit_" "QBlit_" "QueryOverscan_" "RLDispatch_" "RawDoFmt_" 
	"ReadArgs_" "ReadBattClock_" "ReadBattMem_" "ReadCardStatus_" "ReadChunkBytes_" 
	"ReadChunkRecords_" "ReadExpansionByte_" "ReadExpansionRom_" "ReadItem_" "ReadLink_" 
	"ReadPixelArray8_" "ReadPixelLine8_" "ReadPixel_" "ReadUnitID_" "Read_" 
	"RectFill_" "RefreshDTObjectA_" "RefreshGList_" "RefreshGadgets_" "RefreshTagItemClones_" 
	"RefreshWindowFrame_" "Relabel_" "ReleaseBattSemaphore_" "ReleaseCard_" "ReleaseConfigBinding_" 
	"ReleaseDataType_" "ReleaseGIRPort_" "ReleaseInfoA_" "ReleaseNamedObject_" "ReleasePen_" 
	"ReleaseSemaphoreList_" "ReleaseSemaphore_" "RemAssignList_" "RemConfigDev_" "RemDevice_" 
	"RemDosEntry_" "RemFont_" "RemHead_" "RemIBob_" "RemIntServer_" 
	"RemLibrary_" "RemMemHandler_" "RemNamedObject_" "RemPort_" "RemResource_" 
	"RemSegment_" "RemSemaphore_" "RemTail_" "RemTask_" "RemVSprite_" 
	"RemakeDisplay_" "RemoveAmigaGuideHostA_" "RemoveAppIcon_" "RemoveAppMenuItem_" "RemoveAppWindow_" 
	"RemoveClass_" "RemoveCxObj_" "RemoveDTObject_" "RemoveGList_" "RemoveGadget_" 
	"Remove_" "Rename_" "ReplyAmigaGuideMsg_" "ReplyMsg_" "ReplyPkt_" 
	"ReportMouse_" "RequestFile_" "Request_" "ResetBattClock_" "ResetMenuStrip_" 
	"RethinkDisplay_" "RouteCxMsg_" "RunCommand_" "SDivMod32_" "SMult32_" 
	"SMult64_" "SPAbs_" "SPAcos_" "SPAdd_" "SPAsin_" 
	"SPAtan_" "SPCeil_" "SPCmp_" "SPCos_" "SPCosh_" 
	"SPDiv_" "SPExp_" "SPFieee_" "SPFix_" "SPFloor_" 
	"SPFlt_" "SPLog10_" "SPLog_" "SPMul_" "SPNeg_" 
	"SPPow_" "SPSin_" "SPSincos_" "SPSinh_" "SPSqrt_" 
	"SPSub_" "SPTan_" "SPTanh_" "SPTieee_" "SPTst_" 
	"SameDevice_" "SameLock_" "ScalerDiv_" "ScreenDepth_" "ScreenPosition_" 
	"ScreenToBack_" "ScreenToFront_" "ScrollLayer_" "ScrollRasterBF_" "ScrollRaster_" 
	"ScrollVPort_" "ScrollWindowRaster_" "Seek_" "SelectInput_" "SelectOutput_" 
	"SendAmigaGuideCmdA_" "SendAmigaGuideContextA_" "SendIO_" "SendPkt_" "SetABPenDrMd_" 
	"SetAPen_" "SetAmigaGuideAttrsA_" "SetAmigaGuideContextA_" "SetArgStr_" "SetAttrsA_" 
	"SetBPen_" "SetChipRev_" "SetCollision_" "SetComment_" "SetConsoleTask_" 
	"SetCurrentBinding_" "SetCurrentDirName_" "SetCxObjPri_" "SetDMRequest_" "SetDTAttrsA_" 
	"SetDefaultPubScreen_" "SetDrMd_" "SetEditHook_" "SetExcept_" "SetFileDate_" 
	"SetFileSize_" "SetFileSysTask_" "SetFilterIX_" "SetFilter_" "SetFont_" 
	"SetFunction_" "SetGadgetAttrsA_" "SetInfoA_" "SetIntVector_" "SetIoErr_" 
	"SetKeyMapDefault_" "SetLocalItemPurge_" "SetMaxPen_" "SetMenuStrip_" "SetMode_" 
	"SetMouseQueue_" "SetOutlinePen_" "SetOwner_" "SetPointer_" "SetPrefs_" 
	"SetProgramDir_" "SetProgramName_" "SetPrompt_" "SetProtection_" "SetPubScreenModes_" 
	"SetRGB32CM_" "SetRGB32_" "SetRGB4CM_" "SetRGB4_" "SetRPAttrsA_" 
	"SetRast_" "SetSR_" "SetSignal_" "SetSoftStyle_" "SetTaskPri_" 
	"SetTranslate_" "SetVBuf_" "SetVar_" "SetWindowPointerA_" "SetWindowTitles_" 
	"SetWriteMask_" "ShowTitle_" "Signal_" "SizeLayer_" "SizeWindow_" 
	"SortGList_" "SortLayerCR_" "SplitName_" "StackSwap_" "StartNotify_" 
	"StopChunk_" "StopChunks_" "StopOnExit_" "StoreItemInContext_" "StoreLocalItem_" 
	"StrConvert_" "StrToDate_" "StrToLong_" "Stricmp_" "StripFont_" 
	"StrnCmp_" "Strnicmp_" "SumKickData_" "SumLibrary_" "SuperState_" 
	"Supervisor_" "SwapBitsRastPortClipRect_" "SyncSBitMap_" "SysReqHandler_" "SystemTagList_" 
	"TEDGetCurrentLine_" "TEDGetFilename_" "TEDGetFirstLine_" "TEDGetJumpTable_" "TEDGetLabelCount_" 
	"TEDGetLabelList_" "TEDSetJumpTable_" "TagInArray_" "TextExtent_" "TextFit_" 
	"TextLength_" "Text_" "ThinLayerInfo_" "TimedDisplayAlert_" "ToLower_" 
	"ToUpper_" "TypeOfMem_" "UCopperListInit_" "UDivMod32_" "UMult32_" 
	"UMult64_" "UnGetC_" "UnLoadSeg_" "UnLockDosList_" "UnLockRecord_" 
	"UnLockRecords_" "UnLock_" "UnlockAmigaGuideBase_" "UnlockIBase_" "UnlockLayerInfo_" 
	"UnlockLayerRom_" "UnlockLayer_" "UnlockLayers_" "UnlockPubScreenList_" "UnlockPubScreen_" 
	"UnlockRexxBase_" "UnpackStructureTags_" "UpfrontLayer_" "UserState_" "VBeamPos_" 
	"VFPrintf_" "VFWritef_" "VPrintf_" "Vacate_" "VideoControl_" 
	"ViewAddress_" "ViewPortAddress_" "WBInfo_" "WBenchToBack_" "WBenchToFront_" 
	"WaitBOVP_" "WaitBlit_" "WaitForChar_" "WaitIO_" "WaitPkt_" 
	"WaitPort_" "WaitTOF_" "Wait_" "WeighTAMatch_" "WhichLayer_" 
	"WindowLimits_" "WindowToBack_" "WindowToFront_" "WriteBattClock_" "WriteBattMem_" 
	"WriteChars_" "WriteChunkBytes_" "WriteChunkRecords_" "WriteExpansionByte_" "WritePixelArray8_" 
	"WritePixelLine8_" "WritePixel_" "WritePotgo_" "Write_" "XFA_AllocFrames_" 
	"XFA_AnimFrames_" "XFA_AnimMem_" "XFA_CMapPtr_" "XFA_ChangePackBitMap_" "XFA_ClosePackStuff_" 
	"XFA_ClosePlayStuff_" "XFA_CloseRead_" "XFA_FreeAnim_" "XFA_FreeFrame_" "XFA_FreeFrames_" 
	"XFA_GetPackMode_" "XFA_HeadPtr_" "XFA_IsSkip_" "XFA_LibErr_" "XFA_LoadAnim_" 
	"XFA_OpenPackStuff_" "XFA_OpenPlayStuff_" "XFA_OpenRead_" "XFA_PackBitMap_" "XFA_PackMem_L_" 
	"XFA_PackMem_W_" "XFA_Play_" "XFA_PosOnFrame_" "XFA_PutFrame_" "XFA_PutSeqFrame_" 
	"XFA_PutSkip_" "XFA_ReadFrame_" "XFA_SaveAnim_" "XFA_SaveScreen_" "XFA_SetFramesArray_" 
	"XFA_SetPack_" "XFA_UnPackBitMap_" "XFA_UnPackBitMap_L_" "XFA_UnPackBitMap_W_" "XFA_UseCMap_" 
	"XFA_UseHead_" "XProtocolHostMon_" "XProtocolUserMon_" "XorRectRegion_" "XorRegionRegion_" 
	"ZipWindow_"))

(defvar bb2-eldoc-table nil "Table of Blitz II help strings for eldoc")
(setq bb2-eldoc-table
      #s(hash-table test equal data
		    ("acos" "(Float)"
		     "addvalue" "(bitmap#,x,y)"
		     "agablue" "(Colour Register)"
		     "agafillpalette" "palette#,r,g,b[,start_col,end_col] - fill palette with AGA r,g,b values"
		     "agagreen" "(Colour Register)"
		     "agapalblue" "(colour#)"
		     "agapalgreen" "(colour#)"
		     "agapalrgb" "Palette#,Colour Register,Red,Green,Blue"
		     "agapalred" "(colour#)"
		     "agargb" "Colour Register,Red,Green,Blue"
		     "agared" "(Colour Register)"
		     "aslfilerequest$" "Title$,Pathname$,Filename$ [,Pattern$] [,x,y,w,h]"
		     "aslfontrequest" "enable flags (1=pen 2=bckgrnd 4=style 8=drawmode 16=fixedsize)"
		     "aslpathrequest$" "Title$,Pathname$ [,x,y,w,h]"
		     "aslscreenrequest" "enable flags (1=width 2=height 4=depth 8=overscan 16=scroll)"
		     "asin" "(Float)"
		     "asyncfade" "On|Off"
		     "atan" "(Float)"
		     "ableicr_a" "(resource,mask)"
		     "ableicr_b" "(resource,mask)"
		     "abs" "(Expression)"
		     "absmouse" "X,Y"
		     "activate" "Window#"
		     "activatestring" "Window#,Id"
		     "activescreen" ";Returns ADDRESS of current Intuition screen"
		     "activewindow" ";Returns ADDRESS of current Intuition window"
		     "addappicon" "(id,text$,filename$/shape#[,x,y])"
		     "addappmenu" "(id,text$)"
		     "addappwindow" "(windownumber)"
		     "addbox" "Page#,Box#,x,y,w,h,type[,text$]|[,shape,shape]"
		     "addfirst" "(Arrayname())"
		     "addidcmp" "IDCMP_Flags"
		     "additem" "(Arrayname())"
		     "addlast" "(Arrayname())"
		     "adjustchunky" "chunky#,DeltaRed,DeltaGreen,DeltaBlue,"
		     "allfire" "([joybits])"
		     "allocfill" "for internal use only (polylib.obj)"
		     "allocmem" "(size,memtype) memtype: 0=fast 2=chip 65536=clrmem"
		     "analyzedisk" "(DriveName$) ;TRUE if device name is valid"
		     "animloop" "On|Off"
		     "appfile" "(num)"
		     "asc" "(String$)"
		     "assign" "[success=] Assign(Name$,ToPath$) ;e.g. Assign \"Blitz2:\",\"DH1:Blitz2\""
		     "assign$" ";Null-string indicates end of list"
		     "attachgtlist" "GTList#,Window#"
		     "autocookie" "On|Off"
		     "avg" "(Integer1,Integer2)"
		     "avg.l" "(Long Integer 1,Long Integer 2)"
		     "avg.q" "(Quick1,Quick2)"
		     "bblit" "Buffer#,Shape#,X,Y[,Excessonoff]"
		     "bblitmode" "BLTCON0"
		     "bload" "(filename$,[address,[,length,[offset,[memtype]]]])"
		     "bsave" "(filename$,address/bank[,length])"
		     "bank" "(bank#)"
		     "bankloc" "(bank#)"
		     "banksize" "(bank#)"
		     "beepscreen" "Screen#"
		     "bin#" "(BinString$) ;Converts binary value (in string) to decimal"
		     "bin$" "(Expression)"
		     "bitmap" "BitMap#,Width,Height,Depth"
		     "bitmaporigin" "BitMap#,x,y"
		     "bitmapoutput" "Bitmap#"
		     "bitmappoly" "numpts,*coords.w,color[,ditherbitmap]"
		     "bitmaptowindow" "Bitmap#,Window#[,srcx,srcy,destx,desty,wid,height]"
		     "bitmapwindow" "srcbitmap,destbitmap,x,y,w,h"
		     "bitmaptowindow" "Bitmap#,Window#[,srcx,srcy,destx,desty,wid,height]"
		     "bitplanesbitmap" "srcbitmap,destbitmap,planepick"
		     "blit" "Shape#,X,Y[,Excessonoff]"
		     "blitcoll" "(Shape#,x,y)"
		     "blitmode" "BLTCON0"
		     "blitternasty" "On|Off"
		     "blitzevent" ";handles user input and returns event"
		     "blitzkey" ";same as inkey$ after a bitmapinput"
		     "blitzkeys" "On|Off"
		     "blitzrepeat" "Delay,Speed"
		     "block" "Shape#,X,Y"
		     "blockscroll" "X1,Y1,Width,Height,X2,Y2[,BitMap#]"
		     "blue" "(Colour Register)"
		     "bootprog" "unit#,memoryaddress"
		     "borderpens" "Highlight Colour,Shadow Colour"
		     "borders" "[On|Off]|[Width,Height]"
		     "box" "x1,y1,x2,y2,color"
		     "boxprint" "Box#[,String$]|[Bank#,Line]"
		     "boxpropx" "Box#"
		     "boxpropy" "Box#"
		     "boxshow" "Box#[,Bitmap#,x,y]|[dx,dy]"
		     "boxstring" "(Box#)|(Page#,Box#)"
		     "boxvalue" "(Box#)|(Page#,Box#)"
		     "boxf" "x1,y1,x2,y2,color"
		     "buffer" "Buffer#,Memorylen"
		     "buttongroup" "Group"
		     "buttonid" "(GadgetList#,ButtonGroup)"
		     "cddoor" "on/off"
		     "cdpause" "on/off"
		     "cdplaytrack" "track#,numtracks"
		     "cdspeed" "speed"
		     "cdtracklength" "track#"
		     "cdtrackmins" "[offset] - mins for current track"
		     "cdtrackplaying" "- current track being played"
		     "cdtracksecs" "[offset] - secs for current track"
		     "cdupdateinfo" "- update track playing/time information"
		     "cdvolume" "volume,lengthoffade"
		     "chdir" "[success=] CHDir(Path$) ;CHange current DIRectory"
		     "cmpmem" "(source,dest,length) 0=same,-1 source<dest, +1 source>dest"
		     "cpucls" "bitmap#"
		     "cplot" "Chunky#,x,y[,color.l],[red.b,green.b,blue.b]"
		     "cpoint" "(Chunky#,x,y)"
		     "cachesoff" "bitmask"
		     "cacheson" "bitmask"
		     "call" "Address"
		     "casesense" "On|Off"
		     "centre$" "(String$,Characters)"
		     "chdir" "[success=] CHDir(Path$) ;CHange current DIRectory"
		     "changebox" "Page#,Box#,Value"
		     "changedir" "dir$"
		     "changetrackermask" "Channel_Mask"
		     "charcount" "(String$,byte) ;Returns no. occurances of 'byte' in 'string$'"
		     "checkaga" ";Returns 'TRUE' for AGA machines, otherwise returns 'FALSE'"
		     "checkprt" "-1=Printer Off|-3=Printer Offline|-4=Printer On"
		     "checktrackerid" "(TrackerModule#)"
		     "checksum" "(String$) ;Returns a unique checksum for a given string"
		     "chipfree" ";Returns largest block of free CHIP memory"
		     "chr$" "(Expression)"
		     "chunkheader" "(a$)"
		     "chunkycls" "color"
		     "chunkyconvert" "chunky#[,palette]|[,array.l(),numcols]"
		     "chunkyloc" "chunky#"
		     "chunkyplot" "x,y,color,[,CLIP]"
		     "chunkypoly" "numpts,*coords.w,color[,noblitter]"
		     "chunkytobitmap" "Chunky#,Bitmap#"
		     "chunkyvlin" "x,y1,y2,color,[,CLIP]"
		     "cipher$" "(String$) ;Create/Unencrypt a Cipher$() string"
		     "circle" "x,y,rx[,ry],color"
		     "circlef" "x,y,rx[,ry],color"
		     "clearbitmap" "bitmap#,delay[,height,offset]"
		     "clearlist" "Arrayname()"
		     "clearrexxmsg" "rexxmsg"
		     "clearstring" "GadgetList#,Id"
		     "clickbutton" "Button : 0=Left"
		     "clickmouse" ";Waits for left mouse button to be CLICKED"
		     "clipblit" "Shape#,X,Y,[Excess]"
		     "clipblitmode" "BPLCON0"
		     "closeconsole" "Console#"
		     "closedisk" "unit#"
		     "closefile" "File#"
		     "closescreen" "Screen#"
		     "closeserial" "unit#"
		     "closewindow" "Window#"
		     "cls" "[Colour]"
		     "cludgebitmap" "BitMap#,Width,Height,Depth,Memory"
		     "cludgeshapes" "shape#,numshapes,address"
		     "cludgesound" "sound#,address"
		     "col8" "(array.l(),numcols,rgb.l)"
		     "colsplit" "Colour Register,Red,Green,Blue,Y"
		     "colorchunky" "chunky#"
		     "colour" "Foreground Colour[,Background Colour]"
		     "colourrequest" "Colour#"
		     "commoditiesbase" ";Returns Commodities Library base"
		     "comparepaths" "(Path1$,Path2$) ;0=Unrelated, 1=Same Dir or File, 2=On Same Volume"
		     "con_base" "Returns pointer to console.device"
		     "copperagacol" "col#,r,g,b"
		     "coppercommand" "copins1,copins2"
		     "coppermove" "register,value"
		     "copperreset" "coplist#,startline[,ccoffset]"
		     "copperskip" "x,y"
		     "copperwait" "x,y"
		     "copybitmap" "Src BitMap#,Dest BitMap#"
		     "copybyte" "sourceaddr,destaddr,bytes"
		     "copychunky" "srcchunky#,destchunky#,[sx,sy,w,h,dx,dy]"
		     "copycolour" "sourcepal#,destpal#,colsource#,coldest#"
		     "copyfile" "[success=] CopyFile(Source$,Dest$)"
		     "copylong" "sourceaddr,destaddr,longs"
		     "copyshape" "Shape#,Shape#"
		     "copyword" "sourceaddr,destaddr,words"
		     "cos" "(Float)"
		     "crmdecrunch" "Bufferadr"
		     "createargstring" "ArgString=CreateArgString(String)"
		     "createdisplay" "CopList#[,CopList#..]"
		     "createmsgport" "*UserPort.port=CreateMsgPort(PortName$)"
		     "createrexxmsg" "MsgPtr=CreateRexxMsg(ReplyPort,Exten,Host)"
		     "currentdir$" ";Current directory name"
		     "cursor" "Thickness : <0 - block, >=0 - underline thickness"
		     "customchunky" "CopList#,CCOffset,YPos,width,height,res[,splitpos] ;4n+2"
		     "customchunkysize" "width,height"
		     "customcolors" "CopList#,CCOffset,YPos,Palette,startcol,numcols[,thru256flag]"
		     "customcop" "Copins$,Y"
		     "customsprites" "CopList#,CCOffset,YPos,NumSprites ;4n+2"
		     "customstring" "CopList#,CCOffset,YPos,Copper$"
		     "cvi" "(String$)"
		     "cvl" "(String$)"
		     "cvq" "(String$)"
		     "cycle" "Palette#"
		     "cyclepalette" "Palette#"
		     "dbcasesense" "On|Off"
		     "dbinit" "(object#,init recs, exp recs,rec struct[,keylength[,offset]])"
		     "dbload" "Database#,filename$"
		     "dbsave" "Database#,filename$"
		     "dbactive" "(Database#) Is a database active or not ?"
		     "dbadd" "(database #,record var) add record to database"
		     "dbaddfirst" "(database #,record var) add record to database"
		     "dbaddlast" "(database #,record var) add record to database"
		     "dbcurrent" "(Database#)"
		     "dbdelete" "database # delete current entry in database"
		     "dbfind" "(database #,searchstring$[,length,offset[,startrec]])"
		     "dbfindnext" "(database #)"
		     "dbfirst" "(database #) set pointer to the first database entry"
		     "dbget" "(database #,record var) get current record from database"
		     "dbisnext" "(Database#)"
		     "dbisprev" "(Database#)"
		     "dbkill" "(database #) kill current database"
		     "dblast" "(database #) set pointer to the last database entry"
		     "dblistaddr" "(database #) gives address of nodelist header"
		     "dbmemtype" "memtype"
		     "dbmodified" "(Database#)"
		     "dbnext" "(database #) set pointer to the next database entry"
		     "dbpop" "(Database#) retrieve a pushed record"
		     "dbprev" "(database #) set pointer to the previous database entry"
		     "dbpush" "(Database#) hold onto this record"
		     "dbrecs" "(database #) gives number of records in database"
		     "dbsetkey" "database #,On|Off"
		     "dbsetpos" "database #,recs"
		     "dbupdate" "database #,record variable"
		     "d_checknmove" "source_address,dest_address[,count]"
		     "d_checknmovea" "source_address,dest_address[,count]"
		     "d_checknmoveword" "source_address,dest_address[,count]"
		     "d_findstringptr" "areg5,lookfor"
		     "d_findvolume" "(volumename)"
		     "d_getsr" "buffer,SR"
		     "d_hexword" "source,address,num"
		     "date$" "days.l ;converts days since 1/1/1978 to date string"
		     "dateformat" "0=dd/mm/yyyy 1=mm/dd/yyyy"
		     "days" ";returns day calculated in last call to date$"
		     "deice" "(sourceaddr,destaddr)"
		     "decodeilbm" "Bitmap#,MemoryLocation"
		     "decodemedmodule" "MedModule#,MemoryLocation"
		     "decodemodule" "TrackerModule#,ModuleAddress"
		     "decodepalette" "Palette#,MemoryLocation[,Palette Offset]"
		     "decodeshapes" "Shape#[,Shape#],MemoryLocation"
		     "decodesound" "Sound#,MemoryLocation"
		     "decrypt" "memadr,length,wheel1,wheel2,wheel3[,mode]"
		     "defaultidcmp" "IDCMP_Flags"
		     "delappicon" "(id)"
		     "delappmenu" "(id)"
		     "delappwindow" "(windownumber)"
		     "deleteargstring" "argstring"
		     "deletemsgport" "*UserPort"
		     "deleterexxmsg" "rexxmsg.l"
		     "deplode" "Success=Startadr"
		     "depth" "(Bitmap#) ;Returns DEPTH of specified bitmap"
		     "derez" "source#,dest#,sourceadd,destadd,derez_value,height"
		     "detachgtlist" "GTList#"
		     "devicename$" "volumename$"
		     "disable" "(GadgetList#,Id)"
		     "disablebox" "Box#"
		     "diskblocks" ";Bytes per block of last drive analyzed"
		     "diskbuffer" "Bufferlen"
		     "diskcapacity" ";Capacity in bytes of last drive analyzed"
		     "diskerrors" ";No. of soft errors on last drive analyzed"
		     "diskfontbase" ";Returns DiskFont Library base"
		     "diskfree" ";No. free bytes on last analyzed disk"
		     "diskio" "unit#"
		     "diskmotor" "; Returns -1 if motor is on"
		     "diskplay" "Filename$,Channelmask[,Vol1[,Vol2...]]"
		     "diskstate" ";0=Write-Protected, 1=Validating, 2=Validated"
		     "diskstatus" "unit#"
		     "disktype$" ";4-char string ID"
		     "diskunit" ";Unit# of last drive analyzed"
		     "diskused" ";No. bytes used of last analyzed drive"
		     "diskfontbase" ";Returns DiskFont Library base"
		     "displayadjust" "CopList#,fetchwid,ddfstrt,ddfstop,diwstrt,diwstop"
		     "displaybitmap" "CopList#,bmap[,x,y] [,bmap[,x,y]]"
		     "displaycontrols" "CopList#,BPLCON2,BPLCON3,BPLCON4"
		     "displaydblscan" "CopList#,Mode[,copoffset]"
		     "displaygenlock" "BPLCON0"
		     "displaypalette" "CopList#,Palette# [,coloroffset] [,coloroffset,bankoffset]"
		     "displayrgb" "CopList#,Register,line,r,g,b[,copoffset] ;ecs=1 aga=4"
		     "displayrainbow" "CopList#,Register,Palette[,copoffset] ;ecs=1 aga=4"
		     "displayscroll" "CopList#,&xpos.q(n),&xpos.q(n)[,Offset]"
		     "displaysprite" "CopList#,Sprite#,X,Y,Sprite Channel"
		     "displayuser" "CopList#,Line,String[,Offset]"
		     "docolsplit" "cols_adr,numlines,colour_register"
		     "dosbase" ";Returns DOS Library base"
		     "dosbufflen" "Bytes"
		     "doserror$" ";Reason for last failed DOS action"
		     "dos_base" "Returns pointer to dos.library"
		     "duplicatepalette" "SrcPalette#,DestPalette#"
		     "easyrequest" "Result=EasyRequest([#Window,]title$,body$,gtext$)"
		     "edit" "([DefaultValue,]Characters)"
		     "edit$" "([DefaultString$,]Characters)"
		     "editfrom" "[Characterpos]"
		     "enable" "(GadgetList#,Id)"
		     "enablebox" "Box#"
		     "encrypt" "memadr,length[,wheel1,wheel2,wheel3]"
		     "entrybits$" ";Possible bits: H, S, A, P, R, W, E, D"
		     "entrycomment$" ";Comment String of last Examined object or entry"
		     "entrydate" ";Date$(EntryDate) returns date of last Examined object or entry"
		     "entrydir" ";True if last Examined object or entry is a directory"
		     "entryhour" ";Hour of last Examined object or entry"
		     "entrymins" ";Minutes of last Examined object or entry"
		     "entryname$" ";Filename of last Examined object or entry"
		     "entrysecs" ";Seconds of last Examined object or entry"
		     "entrysize" ";Bytesize of last Examined object or entry"
		     "eof" "(File#)"
		     "erase" "bank"
		     "examine" "[success=] Examine(Pathname$)"
		     "exec" "DosCommands$ ;String is executed"
		     "exists" "(Filename$)"
		     "exp" "(Float)"
		     "extractlabel" "label_string"
		     "ffpbase" ";Returns FFP Math Library base"
		     "finverse" "inversemode"
		     "flocate" "x,y"
		     "fnprint" "a$"
		     "fnsclip" "xmin,ymin,xmax,ymax"
		     "fnsclipoutput" "- set clipping zone to output bitmap size"
		     "fnsheight" "(fontnum)"
		     "fnsink" "colour"
		     "fnslength" "(fontnum,a$[,prefs])"
		     "fnsload" "(fontname$,fontslot)"
		     "fnsorigin" "[x,y]"
		     "fnsoutput" "bitmap[,clip_update (On|Off)]"
		     "fnsprefs" "prefs[,colour]"
		     "fnsprint" "fontnum,x,y,a$/string_address[,prefs,colour]"
		     "fnssettab" "tab_size - set tab size in pixels"
		     "fnsunload" "fontslot"
		     "fnsunderline" "(fontnum)"
		     "fnsunload" "fontslot"
		     "fnsversion" "- returns quick, lastest version=0.992"
		     "fnswidth" "(fontnum)"
		     "fprint" "a$"
		     "fprintdetoke" "tokenised_string,cio,typ,lineoffset"
		     "fyoffset" "pixel_offset - offset from vertical y cursor to print at"
		     "fadein" "Palette#[,Rate[,Low Colour,High Colour]]"
		     "fadeinbitmap" "bitmapsource#,bitmapdest#,delay[,height,offset1,offset2]"
		     "fadeout" "Palette#[,Rate[,Low Colour,High Colour]]"
		     "fadepalette" "SrcPalette#,DestPalette#,Brightness.q"
		     "fastfree" ";Returns largest block of free FAST memory"
		     "fields" "File#,Var1[,Var2...]"
		     "filefilter" "Show$,Hide$"
		     "fileinput" "File#"
		     "fileoutput" "File#"
		     "filepart$" "(FullPath$) ;\"DH0:S/User-Startup\" -> \"User-Startup\""
		     "filereqsize" "Lines High,File Length,Device Length,"
		     "filerequest$" "Title$,Pathname$,Filename$"
		     "fileseek" "File#,Position"
		     "filesize" "(filename$)"
		     "filestructure" "Pointer to file requester structor"
		     "fillmem" "address,length[,value]"
		     "fillpalette" "palette#,r,g,b[,start_col,end_col] - fill palette with r,g,b values"
		     "fillrexxmsg" "rexxmsg,&FillStruct"
		     "filter" "On|Off"
		     "findscreen" "Screen#[,Title$]"
		     "findtoolnumber" "(tooltype#)"
		     "findtooltype" "(tooltype$)"
		     "findtoolvalue" "(tooltype$)"
		     "findvolume" "(volumename)"
		     "firstitem" "(Arrayname())"
		     "floatmode" "Mode : -1=standard, 0=guess, 1=exp"
		     "floodfill" "x,y,colour [,border colour]"
		     "flstostr$" "(startaddr of FLS, maxlength)"
		     "flushbuffer" "Buffer#"
		     "flushevents" "[IDCMP_Flag]"
		     "flushqueue" "Queue#"
		     "forcentsc" ";Forces screen mode to NTSC (60hz)"
		     "forcepal" ";Forces screen mode to PAL (50hz)"
		     "format" "FormatString"
		     "formattrack" "unit#,track#,buffer[,numtracks]"
		     "frac" "(Expression)"
		     "frames" "(Anim#)"
		     "freebank" "bank#"
		     "freechunky" "Chunky#"
		     "freefill" "frees memory allocated for 2d fill routines"
		     "freeiconobject" "- free the disk object of a icon"
		     "freemacrokey" "Rawkey,Qualifier"
		     "freemem" "address,size"
		     "freepage" "Page#"
		     "freetrackermodule" "TrackerModule#"
		     "freezonetable" "table#"
		     "freq" "Channelmask,period"
		     "fromcli" "result=FromCLI"
		     "fullpath$" "(PathPart$,FilePart$) ;"DH0:S" + "User-Startup" -> "DH0:S/User-Startup""
		     "funclibversion" "V1.36 29/1/95 Written By S Matty (C) LES"
		     "gplot" "Chunky#,x,y,color.b"
		     "gpoint" "(Chunky#,x,y)"
		     "gtarrowsize" "size"
		     "gtbevelbox" "GTList#,x,y,w,h,flags"
		     "gtbutton" "GTList#,id,x,y,w,h,Text$,flags"
		     "gtchangelist" "GTList#,id [ ,List() ]"
		     "gtcheckbox" "GTList#,id,x,y,w,h,Text$,flags"
		     "gtcycle" "GTList#,id,x,y,w,h,Text$,flags,Options$[,active]"
		     "gtdisable" "GTList#,Id"
		     "gtenable" "GTList#,Id"
		     "gtfreegadget" "GTList#,id"
		     "gtgadptr" "(GTList#,id)"
		     "gtgetattrs" "(GTList#,id,Tag)"
		     "gtgetinteger" "GTList#,id"
		     "gtgetstring" "GTList#,id"
		     "gtgimmecludge" "On/Off"
		     "gtinteger" "GTList#,id,x,y,w,h,Text$,flags,default"
		     "gtlistview" "GTList#,id,x,y,w,h,Text$,flags,list()[,selected[,top]]"
		     "gtmx" "GTList#,id,x,y,w,h,Text$,flags,Options$[,active]"
		     "gtnumber" "GTList#,id,x,y,w,h,Text$,flags,value"
		     "gtpalette" "GTList#,id,x,y,w,h,Text$,flags,depth[,Color]"
		     "gtscroller" "GTList#,id,x,y,w,h,Text$,flags,Visible,Total[,Top]"
		     "gtsetattrs" "GTList#,id [,Tag,Value...]"
		     "gtsethighlight" "GTList#,id,value"
		     "gtsetinteger" "GTList#,id,value"
		     "gtsetstring" "GTList#,id,string$"
		     "gtshape" "GTList#,id,x,y,flags,Shape#[,Shape#]"
		     "gtslider" "GTList#,id,x,y,w,h,Text$,flags,Min,Max[,Level]"
		     "gtstatus" "GTList#,Id"
		     "gtstring" "GTList#,id,x,y,w,h,Text$,flags,MaxChars [,default$]"
		     "gttagvalue" "([tagvalue])"
		     "gttags" "Tag,Value [,Tag,Value...]"
		     "gttext" "GTList#,id,x,y,w,h,Text$,flags,Display$"
		     "gttoggle" "GTList#,Id [,On|Off]"
		     "gadgetborder" "X,Y,Width,Height"
		     "gadgetjam" "Jammode"
		     "gadgetpens" "Foreground Colour[,Background Colour]"
		     "gadgetstatus" "(GadgetList#,Id)"
		     "gameb" "(Port)"
		     "get" "File#,Record"
		     "getassigns" "(Type) ;Types are: 0=Devices, 1=Directories 2=Volumes"
		     "getccoffset" "- get current custom copper offset"
		     "getcopins$" "copdata"
		     "getcustomreg" "address"
		     "getcustomregadr" "name$"
		     "getenv$" "(Name$) ;Returns DOS environmental variable"
		     "gethex$" "value,mode"
		     "gethexadr$" "*value,mode"
		     "geticoninfo" "success.w=GetIconInfo(Info#,filename$)"
		     "geticonobject" "(filename$)"
		     "getlocal$" "(Name$) ;Returns DOS local variable"
		     "getlocalestr" "(#StringNumber,DefaultString$)"
		     "getmedinstr" "Channel"
		     "getmednote" "Channel"
		     "getmedvolume" "Channel"
		     "getmodulename$" "(TrackerModule#)"
		     "getprogmode" "mode,buffer"
		     "getresultstring" "String=GetResultString(rexxmsg)"
		     "getrexxcommand" "String=GetRexxCommand(rexxmsg,ARGNum)"
		     "getrexxresult" "Result=GetRexxResult(rexxmsg,ResultNum)"
		     "getstring$" "(Title$,Default$,Visable size,Max length)"
		     "gettrackerlocation" "(TrackerModule#)"
		     "gettrackersize" "(TrackerModule#)"
		     "getwheel" "wheel#"
		     "getzonex1" "(zone) - returns the start x pos of a zone"
		     "getzonex2" "(zone) - returns the end x pos of a zone"
		     "getzoney1" "(zone) - returns the start y pos of a zone"
		     "getzoney2" "(zone) - returns the end pos of a zone"
		     "getashape" "Shape#,X,Y,Width,Height"
		     "getasprite" "Sprite#,Shape#"
		     "gfx_base" "Returns pointer to graphics.library"
		     "graphicsbase" ";Returns Graphics Library base"
		     "green" "(Colour Register)"
		     "greychunky" "chunky#"
		     "hcos" "(Float)"
		     "hpropbody" "(GadgetList#,Id)"
		     "hproppot" "(GadgetList#,Id)"
		     "hsin" "(Float)"
		     "htan" "(Float)"
		     "handle" "Shape#,X,Y"
		     "hardcopy" "Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags"
		     "hardcopy" "Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags"
		     "hex#" "(HexString$) ;Converts hexadecimal (in string) value to decimal"
		     "hex$" "(Expression)"
		     "hidescreen" "Screen#"
		     "hours" ";gets system time and returns hour of day"
		     "ilbmgrab" "sourceaddr,bitmap#,palette#"
		     "ilbminfo" "Filename$"
		     "ilbmpalette" "(sourceaddr,palette#[,#offset)"
		     "iconbase" ";Returns Icon Library base"
		     "icondeftool" "tool$"
		     "icondeftool$" "deftool$=IconDefTool$(Info#)"
		     "iconrender" "render_flags"
		     "iconstack" "stackSize.l=IconType(Info#)"
		     "iconsubtool$" "boolean.w=IconSubTool$(type$,sub$) -1=Found"
		     "icontool$" "tool$=IconTool$(Info#,type$)"
		     "icontype" "type.w=IconType(Info#)"
		     "implode" "Error/CrunchedLen=Bufferadr,DataLen"
		     "infront" "Sprite Channel"
		     "infrontb" "Sprite Channel"
		     "infrontf" "Sprite Channel"
		     "index" "List() ;Returns index from top of LIST"
		     "initanim" "Anim#[,BitMap#]"
		     "initbank" "bank#,size,memtype ;0=fast 2=chip 65536=clrmem"
		     "initchunky" "Chunky#,width,height,flags (1=24bit 2=8bit)"
		     "initcoplist" "CopList#[,type]|[,ypos,height,type,sprites,colors,numcustoms]"
		     "initpage" "Page#,BitMap#,NumBoxes"
		     "initpalette" "Palette#,NumColors"
		     "initshape" "Shape#,Width,Height,Depth"
		     "initsound" "Sound#,Length[,Period[,Repeat]]"
		     "initzoomxy" "source#,dest#,sourceadd,destadd"
		     "inkey$" "[(Characters)]"
		     "innercls" "[Colour]"
		     "installfns" "(fontnum,address)"
		     "instr" "(String$,Findstring$[,Startpos])"
		     "int" "(Expression)"
		     "int_base" "Returns pointer to intuition.library"
		     "intuitionbase" ";Returns Intuition Library base"
		     "islocale" "<>0 if locale exists"
		     "isrexxmsg" "Boolean=IsRexxMsg(rexxmsg)"
		     "itemstacksize" "Max Items"
		     "jadaptorstatus" "On/Off - status of four player adaptor reading"
		     "jfire" "(port)"
		     "jhoriz" "(port)"
		     "jvert" "(port)"
		     "joyy" "(Port)"
		     "joyc" "(Port)"
		     "joyb" "(Port)"
		     "joyr" "(Port)"
		     "joyx" "(Port)"
		     "joyy" "(Port)"
		     "jumpmed" "Pattern#"
		     "killfile" "Filename$"
		     "killgreychunky" "chunky#"
		     "killitem" "Arrayname()"
		     "lcase$" "(String$)"
		     "lecludgeshapes" "shape#,shape#,address,palette#[,copymemflag]"
		     "lecompressshapes" "True|False"
		     "leinitshape" "shape#,width,height,depth"
		     "leloadshapes" "shape#[,shape#],filename$[,palette#]"
		     "lesaveshapes" "shape#,shape#,filename$[,palette#]"
		     "lescanshapes" "startshape#,endshape#"
		     "lset$" "(String$,Characters)"
		     "largest" "(Integer1,Integer2)"
		     "largest.l" "(Long Integer1,Long Integer2)"
		     "largest.q" "(Quick1,Quick2)"
		     "largestfree" ";Returns largest block of memory available"
		     "lastitem" "Arrayname()"
		     "left$" "(String$,Length)"
		     "len" "(String$)"
		     "length" "(bank)"
		     "line" "[x1,y1,]x2,y2,color[,width]"
		     "lisa" "-- returns Lisa chip version"
		     "listbase" "(list)"
		     "loadanim" "Anim#,Filename$[,Palette#]"
		     "loadbank" "bank#,filename$[,memtype]"
		     "loadbitmap" "BitMap#,Filename$[,Palette#]"
		     "loadblitzfont" "BlitzFont#,Fontname.font$"
		     "loadchunky" "Chunky#,IFFfilename$"
		     "loadfont" "IntuiFont#,Fontname.font$,Y size [,style]"
		     "loadiff" "(filename$,bitmap[,palette])"
		     "loadmedmodule" "MedModule#,Name"
		     "loadmodule" "Module#,Filename$"
		     "loadpalette" "Palette#,Filename$[,Palette Offset]"
		     "loadscreen" "Screen#,Filename$[,Palette#]"
		     "loadshape" "Shape#,Filename$[,Palette#]"
		     "loadshapes" "Shape#[,Shape#],Filename$"
		     "loadsound" "Sound#,Filename$"
		     "loadsprites" "Sprite#[,Sprite#],Filename$"
		     "loadtape" "Tape#,filename$"
		     "loadtrackermodule" "(TrackerModule#,Name)"
		     "loc" "(File#)"
		     "locate" "X,Y"
		     "lof" "(File#)"
		     "log" "(Float)"
		     "log10" "(Float)"
		     "loopsound" "Sound#,Channelmask[,Vol1[,Vol2...]]"
		     "macrokey" "Tape#,Rawkey,Qualifier"
		     "makecommodity" "(name$,title$,description$"
		     "makecookie" "Shape#"
		     "makedir" "(dirname$)"
		     "matchtoolvalue" "(tooltype$,value$)"
		     "matchwild" "(String$) ;TRUE=Match, FALSE=No Match"
		     "max" "(a,b)"
		     "maxselect$" "Path$=(Title$,File$,Path$,Flags,number of files)"
		     "menuchecked" "(MenuList#,Menu,Item[,Subitem])"
		     "menucolour" "Colour"
		     "menugap" "X Gap,Y Gap"
		     "menuitem" "MenuList#,Flags,Menu,Item,Itemtext$[,Shortcut$]"
		     "menustate" "MenuList#[,Menu[,Item[,Subitem]]],On|Off"
		     "menutitle" "MenuList#,Menu,Title$"
		     "menus" "On|Off"
		     "mid$" "(String$,Startchar[,Length])"
		     "midhandle" "Shape#"
		     "min" "(a,b)"
		     "mins" ";returns minutes calculated at last call to hour"
		     "mixpalette" "Palette#,Palette#,DestPalette#,fraction"
		     "mki$" "(Integer)"
		     "mkl$" "(Long)"
		     "mkq$" "(Quick)"
		     "modulepatterns" "(Module #)"
		     "modulepositionjump" "(Position#)"
		     "modulesamplename" "(Module#,Sample#[0-30])"
		     "moduletochip" "(TrackerModule#)"
		     "months" ";returns month calculated in last call to date$"
		     "moreentries" ";True if more entries in Examined directory"
		     "motoroff" "unit#"
		     "motoron" "unit#"
		     "mouse" "On|Off"
		     "mousearea" "Minx,Miny,Maxx,Maxy"
		     "mousebutton" "Button,On|Off : 0=Left"
		     "movefile" "[success=] MoveFile(Source$,Dest$)"
		     "movescreen" "Screen#,deltax,deltay"
		     "nprint" "Expression[,Expression...]"
		     "nprintcon" "Console#,Expression"
		     "namefile" "[success=] Rename(Oldfilename$,Newfilename$)"
		     "newpalettemode" "On|Off"
		     "newtooltype" "(tooltype$,value$[,status])"
		     "newzonetable" "table#,num_zones"
		     "nextbank" "[startbank]"
		     "nextfile$" "Returns next file form MaxSelect$"
		     "nextframe" "Anim#"
		     "nextitem" "(Arrayname())"
		     "nomoreentries" ";Release lock on currently Examined object"
		     "null" "(String$) ;Returns address of null-termed string"
		     "numdays" "date$ ;converts dd/mm/yyyy to days since 1/1/1978"
		     "numpars" "pars.w=NumPars"
		     "opencd" "[devicename,unit] - open a CD compatible device"
		     "openconsole" "#Window,#Console"
		     "opendisk" "unit#"
		     "openfile" "(File#,Filename$)"
		     "openserial" "device$,unit#,baud,io_serflags"
		     "outtext" "x,y,rastport,address/string"
		     "outtextpen" "rastport,pen"
		     "pcoll" "(Sprite Channel)"
		     "picreaterequest" "(Title$,Min,Max [,NoGagdet])"
		     "piupdaterequest" "(Value)"
		     "pload" "(filename$,address)"
		     "ppdecrunch" "Bufferadr,Bufferend,Destinationadr"
		     "packpbm" "sourceaddr,destaddr,length"
		     "paladjust" "palette#,ratio.q[,start_col,end_col]"
		     "palblue" "(colour#)"
		     "palgreen" "(colour#)"
		     "palrgb" "Palette#,Colour Register,Red,Green,Blue"
		     "palred" "(colour#)"
		     "paletteinfo" "palette#"
		     "paletterange" "Palette#,StartCol,EndCol,r0,g0,b0,r1,g1,b1"
		     "par$" "parameter$=Par$(Paramter#)"
		     "parpath$" "path$=ParPath$(Par#,#type)"
		     "pathpart$" "(FullPath$) ;\"DH0:S/User-Startup\" -> \"DH0:S\""
		     "peek" "[.Type](Address)"
		     "peekmax$" "(address,max_chars)"
		     "peeksound" "(Sound#,Offset)"
		     "peekto$" "(Address,byte)"
		     "peeks$" "(Address,Length)"
		     "peekto$" "(Address,byte)"
		     "phoneticspeak" "phonetic string"
		     "playback" "[Tape#]"
		     "playmodule" "Module#"
		     "plot" "X,Y,Colour"
		     "point" "X,Y,Colour"
		     "pointer" "Sprite#,Sprite Channel"
		     "poke" "[.Type] Address,Data"
		     "poly" "numpts,*coords.w,color"
		     "polyf" "numpts,*coords.w,color[,color2]"
		     "popitem" "Arrayname()"
		     "positionmouse" "x,y"
		     "positionsuperbitmap" "x,y"
		     "positionsuperbitmap" "x,y"
		     "previtem" "Arrayname()"
		     "print" "Expression[,Expression...]"
		     "printcon" "Console#,Expression"
		     "processchunky" "chunky#,contrast"
		     "propgadget" "GadgetList#,X,Y,Flags,Id,Width,Height"
		     "prtcommand" "Command,Para1,Para2,Para3,Para4"
		     "prttext" "String"
		     "pushitem" "Arrayname()"
		     "put" "File#,Record"
		     "puticonobject" "(filename$[,icontype]|[x,y])"
		     "qabs" "(Quick)"
		     "qangle" "(Src X,Src Y,Dest X,Dest Y)"
		     "qblit" "Queue#,Shape#,X,Y[,Excessonoff]"
		     "qblitmode" "BLTCON0"
		     "qfrac" "(Quick)"
		     "qlimit" "(Quick,Low,High)"
		     "qwrap" "(Quick,Low,High)"
		     "queue" "Queue#,Max Items"
		     "quickplay" "On|Off"
		     "quiet" "ChannelMask ;Stops specified currently playing sounds"
		     "quiettrap" "On|Off"
		     "rgb" "Colour Register,Red,Green,Blue"
		     "rianiminit" "(address,bitmap#,palette# [,xy_offset]|[,x,y])"
		     "rinextanimframe" "(bitmap#)"
		     "rrandomize" "Seed"
		     "rrnd" "(Low,High)"
		     "rset$" "(String$,Characters)"
		     "rtasyncpaletterequest" "(Title$,FirstColour)"
		     "rtasyncrequest" "(Title$,BodyText$,GadgetText$)"
		     "rtezflagsrequest" "(Title$,BodyText$,GadgetText$,IDCMPFlags [,ReqPosition])"
		     "rtezfontrequest" "(Title$)"
		     "rtezfreepattern" "Requester#"
		     "rtezgetlong" "(Title$,BodyText$ [,DefaultValue])"
		     "rtezgetlongrange" "(Title$,BodyText$,Min,Max [,DefaultValue])"
		     "rtezgetstring" "(Title$,BodyText$,MaxChars [,DefaultString])"
		     "rtezloadfile" "(Title$,Filename$)"
		     "rtezmultiloadfile" "(Title$)"
		     "rtezpaletterequest" "(Title$,FirstColour)"
		     "rtezpathrequest" "(Title$)"
		     "rtezrequest" "(Title$,BodyText$,GadgetText$ [,ReqPosition [,DefaultResponse,Flags]])"
		     "rtezsavefile" "(Title$,Filename$)"
		     "rtezscreenmoderequest" "(Title$ [,DisplayFlags])"
		     "rtezsetdefaultdirectory" "Requester#,Directory$"
		     "rtezsetpattern" "Requester#,Pattern$"
		     "rtfilerequest" "(Title$,FileName$,TagList)"
		     "rtlockwindow" "(Window#)"
		     "rtrequest" "(BodyText$,GadgetText$,TagList)"
		     "rtunlockwindow" "Window#,Lock"
		     "rastport" "(Window#)"
		     "rawstatus" "(Rawkey)"
		     "remap" "colour# to replace,destination colour# [,BitMap destintion"
		     "readchunky" "Chunky#,rawfilename$"
		     "readfile" "(File#,Filename$)"
		     "readmem" "File#,Address,Length"
		     "readsector" "unit#,sector#,buffer[,numsectors]"
		     "readserial" "(unit#[,flags 1=wait on])"
		     "readserialmem" "unit#,Address,Length"
		     "readserialstring" "(unit#)"
		     "reboot" "-- performs a cold reboot"
		     "record" "[Tape#]"
		     "rectshit" "(X1,Y1,Width1,Height1,X2,Y2,Width2,Height2)"
		     "red" "(Colour Register)"
		     "redocolsplit" "cols_adr,numlines,ccoffset"
		     "redraw" "Window#,Id"
		     "redrawbox" "Box#"
		     "reducex2" "source#,dest#,sourceadd,destadd,width,height"
		     "relmouse" "X Offset,Y Offset"
		     "removefns" "fontnum"
		     "rename" "(oldfilename$,newfilename$)"
		     "renderpoly" "numpts,*coords.w,color"
		     "rendertobitmap" "BitMap#[,DitherBitMap#]"
		     "rendertochunky" "CopList#[,split]"
		     "repeats" "(String$) ;Returns # repetitive characters at front of string"
		     "replace$" "(String$,Findstring$,Replacestring$)"
		     "replyrexxmsg" "rexxmsg,Result1,Result2,ResultString"
		     "reqcolours" "Text,Detail,Block[,File,Dir,Device[,GadText,GadBox,StringName,StringBox,Frame]]"
		     "reqfilerequest$" "(Title$,File$,Path$,Flags)"
		     "reqfontsize" "Returns font size"
		     "req_base" "Returns pointer to req.library"
		     "request" "(Title$,text$,button$) ;OS 2.0 & above System Requester"
		     "reserve" "(length)|(bank,length[,requirements])"
		     "resetlist" "Arrayname()"
		     "resetstring" "GadgetList#,Id"
		     "resettimer" ";Resets timer to zero 'Ticks.'"
		     "rex_base" "Returns pointer to RexxSys.library ?"
		     "rexxerror" "ErrorString=RexxError(ErrorCode)"
		     "rexxevent" "rexxmsg=RexxEvent(PortAddress)"
		     "rexxsysbase" ";Returns RexxSys Library base"
		     "rexxsysbase" ";Returns RexxSys Library base"
		     "right$" "(String$,Length)"
		     "rnd" "[(Range)]"
		     "rotate" "Shape#,Angle Ratio"
		     "rrandomize" "Seed"
		     "rrnd" "(Low,High)"
		     "run" "[*Process=] Run(Filename$,Args$[,StackSize])"
		     "sblit" "Stencil#,Shape#,X,Y[,Excessonoff]"
		     "sblitmode" "BLTCON0"
		     "scoll" "(Sprite Channel,Sprite Channel)"
		     "space$" "(number of spaces)"
		     "safetoblit" "shape,x,y"
		     "savebank" "bank#,filename$"
		     "savebitmap" "BitMap#,Filename$[,Palette#]"
		     "savecmap" "palette#,filename$"
		     "savechunky" "Chunky#,IFFfilename$"
		     "savepalette" "Palette#,Filename$"
		     "savescreen" "Screen#,Filename$"
		     "saveshape" "Shape#,Filename$[,Palette#]"
		     "saveshapes" "Shape#,Shape#,Filename$"
		     "savesprites" "Sprite#,Sprite#,Filename$"
		     "savetape" "Tape#,Filename$"
		     "scale" "Shape#,X Ratio,Y Ratio[,Palette#]"
		     "scalechunkyx" "srcchunky#,destchunky#,newwidth"
		     "scalechunkyy" "srcchunky#,destchunky#,newheight"
		     "screen" "[Screen#,Mode[,Title$]]|[Screen#,X,Y,W,H,D,Viewmode,Title$,Dpen,Bpen[,BitMap#]"
		     "screenheight" ";Returns height in pixels of active screen"
		     "screenpens" "Text,Shine,Shadow,Fill,FillText,Background,HighLight"
		     "screentags" "Screen#,Title$ [&TagList] or [[,Tag,Data]...]"
		     "screenwidth" ";Returns width in pixels of active screen"
		     "screensbitmap" "Screen#,BitMap#"
		     "scroll" "X1,Y1,Width,Height,X2,Y2[,BitMap#]"
		     "searchbegin" "(String$,byte,# from Begin) ;Searches string for Nth byte"
		     "searchend" "(String$,byte,# from End) ;Searches string backwards for Nth byte"
		     "searchmem" "type,value,start_ad,end_ad"
		     "secs" ";returns seconds calculated at last call to hour"
		     "selectbox" "[Box#]|[x+,y+][0,x,y] ;deselects previously selected"
		     "selectmode" "1=Box, 0=Inverse"
		     "sendrexxcommand" "rexxmsg,CommandString,ActionCodes"
		     "serialevent" "(unit#)"
		     "setblwait" "Wait move for line 256 (eg:$ffe1fffe"
		     "setbplcon0" "BPLCON0 Default"
		     "setbits" "[success=] SetBits(Bits$,Filename$) ;<HSPARWED>"
		     "setbox" "Box#[,Value]|[xprop,yprop]"
		     "setboxcolor" "Box#,color"
		     "setboxstring" "Box#,String$"
		     "setboxtitle" "Box#,String$"
		     "setcoll" "Colour,Bitplanes[,Playfield 1=front, 2=back]"
		     "setcollhi" "Bitplanes"
		     "setcopybuffer" "BufferSize ;Default is 4096 bytes, min. 1024 bytes"
		     "setcxstatus" "on|off"
		     "setcycle" "Palette#,Cycle,Low Colour,High Colour[,Speed]"
		     "setenv" "[success=] SetEnv(Name$,Value$) ;Sets DOS environmental variable"
		     "seteventfilter" "preprocess,postprocess"
		     "setfilecomment" "[success=] SetFileComment(Filename$,Comment$)"
		     "setgadgetstatus" "(GadgetList#,Id,Value)"
		     "sethprop" "GadgetList#,Id,Pot,Body"
		     "sethotkey" "(hotkeynum,hotkey$)"
		     "seticr_a" "(resource,mask)"
		     "seticr_b" "(resource,mask)"
		     "seticonhit" "width,height"
		     "seticontype" "object_type"
		     "setlocal" "[success=] SetLocal(Name$,Value$) ;Sets DOS local variable"
		     "setmedmask" "Channel Mask"
		     "setmedvolume" "Volume"
		     "setmenu" "Menulist#"
		     "setpagepens" "Page#,c0,c1,c2,c3 (defaults: 3,1,2,3)"
		     "setperiod" "Sound#,Period"
		     "setserialbuffer" "unit#,bufferlength"
		     "setseriallens" "unit#,readlen,writelen,stopbits"
		     "setserialparams" "unit#"
		     "setstring" "GadgetList#,Id,String$"
		     "settextgadget" "GadgetList#,Id,Text$"
		     "settoolvalue" "(tooltype$,value$[,status])"
		     "setvprop" "GadgetList#,Id,Pot,Body"
		     "setvoice" "rate(150),pitch(110),expression(1),sex,volume(64),freq(22200)"
		     "setwildstring" "[result=] SetWildString(Pattern$) ;0=Failed, 1=Found WildCards, 2=No WildCards"
		     "setzone" "num,x1,y1[,x2,y2]|[,radius]"
		     "setzonemode" "mode"
		     "setuplesdebug" "token_addr,tokenise"
		     "sgn" "(Expression)"
		     "shapegadget" "GadgetList#,X,Y,Flags,Id,Shape#[,Shape#]"
		     "shapeheight" "(Shape#)"
		     "shapeitem" "MenuList#,Flags,Menu,Item,Shape#"
		     "shapespritehit" "(Shape#,X,Y,Sprite#,X,Y)"
		     "shapesub" "MenuList#,Flags,Menu,Item,Subitem,Shape#"
		     "shapetoicon" "shape"
		     "shapewidth" "(Shape#)"
		     "shapesbitmap" "Shape#,BitMap#"
		     "shapeshit" "(Shape#,X,Y,Shape#,X,Y)"
		     "show" "Bitmap#[,X,Y]"
		     "showb" "Bitmap#[,X,Y[,ShowF X]]"
		     "showbitmap" "[BitMap#]"
		     "showbitmap" "[BitMap#]"
		     "showf" "Bitmap#[,X,Y[,ShowB X]]"
		     "showpalette" "Palette#"
		     "showrequesters" "[0=Cancel] [1=On Workbench Screen] [2=In Current Window]"
		     "showscreen" "Screen#"
		     "showsprite" "Sprite#,X,Y,Sprite Channel"
		     "showstencil" "Buffer#,Stencil#"
		     "sin" "(Float)"
		     "sizelimits" "Min Width,Min Height,Max Width,Max Height"
		     "slice" "[Slice#,Y,Flags]|[Slice#,Y,Width,Hite,Flgs,Bitplns,Sprts,Colrs,Fscrnw,Bscrnw]"
		     "smallest" "(Integer1,Integer2)"
		     "smallest.l" "(Long Integer1,Long Integer2)"
		     "smallest.q" "(Quick1,Quick2)"
		     "sort" "Arrayname()"
		     "sortlist" "Arrayname(),sizeof .type\offset"
		     "sound" "Sound#,Channelmask[,Vol1[,Vol2...]]"
		     "sounddata" "Sound#,Offset,Data"
		     "space$" "(number of spaces)"
		     "speak" "string"
		     "spotbox" "; returns box that mouse is over"
		     "spritemode" "0=16 1=32 2=64"
		     "spriteshit" "(Sprite#,X,Y,Sprite#,X,Y)"
		     "sqr" "(Float)"
		     "start" "(bank)"
		     "startmedmodule" "MedModule#"
		     "starttracker" "(TrackerModule#)"
		     "stencil" "Stencil#,BitMap#"
		     "str$" "(Expression)"
		     "strtofls" "string$,destvar,maxlength[,fillchar]"
		     "string$" "(String$,Repeats)"
		     "stringgadget" "GadgetList#,X,Y,Flags,Id,Maxlen,Width"
		     "stringsort" "list,sizeof.type[,offset] - sort from start of list"
		     "stringsortdir" "direction"
		     "stringsortitem" "list,sizeof.type[,offset] - sort from current list item"
		     "stringtext$" "(GadgetList#,Id)"
		     "striplead$" "(String$,Ascii)"
		     "striptrail$" "(String$,Ascii)"
		     "subidcmp" "IDCMP_Flags"
		     "subitem" "MenuList#,Flags,Menu,Item,Subitem,Subitemtext$[,Shortcut$]"
		     "subitemoff" "X Offset,Y Offset"
		     "swapbank" "(sourcebank,destbank)"
		     "systemdate" "Returns system date as number of days since 1/1/1978"
		     "tan" "(Float)"
		     "tapetrap" "[Tape#]"
		     "taskname$" "task"
		     "textgadget" "GadgetList#,X,Y,Flags,Id,Text$"
		     "textrequest" "(Text,Title,Left Text[,[Middle Text,]Right Text])"
		     "texttimeout" "Timeout Seconds"
		     "ticks" ";'ticks' since last ResetTimer (1/50 secs. PAL, 1/60 NTSC)"
		     "timer" "-- returns number of 50ths since machine startup"
		     "toggle" "GadgetList#,Id [,On|Off]"
		     "togglebox" "Box#"
		     "trackervolume" "(Volume Range: 0-64)"
		     "translate$" "returns phoneme translation of a string"
		     "type" "String$"
		     "ucase$" "(String$)"
		     "ustr$" "(Expression)"
		     "unbuffer" "Buffer#"
		     "unleft$" "(String$,Length)"
		     "unpackpbm" "sourceaddr,destaddr,length,destlength"
		     "unqueue" "Queue#[,BitMap#]"
		     "unright$" "(String$,Length)"
		     "unsetenv" "[success=] UnSetEnv(Name$) ;Removes DOS environmental variable"
		     "unsetlocal" "[success=] UnSetLocal(Name$) ;Removes DOS local variable"
		     "unpackiff" "(sourceaddr,bitmap#[,numlines,xy_offset])"
		     "usecatalog" "Catalogname"
		     "usezonetable" "- select a zone table for use"
		     "vpropbody" "(GadgetList#,Id)"
		     "vproppot" "(GadgetList#,Id)"
		     "vwaitpos" "RasterLine"
		     "val" "(String$)"
		     "viewport" "(Screen#)"
		     "voiceloc" "returns location of newvoice struct"
		     "volume" "Channelmask,Vol1[,Vol2...]"
		     "vwaitpos" "RasterLine"
		     "wblit" "Shape#,x,y"
		     "wbox" "X1,Y1,X2,Y2,Colour"
		     "wcircle" "X,Y,Radius,Colour"
		     "wcls" "[Colour]"
		     "wcolour" "Foreground Colour[,Background Colour]"
		     "wellipse" "X,Y,X Radius,Y Radius,Colour"
		     "wjam" "Jammode"
		     "wline" "X1,Y1,X2,Y3[,Xn,Yn...],Colour"
		     "wlocate" "Cursor x,Cursor y"
		     "wmove" "X,Y"
		     "wplot" "X,Y,Colour"
		     "wpointer" "Shape#"
		     "wscroll" "X1,Y1,X2,Y2,Delta X,Delta Y"
		     "wsize" "Width,Height"
		     "wtitle" "windowtitle$,screentitle$"
		     "waitfor" "(IDCMP Code)"
		     "wbtoscreen" "Screen#"
		     "weekday" ";returns day of week calculated in last call to date$"
		     "window" "Window#,X,Y,Width,Height,Flags,Title$,Dpen,Bpen[,GadgetList#[,BitMap#]]"
		     "windowfont" "IntuiFont# [,SoftStyle]"
		     "windowinput" "Window#"
		     "windowoutput" "Window#"
		     "windowtags" "Window#,Flags,Title$ [,&TagList] or [[,Tag,Data]...]"
		     "wline" "X1,Y1,X2,Y3[,Xn,Yn...],Colour"
		     "writeboot" "unit#[,bootdata]"
		     "writechunky" "Chunky#,rawfilename$"
		     "writefile" "(File#,Filename$)"
		     "writemem" "File#,Address,Length"
		     "writesector" "unit#,sector#,buffer[,numsectors]"
		     "writeserial" "unit#,byte"
		     "writeserialmem" "unit#,Address,Length"
		     "writeserialstring" "unit#,string[,Flags 1=DoIO 2=TrueString] "
		     "xbdecodesound" "Sound#,MemoryLocation"
		     "xbdiskbuffer" "Bufferlen"
		     "xbdiskplay" "Filename$,Channelmask[,Vol1[,Vol2...]]"
		     "xbfilter" "On|Off"
		     "xbinitsound" "Sound#,Length[,Period[,Repeat]]"
		     "xbloadsound" "Sound#,Filename$"
		     "xbloopsound" "Sound#,Channelmask[,Vol1[,Vol2...]]"
		     "xbpeeksound" "(Sound#,Offset)"
		     "xbsetperiod" "Sound#,Period"
		     "xbsound" "Sound#,Channelmask[,Vol1[,Vol2...]]"
		     "xbsounddata" "Sound#,Offset,Data"
		     "xbvolume" "Channelmask,Vol1[,Vol2...]"
		     "xflip" "Shape#"
		     "xor" "(expression,expression) ;Returns Exclusive OR of two expressions"
		     "xor" "(expression,expression) ;Returns Exclusive OR of two expressions"
		     "yflip" "Shape#"
		     "years" ";returns year calculated in last call to date$"
		     "zone" "(x,y)"
		     "zoneinit" "[zone_num#]|[#start_num,#end_num] - intialize zones"
		     "zonemode" "- returns -1 for 68020 mode or 0 for 68000 mode"
		     "zonetable" "- returns address of the current zone table"
		     "zonetablenumber" "- returns the number of the current zone table"
		     "zonetablesize" "- returns size of the current zone table"
		     "zonetest" "(start_num[,end_num],x,y)"
		     "zoomx2" "source#,dest#,sourceadd,destadd,width,height"
		     "zoomx4" "source#,dest#,sourceadd,destadd,width,height[,xy_select]"
		     "zoomx8" "source#,dest#,sourceadd,destadd,width,height"
		     "zoomxy" "xzoom,yzoom,height"
		     "agarexxhost_" "(rmsg,result)"
		     "abortpkt_" "(port,pkt)"
		     "activatecxobj_" "(co,true)"
		     "addbob_" "(bob,rp)"
		     "addbootnode_" "(bootPri,flags,deviceNode,configDev)"
		     "addbuffers_" "(name,number)"
		     "adddtobject_" "(win,req,o,pos)"
		     "addhead_" "(list,node)"
		     "addintserver_" "(intNumber,interrupt)"
		     "addnamedobject_" "(namespace,object)"
		     "addtail_" "(list,node)"
		     "addvsprite_" "(vSprite,rp)"
		     "allocabs_" "(byteSize,location)"
		     "allocaslrequest_" "(reqType,tagList)"
		     "allocdosobject_" "(type,tags)"
		     "allocexpansionmem_" "(numSlots,slotAlign)"
		     "alloclocalitem_" "(type,id,ident,dataSize)"
		     "allocmem_" "(byteSize,requirements)"
		     "allocmiscresource_" "(unitNum,name)"
		     "allocnamedobjecta_" "(name,tags)"
		     "allocpooled_" "(poolHeader,memSize)"
		     "allocraster_" "(width,height)"
		     "allocspritedataa_" "(bm,tags)"
		     "allocvec_" "(byteSize,requirements)"
		     "allocate_" "(freeList,byteSize)"
		     "amiga2date_" "(seconds,result)"
		     "andrectregion_" "(region,rectangle)"
		     "andregionregion_" "(srcRegion,destRegion)"
		     "animate_" "(anKey,rp)"
		     "applytagchanges_" "(list,changeList)"
		     "askfont_" "(rp,textAttr)"
		     "aslrequest_" "(requester,tagList)"
		     "assignadd_" "(name,lock)"
		     "assignlate_" "(name,path)"
		     "assignlock_" "(name,lock)"
		     "assignpath_" "(name,path)"
		     "attachcxobj_" "(headObj,co)"
		     "attachpalextra_" "(cm,vp)"
		     "autorequest_" "(window,body,posText,negText,pFlag,nFlag,width,height)"
		     "behindlayer_" "(dummy,layer)"
		     "bltmaskbitmaprastport_" "(srcBitMap,xSrc,ySrc,destRP,xDest,yDest,xSize,ySize,minterm,bltMask)"
		     "blttemplate_" "(source,xSrc,srcMod,destRP,xDest,yDest,xSize,ySize)"
		     "buildeasyrequestargs_" "(window,easyStruct,idcmp,args)"
		     "bumprevision_" "(newname,oldname)"
		     "cachecontrol_" "(cacheBits,cacheMask)"
		     "calcivg_" "(v,vp)"
		     "cardaccessspeed_" "(handle,nanoseconds)"
		     "cardmisccontrol_" "(handle,control_bits)"
		     "cardprogramvoltage_" "(handle,voltage)"
		     "cardresetremove_" "(handle,flag)"
		     "changeextspritea_" "(vp,oldsprite,newsprite,tags)"
		     "changescreenbuffer_" "(sc,sb)"
		     "clearrectregion_" "(region,rectangle)"
		     "clearrexxmsg_" "(msgptr,count)"
		     "comparedates_" "(date1,date2)"
		     "configboard_" "(board,configDev)"
		     "convtolower_" "(locale,character)"
		     "convtoupper_" "(locale,character)"
		     "copytuple_" "(handle,buffer,tuplecode,size)"
		     "createargstring_" "(string,length)"
		     "createbehindlayer_" "(li,bm,x0,y0,x1,y1,flags,bm2)"
		     "creategadgeta_" "(kind,gad,ng,taglist)"
		     "createiorequest_" "(port,size)"
		     "createmenusa_" "(newmenu,taglist)"
		     "createproc_" "(name,pri,segList,stackSize)"
		     "createupfrontlayer_" "(li,bm,x0,y0,x1,y1,flags,bm2)"
		     "currenttime_" "(seconds,micros)"
		     "cxbroker_" "(nb,error)"
		     "deletelayer_" "(dummy,layer)"
		     "deletevar_" "(name,flags)"
		     "devicetuple_" "(tuple_data,storage)"
		     "doasynclayout_" "(o,gpl)"
		     "dodtmethoda_" "(o,win,req,msg)"
		     "dogadgetmethoda_" "(gad,win,req,message)"
		     "doubleclick_" "(sSeconds,sMicros,cSeconds,cMicros)"
		     "drawbevelboxa_" "(rport,left,top,width,height,taglist)"
		     "drawborder_" "(rp,border,leftOffset,topOffset)"
		     "drawglist_" "(rp,vp)"
		     "drawimagestate_" "(rp,image,leftOffset,topOffset,state,drawInfo)"
		     "drawimage_" "(rp,image,leftOffset,topOffset)"
		     "easyrequestargs_" "(window,easyStruct,idcmpPtr,args)"
		     "endrefresh_" "(window,complete)"
		     "endrequest_" "(requester,window)"
		     "endupdate_" "(layer,flag)"
		     "enqueuecxobj_" "(headObj,co)"
		     "enqueue_" "(list,node)"
		     "entryhandler_" "(iff,type,id,position,handler,object)"
		     "eraseimage_" "(rp,image,leftOffset,topOffset)"
		     "errorreport_" "(code,type,arg1,device)"
		     "exnext_" "(lock,fileInfoBlock)"
		     "examinefh_" "(fh,fib)"
		     "examine_" "(lock,fileInfoBlock)"
		     "exithandler_" "(iff,type,id,position,handler,object)"
		     "extendfont_" "(font,fontTags)"
		     "fputc_" "(fh,ch)"
		     "fputs_" "(fh,str)"
		     "fread_" "(fh,block,blocklen,number)"
		     "fwrite_" "(fh,block,blocklen,number)"
		     "fault_" "(code,header,buffer,len)"
		     "findarg_" "(keyword,template)"
		     "findlocalitem_" "(iff,type,id,ident)"
		     "findname_" "(list,name)"
		     "findtagitem_" "(tagVal,tagList)"
		     "findtooltype_" "(toolTypeArray,typeName)"
		     "findvar_" "(name,type)"
		     "flood_" "(rp,mode,x,y)"
		     "fontextent_" "(font,fontExtent)"
		     "formatdate_" "(locale,template,date,putCharFunc)"
		     "formatstring_" "(locale,string,dataStream,putCharFunc)"
		     "freeboardmem_" "(startSlot,slotSpec)"
		     "freedosobject_" "(type,ptr)"
		     "freeexpansionmem_" "(startSlot,numSlots)"
		     "freemem_" "(memoryBlock,byteSize)"
		     "freeremember_" "(rememberKey,reallyForget)"
		     "freescreenbuffer_" "(sc,sb)"
		     "freescreendrawinfo_" "(screen,drawInfo)"
		     "gt_endrefresh_" "(win,complete)"
		     "gt_getgadgetattrsa_" "(gad,win,req,taglist)"
		     "gt_refreshwindow_" "(win,req)"
		     "gt_setgadgetattrsa_" "(gad,win,req,taglist)"
		     "getbitmapattr_" "(bm,attrnum)"
		     "getcurrentbinding_" "(currentBinding,bindingSize)"
		     "getcurrentdirname_" "(buf,len)"
		     "getdtattrsa_" "(o,attrs)"
		     "getdefprefs_" "(preferences,size)"
		     "getdeviceproc_" "(name,dp)"
		     "getextspritea_" "(ss,tags)"
		     "getlocalestr_" "(locale,stringNum)"
		     "getprefs_" "(preferences,size)"
		     "getprogramname_" "(buf,len)"
		     "getprompt_" "(buf,len)"
		     "getrgb32_" "(cm,firstcolor,ncolors,table)"
		     "getrgb4_" "(colorMap,entry)"
		     "getrpattrsa_" "(rp,tags)"
		     "getscreendata_" "(buffer,size,type,screen)"
		     "getsprite_" "(sprite,num)"
		     "getvar_" "(name,buffer,size,flags)"
		     "getvisualinfoa_" "(screen,taglist)"
		     "gfxassociate_" "(associateNode,gfxNodePtr)"
		     "helpcontrol_" "(win,flags)"
		     "idtostr_" "(id,buf)"
		     "ieeedpabs_" "(parm)"
		     "ieeedpacos_" "(parm)"
		     "ieeedpadd_" "(leftParm,rightParm)"
		     "ieeedpasin_" "(parm)"
		     "ieeedpatan_" "(parm)"
		     "ieeedpceil_" "(parm)"
		     "ieeedpcmp_" "(leftParm,rightParm)"
		     "ieeedpcos_" "(parm)"
		     "ieeedpcosh_" "(parm)"
		     "ieeedpdiv_" "(dividend,divisor)"
		     "ieeedpexp_" "(parm)"
		     "ieeedpfix_" "(parm)"
		     "ieeedpfloor_" "(parm)"
		     "ieeedplog10_" "(parm)"
		     "ieeedplog_" "(parm)"
		     "ieeedpmul_" "(factor1,factor2)"
		     "ieeedpneg_" "(parm)"
		     "ieeedppow_" "(exp,arg)"
		     "ieeedpsin_" "(parm)"
		     "ieeedpsinh_" "(parm)"
		     "ieeedpsqrt_" "(parm)"
		     "ieeedpsub_" "(leftParm,rightParm)"
		     "ieeedptan_" "(parm)"
		     "ieeedptanh_" "(parm)"
		     "ieeedptieee_" "(parm)"
		     "ieeedptst_" "(parm)"
		     "ieeespadd_" "(leftParm,rightParm)"
		     "ieeespcmp_" "(leftParm,rightParm)"
		     "ieeespdiv_" "(dividend,divisor)"
		     "ieeespmul_" "(leftParm,rightParm)"
		     "ieeesppow_" "(exp,arg)"
		     "ieeespsincos_" "(cosptr,parm)"
		     "ieeespsub_" "(leftParm,rightParm)"
		     "info_" "(lock,parameterBlock)"
		     "inhibit_" "(name,onoff)"
		     "initbitmap_" "(bitMap,depth,width,height)"
		     "initcode_" "(startClass,version)"
		     "initresident_" "(resident,segList)"
		     "installclipregion_" "(layer,region)"
		     "installlayerhook_" "(layer,hook)"
		     "installlayerinfohook_" "(li,hook)"
		     "internalloadseg_" "(fh,table,funcarray,stack)"
		     "internalunloadseg_" "(seglist,freefunc)"
		     "isalnum_" "(locale,character)"
		     "isalpha_" "(locale,character)"
		     "iscntrl_" "(locale,character)"
		     "isdigit_" "(locale,character)"
		     "isgraph_" "(locale,character)"
		     "islower_" "(locale,character)"
		     "isprint_" "(locale,character)"
		     "ispunct_" "(locale,character)"
		     "isspace_" "(locale,character)"
		     "isupper_" "(locale,character)"
		     "isxdigit_" "(locale,character)"
		     "itemaddress_" "(menuStrip,menuNumber)"
		     "lendmenus_" "(fromwindow,towindow)"
		     "loadrgb32_" "(vp,table)"
		     "locklayer_" "(dummy,layer)"
		     "lockrecords_" "(recArray,timeout)"
		     "lock_" "(name,type)"
		     "makedosentry_" "(name,type)"
		     "makevport_" "(view,vp)"
		     "maprawkey_" "(event,buffer,length,keyMap)"
		     "matchfirst_" "(pat,anchor)"
		     "matchix_" "(event,ix)"
		     "matchpatternnocase_" "(pat,str)"
		     "matchpattern_" "(pat,str)"
		     "matchtoolvalue_" "(typeString,value)"
		     "modifyidcmp_" "(window,flags)"
		     "modifyprop_" "(gadget,window,requester,flags,horizPot,vertPot,horizBody,vertBody)"
		     "movelayerinfrontof_" "(layer_to_move,other_layer)"
		     "movelayer_" "(dummy,layer,dx,dy)"
		     "movesprite_" "(vp,sprite,x,y)"
		     "movewindowinfrontof_" "(window,behindWindow)"
		     "newdtobjecta_" "(name,attrs)"
		     "newfontcontents_" "(fontsLock,fontName)"
		     "newloadseg_" "(file,tags)"
		     "newscaleddiskfont_" "(sourceFont,destTextAttr)"
		     "nextdosentry_" "(dlist,flags)"
		     "nextpubscreen_" "(screen,namebuf)"
		     "obtaininfoa_" "(glyphEngine,tagList)"
		     "obtainpen_" "(cm,n,r,g,b,f)"
		     "offmenu_" "(window,menuNumber)"
		     "onmenu_" "(window,menuNumber)"
		     "openamigaguidea_" "(nag,*)"
		     "openamigaguideasynca_" "(nag,attrs)"
		     "opendevice_" "(devName,unit,ioRequest,flags)"
		     "openiff_" "(iff,rwMode)"
		     "openlibrary_" "(libName,version)"
		     "openmonitor_" "(monitorName,displayID)"
		     "openscreentaglist_" "(newScreen,tagList)"
		     "openwindowtaglist_" "(newWindow,tagList)"
		     "open_" "(name,accessMode)"
		     "orrectregion_" "(region,rectangle)"
		     "orregionregion_" "(srcRegion,destRegion)"
		     "parsedate_" "(locale,date,template,getCharFunc)"
		     "parseiff_" "(iff,control)"
		     "parseix_" "(description,ix)"
		     "pointinimage_" "(point,image)"
		     "printdtobjecta_" "(o,w,r,msg)"
		     "printfault_" "(code,header)"
		     "printitext_" "(rp,iText,left,top)"
		     "procure_" "(sigSem,bidMsg)"
		     "pubscreenstatus_" "(screen,statusFlags)"
		     "pushchunk_" "(iff,type,id,size)"
		     "putdiskobject_" "(name,diskobj)"
		     "puticon_" "(name,icon)"
		     "putmsg_" "(port,message)"
		     "rldispatch_" "(rmsg,result)"
		     "rawdofmt_" "(formatString,dataStream,putChProc,putChData)"
		     "readchunkrecords_" "(iff,buf,bytesPerRecord,numRecords)"
		     "readexpansionbyte_" "(board,offset)"
		     "readexpansionrom_" "(board,configDev)"
		     "readpixelline8_" "(rp,xstart,ystart,width,array,tempRP)"
		     "refreshdtobjecta_" "(o,win,req,attrs)"
		     "refreshglist_" "(gadgets,window,requester,numGad)"
		     "refreshtagitemclones_" "(clone,original)"
		     "relabel_" "(drive,newname)"
		     "releasecard_" "(handle,flags)"
		     "releaseinfoa_" "(glyphEngine,tagList)"
		     "releasepen_" "(cm,n)"
		     "remassignlist_" "(name,lock)"
		     "remintserver_" "(intNumber,interrupt)"
		     "remnamedobject_" "(object,message)"
		     "removeamigaguidehosta_" "(hh,attrs)"
		     "removedtobject_" "(win,o)"
		     "removegadget_" "(window,gadget)"
		     "rename_" "(oldName,newName)"
		     "reportmouse_" "(flag,window)"
		     "request_" "(requester,window)"
		     "resetmenustrip_" "(window,menu)"
		     "routecxmsg_" "(cxm,co)"
		     "runcommand_" "(seg,stack,paramptr,paramlen)"
		     "sdivmod32_" "(dividend,divisor)"
		     "smult32_" "(arg1,arg2)"
		     "smult64_" "(arg1,arg2)"
		     "spadd_" "(leftParm,rightParm)"
		     "spcmp_" "(leftParm,rightParm)"
		     "spdiv_" "(leftParm,rightParm)"
		     "spmul_" "(leftParm,rightParm)"
		     "sppow_" "(power,arg)"
		     "spsincos_" "(cosResult,parm)"
		     "spsub_" "(leftParm,rightParm)"
		     "samedevice_" "(lock1,lock2)"
		     "samelock_" "(lock1,lock2)"
		     "screenposition_" "(screen,flags,x1,y1,x2,y2)"
		     "scrolllayer_" "(dummy,layer,dx,dy)"
		     "sendamigaguidecontexta_" "(cl,attrs)"
		     "setabpendrmd_" "(rp,apen,bpen,drawmode)"
		     "setapen_" "(rp,pen)"
		     "setamigaguideattrsa_" "(cl,attrs)"
		     "setattrsa_" "(object,tagList)"
		     "setbpen_" "(rp,pen)"
		     "setcomment_" "(name,comment)"
		     "setcurrentbinding_" "(currentBinding,bindingSize)"
		     "setcxobjpri_" "(co,pri)"
		     "setdmrequest_" "(window,requester)"
		     "setdtattrsa_" "(o,win,req,attrs)"
		     "setdrmd_" "(rp,drawMode)"
		     "setexcept_" "(newSignals,signalSet)"
		     "setfiledate_" "(name,date)"
		     "setfilterix_" "(filter,ix)"
		     "setfilter_" "(filter,text)"
		     "setfont_" "(rp,textFont)"
		     "setgadgetattrsa_" "(gadget,window,requester,tagList)"
		     "setinfoa_" "(glyphEngine,tagList)"
		     "setintvector_" "(intNumber,interrupt)"
		     "setlocalitempurge_" "(localItem,purgeHook)"
		     "setmaxpen_" "(rp,maxpen)"
		     "setmenustrip_" "(window,menu)"
		     "setmode_" "(fh,mode)"
		     "setmousequeue_" "(window,queueLength)"
		     "setoutlinepen_" "(rp,pen)"
		     "setowner_" "(name,owner_info)"
		     "setpointer_" "(window,pointer,height,width,xOffset,yOffset)"
		     "setprotection_" "(name,protect)"
		     "setrpattrsa_" "(rp,tags)"
		     "setrast_" "(rp,pen)"
		     "setsr_" "(newSR,mask)"
		     "setsignal_" "(newSignals,signalSet)"
		     "settaskpri_" "(task,priority)"
		     "settranslate_" "(translator,events)"
		     "setvbuf_" "(fh,buff,type,size)"
		     "setvar_" "(name,buffer,size,flags)"
		     "setwindowpointera_" "(win,taglist)"
		     "setwritemask_" "(rp,msk)"
		     "showtitle_" "(screen,showIt)"
		     "signal_" "(task,signalSet)"
		     "sizelayer_" "(dummy,layer,dx,dy)"
		     "strtolong_" "(string,value)"
		     "stricmp_" "(string1,string2)"
		     "swapbitsrastportcliprect_" "(rp,cr)"
		     "systemtaglist_" "(command,tags)"
		     "tedgetcurrentline_" "()-90"
		     "tedgetfilename_" "()-102"
		     "tedgetfirstline_" "()-84"
		     "tedgetjumptable_" "()-60"
		     "tedgetlabelcount_" "()-48"
		     "tedgetlabellist_" "()-42"
		     "tedsetjumptable_" "()-54"
		     "taginarray_" "(tagValue,tagArray)"
		     "textextent_" "(rp,string,count,textExtent)"
		     "textfit_" "(rp,string,strLen,textExtent,constrainingExtent,strDirection,constrainingBitWidth,constrainingBitHeight)"
		     "timeddisplayalert_" "(alertNumber,string,height,time)"
		     "ucopperlistinit_" "(uCopList,n)"
		     "udivmod32_" "(dividend,divisor)"
		     "umult32_" "(arg1,arg2)"
		     "umult64_" "(arg1,arg2)"
		     "ungetc_" "(fh,character)"
		     "unlockpubscreen_" "(name,screen)"
		     "upfrontlayer_" "(dummy,layer)"
		     "vprintf_" "(format,argarray)"
		     "vacate_" "(sigSem,bidMsg)"
		     "videocontrol_" "(colorMap,tagarray)"
		     "waitforchar_" "(file,timeout)"
		     "writechars_" "(buf,buflen)"
		     "writechunkrecords_" "(iff,buf,bytesPerRecord,numRecords)"
		     "writepixelline8_" "(rp,xstart,ystart,width,array,tempRP)"
		     "writepotgo_" "(word,mask)"
		     "xprotocolhostmon_" "(io,serbuff,actual,maxsize)"
		     "xprotocolusermon_" "(io,serbuff,actual,maxsize)"
		     "xorrectregion_" "(region,rectangle)"
		     "xorregionregion_" "(srcRegion,destRegion)")))

(defvar bb2-ted-indent-p nil "Use TED style simple 2 space indenting")
(setq bb2-ted-indent-p t)

(defconst bb2-trigger-characters
  (mapcar 'string-to-char '(";" " " "(" "," "'" "{" "}"))
  "When the user types one of these characters, we trigger the keyword replacement logic.")

(defconst bb2-mode-syntax-table
  (let ((table (make-syntax-table)))
    ;; ' is a string delimiter
    (modify-syntax-entry ?' "\"" table)
    ;; " is a string delimiter
    (modify-syntax-entry ?\" "\"" table)
    ;; ; is a comment start
    (modify-syntax-entry ?\; "<" table)
    ;; /n is a comment end
    (modify-syntax-entry ?\n ">" table)
    ;;underscore is part of a word
    (modify-syntax-entry ?_ "w" table)
    ;; $ is part of a word
    (modify-syntax-entry ?\$ "w" table)
    ;; \ is punctuation, not an escape character
    ;; but \\ is escape in AmiBlitz? how to do it?
    (modify-syntax-entry ?\\ "." table)
    table))

(defvar bb2-keywords-regexp nil "regular expression for bb2 keywords")
(setq bb2-keywords-regexp (regexp-opt bb2-keywords 'words))

;; constants- ie. #something_like_this
(defvar bb2-const-regexp nil "regular expression for bb2 constants")
(setq bb2-const-regexp "#[a-zA-Z0-9_@]+")

;; types, ie .w .l .q string$ .newtype
(defvar bb2-types-regexp nil "regular expression for bb2 types")
(setq bb2-types-regexp "\\B\\$\\|\\(\\b\\|[[:blank:]]+\\)\\.[a-zA-Z_0-9]+")

(defvar bb2-amigados-keywords-regexp nil "regular expression for AmigaDOS keywords")
(setq bb2-amigados-keywords-regexp (regexp-opt bb2-amigados-keywords 'words))

(defvar bb2-highlights nil)
(setq bb2-highlights
      `((,bb2-keywords-regexp . font-lock-keyword-face)
	(,bb2-amigados-keywords-regexp . font-lock-builtin-face)
	(,bb2-const-regexp . font-lock-constant-face)
	(,bb2-types-regexp . font-lock-type-face)))

;; set bb2-mode to use simple 2 space indents like TED on Amiga
(defun bb2-use-ted-indent () 
  (setq indent-tabs-mode nil)
  (setq tab-width 2)
  (set (make-local-variable 'tab-stop-list) '(0 2 4 6))
  (setq standard-indent 2)  
  ; replace indent-relative
  (setq indent-line-function 'insert-tab)  
  ; turn off electric-indent for this mode
  (electric-indent-local-mode -1))

(defun keywordize-keyhook ()
  (if (bb2-should-replace-keyword-p)
      (save-excursion (bb2-keywordize-symbol -1))))

(defun bb2-should-replace-keyword-p ()
  "check if user pressed a key that triggers keyword replacement"
  (and (bb2-not-just-initialized-p)
       (or (bb2-user-pressed-special-p)
	   (and (bb2-user-is-typing-p)
		(bb2-user-pressed-trigger-key-p)))))

(defun bb2-not-just-initialized-p ()
  (not (eq this-command 'bb2-mode)))

;; The bb2 editor changed keywords on up or down.
;; it doesnt play nice with the mechanism taken from sql-up.
;; we need another way of doing things.
(defun bb2-user-pressed-special-p ()
  "Did the user press enter, up or down?"  
  (and (< 0 (length (this-command-keys-vector)))
       (or (equal 13 last-command-event)
	   (equal 10 last-command-event))))
     ;	   (equal 'up last-command-event)
   ;	   (equal 'down last-command-event))))

(defun bb2-user-is-typing-p ()
  (eq this-command #'self-insert-command))

(defun bb2-user-pressed-trigger-key-p ()
  "Did the user enter a character from our list?"
  (let ((bb2-current-char last-command-event))
    (member bb2-current-char bb2-trigger-characters)))

(defun bb2-keywordize-symbol (direction)
  "direction is 1 for forward or -1 for backward"
  (forward-symbol direction)
  (bb2-process-symbol (thing-at-point 'symbol)
		      (bounds-of-thing-at-point 'symbol)))

(defun bb2-process-symbol (symbol symbol-boundaries)
  (let ((found-keyword (bb2-find-keyword symbol)))
    (when found-keyword
      (delete-region (car symbol-boundaries) (cdr symbol-boundaries))
      (insert found-keyword))))

(defun bb2-find-keyword (symbol)
  "Return the Blitz Keyword for a given symbol"
  (let ((keyword-list (bb2-choose-keyword-list symbol)))
    (cl-some (lambda (x)
	       (if (string-match-p (concat "^" x "$") symbol) x))
	     keyword-list)))

(defun bb2-choose-keyword-list (symbol)
  (if (string-suffix-p "_" symbol)
      bb2-amigados-keywords
    bb2-keywords))

(defun bb2-eldoc-function ()
  (let ((symbol (thing-at-point 'symbol)))
    (if (char-or-string-p symbol)
	(setq symbol (downcase symbol)))
    (gethash symbol bb2-eldoc-table)))

(define-derived-mode bb2-mode prog-mode "bb2"
  "Major mode for Blitz Basic II code"
  :syntax-table bb2-mode-syntax-table

  (if bb2-ted-indent-p
      (bb2-use-ted-indent))
  
  ;; font-lock-defaults last param sets case-insensitivity
  (setq font-lock-defaults '((bb2-highlights) nil t))
  (font-lock-fontify-buffer)
  
  (set (make-local-variable 'eldoc-documentation-function)
       'bb2-eldoc-function)
  
  (add-hook 'post-command-hook 'keywordize-keyhook nil t)
  (eldoc-mode))


;; associate  bb2-mode to ascii files only at the moment
(add-to-list 'auto-mode-alist '("\\.bb.ascii\\'" . bb2-mode))	     

(provide 'bb2-mode)
