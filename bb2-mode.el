;;; bb2-mode.el
;;; Emacs major mode for ascii Blitz Basic II source code
;;; Richard Dare
;;; www.richardjdare.com

(defvar bb2-keywords nil "Blitz Basic II language keywords")
(setq bb2-keywords
      #s(hash-table test equal data ("acos" ("ACos" "(Float)" #xE002)
				     "addvalue" ("ADDValue" "(bitmap#,x,y)" #xA10B)
				     "agablue" ("AGABlue" "(Colour Register)" #xCE12)
				     "agafillpalette" ("AGAFillPalette" "palette#,r,g,b[,start_col,end_col] - fill palette with AGA r,g,b values" #xA08A)
				     "agagreen" ("AGAGreen" "(Colour Register)" #xCE11)
				     "agapalblue" ("AGAPalBlue" "(colour#)" #xA087)
				     "agapalgreen" ("AGAPalGreen" "(colour#)" #xA086)
				     "agapalrgb" ("AGAPalRGB" "Palette#,Colour Register,Red,Green,Blue" #xCE0E)
				     "agapalred" ("AGAPalRed" "(colour#)" #xA085)
				     "agargb" ("AGARGB" "Colour Register,Red,Green,Blue" #xCE0D)
				     "agared" ("AGARed" "(Colour Register)" #xCE10)
				     "alibjsr" ("ALibJsr" "" #x8038)
				     "amiga" ("AMIGA" "" #x8035)
				     "aslfilerequest" ("ASLFileRequest" "" nil)
				     "aslfilerequest$" ("ASLFileRequest$" "Title$,Pathname$,Filename$ [,Pattern$] [,x,y,w,h]" #xA801)
				     "aslfontrequest" ("ASLFontRequest" "enable flags (1=pen 2=bckgrnd 4=style 8=drawmode 16=fixedsize)" #xA802)
				     "aslpathrequest$" ("ASLPathRequest$" "Title$,Pathname$ [,x,y,w,h]" #xA804)
				     "aslscreenrequest" ("ASLScreenRequest" "enable flags (1=width 2=height 4=depth 8=overscan 16=scroll)" #xA803)
				     "aslscreenrequest$" ("ASLScreenRequest$" "" nil)
				     "asin" ("ASin" "(Float)" #xE003)
				     "asyncfade" ("ASyncFade" "On|Off" #xCE83)
				     "atan" ("ATan" "(Float)" #xE004)
				     "ableicr_a" ("AbleICR_a" "(resource,mask)" #xF903)
				     "ableicr_b" ("AbleICR_b" "(resource,mask)" #xF883)
				     "abs" ("Abs" "(Expression)" #xBC09)
				     "absmouse" ("AbsMouse" "X,Y" #xC205)
				     "activate" ("Activate" "Window#" #xC51F)
				     "activateselectedbox" ("ActivateSelectedBox" "" #xBA89)
				     "activatestring" ("ActivateString" "Window#,Id" #xC612)
				     "activescreen" ("ActiveScreen" ";Returns ADDRESS of current Intuition screen" #xB58E)
				     "activewindow" ("ActiveWindow" ";Returns ADDRESS of current Intuition window" #xB591)
				     "addappicon" ("AddAppIcon" "(id,text$,filename$/shape#[,x,y])" #x9E85)
				     "addappmenu" ("AddAppMenu" "(id,text$)" #x9E83)
				     "addappwindow" ("AddAppWindow" "(windownumber)" #x9E81)
				     "addbox" ("AddBox" "Page#,Box#,x,y,w,h,type[,text$]|[,shape,shape]" #xBA84)
				     "addfirst" ("AddFirst" "(Arrayname())" #xC006)
				     "addicrvector_a" ("AddICRVector_a" "" #xF901)
				     "addicrvector_b" ("AddICRVector_b" "" #xF881)
				     "addidcmp" ("AddIDCMP" "IDCMP_Flags" #xC535)
				     "additem" ("AddItem" "(Arrayname())" #xC002)
				     "addlast" ("AddLast" "(Arrayname())" #xC008)
				     "addr" ("Addr" "" #x80B8)
				     "adjustchunky" ("AdjustChunky" "chunky#,DeltaRed,DeltaGreen,DeltaBlue," #xA409)
				     "allfire" ("AllFire" "([joybits])" #xA009)
				     "allocfill" ("AllocFill" "for internal use only (polylib.obj)" #xBB87)
				     "allocmem" ("AllocMem" "(size,memtype) memtype: 0=fast 2=chip 65536=clrmem" #xA608)
				     "analyzedisk" ("AnalyzeDisk" "(DriveName$) ;TRUE if device name is valid" #xB691)
				     "animloop" ("AnimLoop" "On|Off" #x9C83)
				     "appevent" ("AppEvent" "" #x9E87)
				     "appeventid" ("AppEventID" "" #x9E89)
				     "appeventtype" ("AppEventType" "" #x9E88)
				     "appfile" ("AppFile" "(num)" #x9E8B)
				     "appiconevent" ("AppIconEvent" "" nil)
				     "appiconfile" ("AppIconFile" "" nil)
				     "appiconhit" ("AppIconHit" "" nil)
				     "applock" ("AppLock" "" #x9E8D)
				     "appmenuevent" ("AppMenuEvent" "" nil)
				     "appmenufile" ("AppMenuFile" "" nil)
				     "appmenuhit" ("AppMenuHit" "" nil)
				     "appmessage" ("AppMessage" "" #x9E8E)
				     "appnumfiles" ("AppNumFiles" "" #x9E8C)
				     "appwindowevent" ("AppWindowEvent" "" nil)
				     "appwindowfile" ("AppWindowFile" "" nil)
				     "asc" ("Asc" "(String$)" #xDC87)
				     "asmexit" ("AsmExit" "" #x8011)
				     "assign" ("Assign" "[success=] Assign(Name$,ToPath$) ;e.g. Assign "Blitz2:","DH1:Blitz2"" #xB6AF)
				     "assign$" ("Assign$" ";Null-string indicates end of list" #xB69A)
				     "attachgtlist" ("AttachGTList" "GTList#,Window#" #xC68E)
				     "autocookie" ("AutoCookie" "On|Off" #xCD06)
				     "avg" ("Avg" "(Integer1,Integer2)" #xB48A)
				     "avg.l" ("Avg.l" "(Long Integer 1,Long Integer 2)" #xB488)
				     "avg.q" ("Avg.q" "(Quick1,Quick2)" #xB489)
				     "bblit" ("BBlit" "Buffer#,Shape#,X,Y[,Excessonoff]" #xC902)
				     "bblitmode" ("BBlitMode" "BLTCON0" #xC904)
				     "blitz" ("BLITZ" "" #x8034)
				     "blibjsr" ("BLibJsr" "" #x803A)
				     "bload" ("BLoad" "(filename$,[address,[,length,[offset,[memtype]]]])" #xA58F)
				     "bsave" ("BSave" "(filename$,address/bank[,length])" #xA590)
				     "bank" ("Bank" "(bank#)" #xA601)
				     "bankloc" ("BankLoc" "(bank#)" #xA606)
				     "banksize" ("BankSize" "(bank#)" #xA607)
				     "beepscreen" ("BeepScreen" "Screen#" #xCF0D)
				     "bin#" ("Bin#" "(BinString$) ;Converts binary value (in string) to decimal" #xB48E)
				     "bin$" ("Bin$" "(Expression)" #xDC85)
				     "bitmap" ("BitMap" "BitMap#,Width,Height,Depth" #xD001)
				     "bitmapinput" ("BitMapInput" "" #xC707)
				     "bitmaporigin" ("BitMapOrigin" "BitMap#,x,y" #xBB90)
				     "bitmapoutput" ("BitMapOutput" "Bitmap#" #xC702)
				     "bitmappoly" ("BitMapPoly" "numpts,*coords.w,color[,ditherbitmap]" #xAB85)
				     "bitmaptowindow" ("BitMapToWindow" "Bitmap#,Window#[,srcx,srcy,destx,desty,wid,height]" #xC53F)
				     "bitmapwindow" ("BitMapWindow" "srcbitmap,destbitmap,x,y,w,h" #xBB8F)
				     "bitmaptowindow" ("BitMaptoWindow" "Bitmap#,Window#[,srcx,srcy,destx,desty,wid,height]" #xC53F)
				     "bitplanesbitmap" ("BitPlanesBitMap" "srcbitmap,destbitmap,planepick" #xBB8C)
				     "blit" ("Blit" "Shape#,X,Y[,Excessonoff]" #xCB01)
				     "blitcoll" ("BlitColl" "(Shape#,x,y)" #xCB09)
				     "blitmode" ("BlitMode" "BLTCON0" #xCB02)
				     "blitterdone" ("BlitterDone" "" #xA59D)
				     "blitternasty" ("BlitterNasty" "On|Off" nil)
				     "blitzevent" ("BlitzEvent" ";handles user input and returns event" #xBA92)
				     "blitzfont" ("BlitzFont" "" #xC70D)
				     "blitzkey" ("BlitzKey" ";same as inkey$ after a bitmapinput" #xB106)
				     "blitzkeys" ("BlitzKeys" "On|Off" #xB101)
				     "blitzqualifier" ("BlitzQualifier" "" #xB104)
				     "blitzrepeat" ("BlitzRepeat" "Delay,Speed" #xB103)
				     "block" ("Block" "Shape#,X,Y" #xCB08)
				     "blockscroll" ("BlockScroll" "X1,Y1,Width,Height,X2,Y2[,BitMap#]" #xB206)
				     "blue" ("Blue" "(Colour Register)" #xCE08)
				     "bootprog" ("BootProg" "unit#,memoryaddress" #xAD8B)
				     "borderpens" ("BorderPens" "Highlight Colour,Shadow Colour" #xC618)
				     "borders" ("Borders" "[On|Off]|[Width,Height]" #xC611)
				     "box" ("Box" "x1,y1,x2,y2,color" #xBB83)
				     "boxprint" ("BoxPrint" "Box#[,String$]|[Bank#,Line]" #xBA90)
				     "boxpropx" ("BoxPropX" "Box#" #xBA98)
				     "boxpropy" ("BoxPropY" "Box#" #xBA99)
				     "boxselected" ("BoxSelected" "" #xBA8F)
				     "boxshow" ("BoxShow" "Box#[,Bitmap#,x,y]|[dx,dy]" #xBA8E)
				     "boxstring" ("BoxString" "(Box#)|(Page#,Box#)" #xBA8D)
				     "boxvalue" ("BoxValue" "(Box#)|(Page#,Box#)" #xBA8B)
				     "boxf" ("Boxf" "x1,y1,x2,y2,color" #xBB84)
				     "buffer" ("Buffer" "Buffer#,Memorylen" #xC901)
				     "buttongroup" ("ButtonGroup" "Group" #xC61C)
				     "buttonid" ("ButtonId" "(GadgetList#,ButtonGroup)" #xC61E)
				     "cddoor" ("CDDoor" "on/off" #x8703)
				     "cdfastforward" ("CDFastForward" "" #x8711)
				     "cdfirsttrack" ("CDFirstTrack" "" #x870A)
				     "cdflush" ("CDFlush" "" #x870E)
				     "cdlasttrack" ("CDLastTrack" "" #x870B)
				     "cdnormalspeed" ("CDNormalSpeed" "" #x8712)
				     "cdnumtracks" ("CDNumTracks" "" #x8709)
				     "cdpause" ("CDPause" "on/off" #x870F)
				     "cdplaytrack" ("CDPlayTrack" "track#,numtracks" #x8704)
				     "cdreadtoc" ("CDReadTOC" "" #x8705)
				     "cdrewind" ("CDRewind" "" #x8710)
				     "cdspeed" ("CDSpeed" "speed" #x8713)
				     "cdstatus" ("CDStatus" "" #x8706)
				     "cdstop" ("CDStop" "" #x8707)
				     "cdtracklength" ("CDTrackLength" "track#" #x870C)
				     "cdtrackmins" ("CDTrackMins" "[offset] - mins for current track" #x8714)
				     "cdtrackplaying" ("CDTrackPlaying" "- current track being played" #x8716)
				     "cdtracksecs" ("CDTrackSecs" "[offset] - secs for current track" #x8715)
				     "cdupdateinfo" ("CDUpdateInfo" "- update track playing/time information" #x870D)
				     "cdvolume" ("CDVolume" "volume,lengthoffade" #x8708)
				     "celse" ("CELSE" "" #x801E)
				     "cend" ("CEND" "" #x801F)
				     "cerr" ("CERR" "" #x8020)
				     "chdir" ("CHDir" "[success=] CHDir(Path$) ;CHange current DIRectory" #xB681)
				     "cmpmem" ("CMPMEM" "(source,dest,length) 0=same,-1 source<dest, +1 source>dest" #x8502)
				     "cnif" ("CNIF" "" #x801C)
				     "cpucls" ("CPUCls" "bitmap#" #xA08C)
				     "cplot" ("CPlot" "Chunky#,x,y[,color.l],[red.b,green.b,blue.b]" #xA413)
				     "cpoint" ("CPoint" "(Chunky#,x,y)" #xA415)
				     "csif" ("CSIF" "" #x801D)
				     "cacheoff" ("CacheOff" "" nil)
				     "cachepcf" ("CachePCF" "" nil)
				     "cachesoff" ("CachesOff" "bitmask" #xA597)
				     "cacheson" ("CachesOn" "bitmask" #xA581)
				     "call" ("Call" "Address" #xDA04)
				     "case" ("Case" "" #x800F)
				     "casesense" ("CaseSense" "On|Off" #xDC99)
				     "catchdoserrs" ("CatchDosErrs" "" #xC538)
				     "centre$" ("Centre$" "(String$,Characters)" #xDC96)
				     "chdir" ("ChDir" "[success=] CHDir(Path$) ;CHange current DIRectory" #xB681)
				     "changebox" ("ChangeBox" "Page#,Box#,Value" #xBA9A)
				     "changedir" ("ChangeDir" "dir$" #xA5A3)
				     "changetrackermask" ("ChangeTrackerMask" "Channel_Mask" #x9C11)
				     "changetrackervblank" ("ChangeTrackerVBlank" "" #x9C0E)
				     "charcount" ("CharCount" "(String$,byte) ;Returns no. occurances of 'byte' in 'string$'" #xB284)
				     "checkaga" ("CheckAGA" ";Returns 'TRUE' for AGA machines, otherwise returns 'FALSE'" #xB387)
				     "checkprt" ("CheckPrt" "-1=Printer Off|-3=Printer Offline|-4=Printer On" #xA304)
				     "checktrackerevent" ("CheckTrackerEvent" "" #x9C09)
				     "checktrackerid" ("CheckTrackerID" "(TrackerModule#)" #x9C0B)
				     "checksum" ("Checksum" "(String$) ;Returns a unique checksum for a given string" #xB283)
				     "chipfree" ("ChipFree" ";Returns largest block of free CHIP memory" #xB582)
				     "chr$" ("Chr$" "(Expression)" #xDC86)
				     "chunkheader" ("ChunkHeader" "(a$)" #xA487)
				     "chunkycls" ("ChunkyCLS" "color" #xAB81)
				     "chunkyconvert" ("ChunkyConvert" "chunky#[,palette]|[,array.l(),numcols]" #xA411)
				     "chunkyloc" ("ChunkyLoc" "chunky#" #xA410)
				     "chunkyplot" ("ChunkyPlot" "x,y,color,[,CLIP]" #xAB82)
				     "chunkypoly" ("ChunkyPoly" "numpts,*coords.w,color[,noblitter]" #xAB84)
				     "chunkytobitmap" ("ChunkyToBitMap" "Chunky#,Bitmap#" #xA412)
				     "chunkytoplanar" ("ChunkyToPlanar" "" nil)
				     "chunkyvlin" ("ChunkyVlin" "x,y1,y2,color,[,CLIP]" #xAB83)
				     "cipher$" ("Cipher$" "(String$) ;Create/Unencrypt a Cipher$() string" #xB287)
				     "circle" ("Circle" "x,y,rx[,ry],color" #xBB81)
				     "circlef" ("Circlef" "x,y,rx[,ry],color" #xBB82)
				     "clearbitmap" ("ClearBitmap" "bitmap#,delay[,height,offset]" #xA101)
				     "clearlist" ("ClearList" "Arrayname()" #xC007)
				     "clearrexxmsg" ("ClearRexxMsg" "rexxmsg" #xAE04)
				     "clearstring" ("ClearString" "GadgetList#,Id" #xC615)
				     "cleartooltypes" ("ClearToolTypes" "" #x9D89)
				     "clickbutton" ("ClickButton" "Button : 0=Left" #xC208)
				     "clickmouse" ("ClickMouse" ";Waits for left mouse button to be CLICKED" #xB38C)
				     "clipblit" ("ClipBlit" "Shape#,X,Y,[Excess]" #xBB8D)
				     "clipblitmode" ("ClipBlitMode" "BPLCON0" #xBB8E)
				     "closecd" ("CloseCD" "" #x8702)
				     "closeconsole" ("CloseConsole" "Console#" #xA185)
				     "closedisk" ("CloseDisk" "unit#" #xAD83)
				     "closeed" ("CloseEd" "" #x80CB)
				     "closefile" ("CloseFile" "File#" #xBE02)
				     "closescreen" ("CloseScreen" "Screen#" #xCF0B)
				     "closeserial" ("CloseSerial" "unit#" #xAD06)
				     "closewindow" ("CloseWindow" "Window#" #xC53C)
				     "clrerr" ("ClrErr" "" #x80B5)
				     "clrint" ("ClrInt" "" #x8031)
				     "cls" ("Cls" "[Colour]" #xB205)
				     "cludgebitmap" ("CludgeBitMap" "BitMap#,Width,Height,Depth,Memory" #xD007)
				     "cludgeshapes" ("CludgeShapes" "shape#,numshapes,address" #x9701)
				     "cludgesound" ("CludgeSound" "sound#,address" #x9681)
				     "col8" ("Col8" "(array.l(),numcols,rgb.l)" #xA417)
				     "colsplit" ("ColSplit" "Colour Register,Red,Green,Blue,Y" #xC808)
				     "colorchunky" ("ColorChunky" "chunky#" #xA40F)
				     "colour" ("Colour" "Foreground Colour[,Background Colour]" #xC703)
				     "colourrequest" ("ColourRequest" "Colour#" #x9A82)
				     "commoditiesbase" ("CommoditiesBase" ";Returns Commodities Library base" #xB58A)
				     "commodityevent" ("CommodityEvent" "" #xAC85)
				     "comparepaths" ("ComparePaths" "(Path1$,Path2$) ;0=Unrelated, 1=Same Dir or File, 2=On Same Volume" #xB6AE)
				     "con_base" ("Con_Base" "Returns pointer to console.device" #x9A93)
				     "cookiemode" ("CookieMode" "" #xCB03)
				     "coplen" ("CopLen" "" #xC807)
				     "coploc" ("CopLoc" "" #xC802)
				     "copperagacol" ("CopperAGACol" "col#,r,g,b" #x858B)
				     "coppercommand" ("CopperCommand" "copins1,copins2" #x8586)
				     "copperend" ("CopperEnd" "" #x8584)
				     "copperinfoblock" ("CopperInfoBlock" "" #x8585)
				     "coppermove" ("CopperMove" "register,value" #x8587)
				     "copperreset" ("CopperReset" "coplist#,startline[,ccoffset]" #x8583)
				     "copperskip" ("CopperSkip" "x,y" #x8589)
				     "copperwait" ("CopperWait" "x,y" #x8588)
				     "copybitmap" ("CopyBitMap" "Src BitMap#,Dest BitMap#" #xD005)
				     "copybyte" ("CopyByte" "sourceaddr,destaddr,bytes" #xA58A)
				     "copychunky" ("CopyChunky" "srcchunky#,destchunky#,[sx,sy,w,h,dx,dy]" #xA40C)
				     "copycolour" ("CopyColour" "sourcepal#,destpal#,colsource#,coldest#" #xA08B)
				     "copyfile" ("CopyFile" "[success=] CopyFile(Source$,Dest$)" #xB68D)
				     "copylong" ("CopyLong" "sourceaddr,destaddr,longs" #xA58C)
				     "copyshape" ("CopyShape" "Shape#,Shape#" #xCD07)
				     "copyword" ("CopyWord" "sourceaddr,destaddr,words" #xA58B)
				     "cos" ("Cos" "(Float)" #xE005)
				     "crmdecrunch" ("CrMDecrunch" "Bufferadr" #xA503)
				     "createargstring" ("CreateArgString" "ArgString=CreateArgString(String)" #xAE05)
				     "createdisplay" ("CreateDisplay" "CopList#[,CopList#..]" #xC783)
				     "createmsgport" ("CreateMsgPort" "*UserPort.port=CreateMsgPort(PortName$)" #xE101)
				     "createrexxmsg" ("CreateRexxMsg" "MsgPtr=CreateRexxMsg(ReplyPort,Exten,Host)" #xAE01)
				     "currentdir$" ("CurrentDir$" ";Current directory name" #xB682)
				     "cursx" ("CursX" "" #xC705)
				     "cursy" ("CursY" "" #xC706)
				     "cursor" ("Cursor" "Thickness : <0 - block, >=0 - underline thickness" #xC515)
				     "customchunky" ("CustomChunky" "CopList#,CCOffset,YPos,width,height,res[,splitpos] ;4n+2" #xC791)
				     "customchunkysize" ("CustomChunkySize" "width,height" #xC792)
				     "customcolors" ("CustomColors" "CopList#,CCOffset,YPos,Palette,startcol,numcols[,thru256flag]" #xC789)
				     "customcop" ("CustomCop" "Copins$,Y" #xC803)
				     "customsprites" ("CustomSprites" "CopList#,CCOffset,YPos,NumSprites ;4n+2" #xC790)
				     "customstring" ("CustomString" "CopList#,CCOffset,YPos,Copper$" #xC78A)
				     "cvi" ("Cvi" "(String$)" #xDC8D)
				     "cvl" ("Cvl" "(String$)" #xDC8E)
				     "cvq" ("Cvq" "(String$)" #xDC9B)
				     "cxappear" ("CxAppear" "" #xAC90)
				     "cxchangelist" ("CxChangeList" "" nil)
				     "cxdisappear" ("CxDisAppear" "" #xAC91)
				     "cxdisable" ("CxDisable" "" #xAC8E)
				     "cxenable" ("CxEnable" "" #xAC8F)
				     "cxkill" ("CxKill" "" #xAC92)
				     "cxlistchange" ("CxListChange" "" #xAC93)
				     "cxunique" ("CxUnique" "" #xAC94)
				     "cycle" ("Cycle" "Palette#" #xCE02)
				     "cyclepalette" ("CyclePalette" "Palette#" #xCE15)
				     "dbcasesense" ("DBCasesense" "On|Off" #x8513)
				     "dbinit" ("DBInit" "(object#,init recs, exp recs,rec struct[,keylength[,offset]])" #x8505)
				     "dbload" ("DBLoad" "Database#,filename$" #x851A)
				     "dbsave" ("DBSave" "Database#,filename$" #x8519)
				     "dbactive" ("DBactive" "(Database#) Is a database active or not ?" #x851F)
				     "dbadd" ("DBadd" "(database #,record var) add record to database" #x850D)
				     "dbaddfirst" ("DBaddFirst" "(database #,record var) add record to database" #x850C)
				     "dbaddlast" ("DBaddLast" "(database #,record var) add record to database" #x850B)
				     "dbcurrent" ("DBcurrent" "(Database#)" #x851D)
				     "dbdelete" ("DBdelete" "database # delete current entry in database" #x8511)
				     "dbfind" ("DBfind" "(database #,searchstring$[,length,offset[,startrec]])" #x8516)
				     "dbfindnext" ("DBfindnext" "(database #)" #x8517)
				     "dbfirst" ("DBfirst" "(database #) set pointer to the first database entry" #x8507)
				     "dbget" ("DBget" "(database #,record var) get current record from database" #x850F)
				     "dbisnext" ("DBisnext" "(Database#)" #x851B)
				     "dbisprev" ("DBisprev" "(Database#)" #x851C)
				     "dbkill" ("DBkill" "(database #) kill current database" #x8510)
				     "dblast" ("DBlast" "(database #) set pointer to the last database entry" #x8508)
				     "dblistaddr" ("DBlistaddr" "(database #) gives address of nodelist header" #x8506)
				     "dbmemtype" ("DBmemtype" "memtype" #x8515)
				     "dbmodified" ("DBmodified" "(Database#)" #x851E)
				     "dbnext" ("DBnext" "(database #) set pointer to the next database entry" #x8509)
				     "dbpop" ("DBpop" "(Database#) retrieve a pushed record" #x8521)
				     "dbprev" ("DBprev" "(database #) set pointer to the previous database entry" #x850A)
				     "dbpush" ("DBpush" "(Database#) hold onto this record" #x8520)
				     "dbrecs" ("DBrecs" "(database #) gives number of records in database" #x850E)
				     "dbsetkey" ("DBsetkey" "database #,On|Off" #x8514)
				     "dbsetpos" ("DBsetpos" "database #,recs" #x8512)
				     "dbupdate" ("DBupdate" "database #,record variable" #x8518)
				     "dcb" ("DCB" "" #x8028)
				     "deftype" ("DEFTYPE" "" #x8033)
				     "d_checknmove" ("D_CheckNMove" "source_address,dest_address[,count]" #x9884)
				     "d_checknmovea" ("D_CheckNMoveA" "source_address,dest_address[,count]" #x9899)
				     "d_checknmoveword" ("D_CheckNMoveWord" "source_address,dest_address[,count]" #x9890)
				     "d_findstringptr" ("D_FindStringPtr" "areg5,lookfor" #x9885)
				     "d_findvolume" ("D_FindVolume" "(volumename)" #x9881)
				     "d_getsr" ("D_GetSR" "buffer,SR" #x9882)
				     "d_hexword" ("D_HexWord" "source,address,num" #x9883)
				     "data" ("Data" "" #x801A)
				     "data$" ("Data$" "" nil)
				     "date$" ("Date$" "days.l ;converts days since 1/1/1978 to date string" #xA702)
				     "dateformat" ("DateFormat" "0=dd/mm/yyyy 1=mm/dd/yyyy" #xA704)
				     "days" ("Days" ";returns day calculated in last call to date$" #xA705)
				     "dc" ("Dc" "" #x8025)
				     "dcb" ("Dcb" "" #x8028)
				     "deice" ("DeIce" "(sourceaddr,destaddr)" nil)
				     "deselectbox" ("DeSelectBox" "" #xBA88)
				     "decodeilbm" ("DecodeILBM" "Bitmap#,MemoryLocation" #xD089)
				     "decodemedmodule" ("DecodeMedModule" "MedModule#,MemoryLocation" #xA90B)
				     "decodemodule" ("DecodeModule" "TrackerModule#,ModuleAddress" #x9C04)
				     "decodepalette" ("DecodePalette" "Palette#,MemoryLocation[,Palette Offset]" #xCE1A)
				     "decodeshapes" ("DecodeShapes" "Shape#[,Shape#],MemoryLocation" #xCD0F)
				     "decodesound" ("DecodeSound" "Sound#,MemoryLocation" #xBA0B)
				     "decrypt" ("Decrypt" "memadr,length,wheel1,wheel2,wheel3[,mode]" #x9A02)
				     "default" ("Default" "" #x8010)
				     "defaultidcmp" ("DefaultIDCMP" "IDCMP_Flags" #xC506)
				     "defaultinput" ("DefaultInput" "" #xD201)
				     "defaultoutput" ("DefaultOutput" "" #xD202)
				     "delappicon" ("DelAppIcon" "(id)" #x9E86)
				     "delappmenu" ("DelAppMenu" "(id)" #x9E84)
				     "delappwindow" ("DelAppWindow" "(windownumber)" #x9E82)
				     "deleteargstring" ("DeleteArgString" "argstring" #xAE06)
				     "deletemsgport" ("DeleteMsgPort" "*UserPort" #xE102)
				     "deleterexxmsg" ("DeleteRexxMsg" "rexxmsg.l" #xAE02)
				     "deplode" ("Deplode" "Success=Startadr" #xA502)
				     "depth" ("Depth" "(Bitmap#) ;Returns DEPTH of specified bitmap" #xB38B)
				     "derez" ("Derez" "source#,dest#,sourceadd,destadd,derez_value,height" #xA104)
				     "detachgtlist" ("DetachGTList" "GTList#" #xC69F)
				     "devicename$" ("DeviceName$" "volumename$" #xA5A2)
				     "dim" ("Dim" "" #x8004)
				     "disable" ("Disable" "(GadgetList#,Id)" #xC620)
				     "disablebox" ("DisableBox" "Box#" #xBA94)
				     "diskblocks" ("DiskBlocks" ";Bytes per block of last drive analyzed" #xB696)
				     "diskbuffer" ("DiskBuffer" "Bufferlen" #xBA02)
				     "diskcapacity" ("DiskCapacity" ";Capacity in bytes of last drive analyzed" #xB694)
				     "diskerrors" ("DiskErrors" ";No. of soft errors on last drive analyzed" #xB693)
				     "diskerrs" ("DiskErrs" "" nil)
				     "diskfontbase" ("DiskFontBase" ";Returns DiskFont Library base" #xB589)
				     "diskfree" ("DiskFree" ";No. free bytes on last analyzed disk" #xB697)
				     "diskio" ("DiskIO" "unit#" #xAD8A)
				     "diskmotor" ("DiskMotor" "; Returns -1 if motor is on" #xAD8C)
				     "diskplay" ("DiskPlay" "Filename$,Channelmask[,Vol1[,Vol2...]]" #xBA01)
				     "diskstate" ("DiskState" ";0=Write-Protected, 1=Validating, 2=Validated" #xB6A1)
				     "diskstatus" ("DiskStatus" "unit#" #xAD89)
				     "disktype$" ("DiskType$" ";4-char string ID" #xB6A2)
				     "diskunit" ("DiskUnit" ";Unit# of last drive analyzed" #xB692)
				     "diskused" ("DiskUsed" ";No. bytes used of last analyzed drive" #xB695)
				     "diskfontbase" ("DiskfontBase" ";Returns DiskFont Library base" #xB589)
				     "dispheight" ("DispHeight" "" #xBC0C)
				     "displayadjust" ("DisplayAdjust" "CopList#,fetchwid,ddfstrt,ddfstop,diwstrt,diwstop" #xC788)
				     "displaybitmap" ("DisplayBitMap" "CopList#,bmap[,x,y] [,bmap[,x,y]]" #xC784)
				     "displaycontrols" ("DisplayControls" "CopList#,BPLCON2,BPLCON3,BPLCON4" #xC787)
				     "displaydblscan" ("DisplayDblScan" "CopList#,Mode[,copoffset]" #xC78B)
				     "displaygenlock" ("DisplayGenlock" "BPLCON0" #xC793)
				     "displayoff" ("DisplayOff" "" #xC80B)
				     "displayon" ("DisplayOn" "" #xC80C)
				     "displaypalette" ("DisplayPalette" "CopList#,Palette# [,coloroffset] [,coloroffset,bankoffset]" #xC786)
				     "displayrgb" ("DisplayRGB" "CopList#,Register,line,r,g,b[,copoffset] ;ecs=1 aga=4" #xC78D)
				     "displayrainbow" ("DisplayRainbow" "CopList#,Register,Palette[,copoffset] ;ecs=1 aga=4" #xC78C)
				     "displayscroll" ("DisplayScroll" "CopList#,&xpos.q(n),&xpos.q(n)[,Offset]" #xC78F)
				     "displaysprite" ("DisplaySprite" "CopList#,Sprite#,X,Y,Sprite Channel" #xC785)
				     "displayuser" ("DisplayUser" "CopList#,Line,String[,Offset]" #xC78E)
				     "docolsplit" ("DoColSplit" "cols_adr,numlines,colour_register" #x8581)
				     "docoll" ("DoColl" "" #xB40C)
				     "dofade" ("DoFade" "" #xCE84)
				     "dosbase" ("DosBase" ";Returns DOS Library base" #xB586)
				     "dosbufflen" ("DosBuffLen" "Bytes" #xBE0E)
				     "doserror$" ("DosError$" ";Reason for last failed DOS action" #xB6A0)
				     "dos_base" ("Dos_Base" "Returns pointer to dos.library" #x9A8F)
				     "duplicatepalette" ("DuplicatePalette" "SrcPalette#,DestPalette#" #xCE19)
				     "emousex" ("EMouseX" "" #xC533)
				     "emousey" ("EMouseY" "" #xC534)
				     "even" ("EVEN" "" #x8027)
				     "easyrequest" ("EasyRequest" "Result=EasyRequest([#Window,]title$,body$,gtext$)" #xA281)
				     "edit" ("Edit" "([DefaultValue,]Characters)" #xDD03)
				     "edit$" ("Edit$" "([DefaultString$,]Characters)" #xDD01)
				     "editexit" ("EditExit" "" #xC518)
				     "editfrom" ("EditFrom" "[Characterpos]" #xC517)
				     "editat" ("Editat" "" #xC516)
				     "else" ("Else" "" #x8022)
				     "enable" ("Enable" "(GadgetList#,Id)" #xC61F)
				     "enablebox" ("EnableBox" "Box#" #xBA95)
				     "encrypt" ("Encrypt" "memadr,length[,wheel1,wheel2,wheel3]" #x9A01)
				     "end" ("End" "" #x8002)
				     "endif" ("EndIf" "" #x80C0)
				     "entrybits$" ("EntryBits$" ";Possible bits: H, S, A, P, R, W, E, D" #xB686)
				     "entrycomment$" ("EntryComment$" ";Comment String of last Examined object or entry" #xB68C)
				     "entrydate" ("EntryDate" ";Date$(EntryDate) returns date of last Examined object or entry" #xB688)
				     "entrydir" ("EntryDir" ";True if last Examined object or entry is a directory" #xB685)
				     "entryhour" ("EntryHour" ";Hour of last Examined object or entry" #xB689)
				     "entrymins" ("EntryMins" ";Minutes of last Examined object or entry" #xB68A)
				     "entryname$" ("EntryName$" ";Filename of last Examined object or entry" #xB684)
				     "entrysecs" ("EntrySecs" ";Seconds of last Examined object or entry" #xB68B)
				     "entrysize" ("EntrySize" ";Bytesize of last Examined object or entry" #xB687)
				     "eof" ("Eof" "(File#)" #xBE0D)
				     "erase" ("Erase" "bank" #xA593)
				     "eraseall" ("EraseAll" "" #xA594)
				     "erasemode" ("EraseMode" "" #xCB04)
				     "errfail" ("ErrFail" "" #x80B7)
				     "even" ("Even" "" #x8027)
				     "event" ("Event" "" #xC503)
				     "eventcode" ("EventCode" "" #xC540)
				     "eventqualifier" ("EventQualifier" "" #xC541)
				     "eventwindow" ("EventWindow" "" #xC505)
				     "examine" ("Examine" "[success=] Examine(Pathname$)" #xB69B)
				     "exchange" ("Exchange" "" #x80C9)
				     "exchangeappear" ("ExchangeAppear" "" #xAC89)
				     "exchangechangelist" ("ExchangeChangeList" "" nil)
				     "exchangedisable" ("ExchangeDisAble" "" #xAC87)
				     "exchangedisappear" ("ExchangeDisAppear" "" #xAC8A)
				     "exchangedisable" ("ExchangeDisable" "" #xAC87)
				     "exchangeenable" ("ExchangeEnable" "" #xAC88)
				     "exchangekill" ("ExchangeKill" "" #xAC8B)
				     "exchangelistchange" ("ExchangeListChange" "" #xAC8C)
				     "exchangemessage" ("ExchangeMessage" "" #xAC86)
				     "exchangeunique" ("ExchangeUnique" "" #xAC8D)
				     "exec" ("Exec" "DosCommands$ ;String is executed" #xB6B0)
				     "execversion" ("ExecVersion" "" #xE087)
				     "exists" ("Exists" "(Filename$)" #xBE15)
				     "exp" ("Exp" "(Float)" #xE007)
				     "extractlabel" ("ExtractLabel" "label_string" #x9897)
				     "ffpbase" ("FFPBase" ";Returns FFP Math Library base" #xB588)
				     "finverse" ("FInverse" "inversemode" #x988A)
				     "flocate" ("FLocate" "x,y" #x9887)
				     "fnprint" ("FNPrint" "a$" #x9889)
				     "fnsclip" ("FNSClip" "xmin,ymin,xmax,ymax" #xAE87)
				     "fnsclipoutput" ("FNSClipOutput" "- set clipping zone to output bitmap size" #xAE88)
				     "fnsheight" ("FNSHeight" "(fontnum)" #xAE86)
				     "fnsink" ("FNSInk" "colour" #xAE84)
				     "fnslength" ("FNSLength" "(fontnum,a$[,prefs])" #xAE8B)
				     "fnsload" ("FNSLoad" "(fontname$,fontslot)" #xAE8F)
				     "fnsorigin" ("FNSOrigin" "[x,y]" #xAE8D)
				     "fnsoutput" ("FNSOutput" "bitmap[,clip_update (On|Off)]" #xAE83)
				     "fnsprefs" ("FNSPrefs" "prefs[,colour]" #xAE85)
				     "fnsprint" ("FNSPrint" "fontnum,x,y,a$/string_address[,prefs,colour]" #xAE81)
				     "fnssettab" ("FNSSetTab" "tab_size - set tab size in pixels" #xAE92)
				     "fnsslot" ("FNSSlot" "" #xAE90)
				     "fnsunload" ("FNSUnLoad" "fontslot" #xAE91)
				     "fnsunderline" ("FNSUnderline" "(fontnum)" #xAE8A)
				     "fnsunload" ("FNSUnload" "fontslot" #xAE91)
				     "fnsversion" ("FNSVersion" "- returns quick, lastest version=0.992" #xAE8C)
				     "fnswidth" ("FNSWidth" "(fontnum)" #xAE8E)
				     "fprint" ("FPrint" "a$" #x9888)
				     "fprintdetoke" ("FPrintDetoke" "tokenised_string,cio,typ,lineoffset" #x9895)
				     "fxlibreserved1" ("FXLibReserved1" "" nil)
				     "fxlibreserved2" ("FXLibReserved2" "" nil)
				     "fyoffset" ("FYOffset" "pixel_offset - offset from vertical y cursor to print at" #x988C)
				     "fadein" ("FadeIn" "Palette#[,Rate[,Low Colour,High Colour]]" #xCE81)
				     "fadeinbitmap" ("FadeInBitmap" "bitmapsource#,bitmapdest#,delay[,height,offset1,offset2]" #xA102)
				     "fadeout" ("FadeOut" "Palette#[,Rate[,Low Colour,High Colour]]" #xCE82)
				     "fadepalette" ("FadePalette" "SrcPalette#,DestPalette#,Brightness.q" #xCE16)
				     "fadestatus" ("FadeStatus" "" #xCE85)
				     "false" ("False" "" #xBC0F)
				     "fastfree" ("FastFree" ";Returns largest block of free FAST memory" #xB583)
				     "fields" ("Fields" "File#,Var1[,Var2...]" #xBE04)
				     "filefilter" ("FileFilter" "Show$,Hide$" #x9A86)
				     "fileinput" ("FileInput" "File#" #xBE08)
				     "fileoutput" ("FileOutput" "File#" #xBE07)
				     "filepart$" ("FilePart$" "(FullPath$) ;"DH0:S/User-Startup" -> "User-Startup"" #xB6A3)
				     "filereqsize" ("FileReqSize" "Lines High,File Length,Device Length," #x9A84)
				     "filerequest$" ("FileRequest$" "Title$,Pathname$,Filename$" #xCC01)
				     "fileseek" ("FileSeek" "File#,Position" #xBE0B)
				     "filesize" ("FileSize" "(filename$)" #xA58E)
				     "filestructure" ("FileStructure" "Pointer to file requester structor" #x9A8A)
				     "fillmem" ("FillMem" "address,length[,value]" #xA599)
				     "fillpalette" ("FillPalette" "palette#,r,g,b[,start_col,end_col] - fill palette with r,g,b values" #xA089)
				     "fillrexxmsg" ("FillRexxMsg" "rexxmsg,&FillStruct" #xAE03)
				     "filter" ("Filter" "On|Off" #xBA06)
				     "findscreen" ("FindScreen" "Screen#[,Title$]" #xCF04)
				     "findtoolnumber" ("FindToolNumber" "(tooltype#)" #x9D88)
				     "findtooltype" ("FindToolType" "(tooltype$)" #x9D8F)
				     "findtoolvalue" ("FindToolValue" "(tooltype$)" #x9D82)
				     "findvolume" ("FindVolume" "(volumename)" #xA59F)
				     "firstitem" ("FirstItem" "(Arrayname())" #xC001)
				     "floatmode" ("FloatMode" "Mode : -1=standard, 0=guess, 1=exp" #xDD85)
				     "floodfill" ("FloodFill" "x,y,colour [,border colour]" #xBB89)
				     "flstostr$" ("FlsToStr$" "(startaddr of FLS, maxlength)" #x8504)
				     "flushbuffer" ("FlushBuffer" "Buffer#" #xC906)
				     "flushevents" ("FlushEvents" "[IDCMP_Flag]" #xC537)
				     "flushqueue" ("FlushQueue" "Queue#" #xCA05)
				     "for" ("For" "" #x8016)
				     "forcentsc" ("ForceNTSC" ";Forces screen mode to NTSC (60hz)" #xB38A)
				     "forcepal" ("ForcePAL" ";Forces screen mode to PAL (50hz)" #xB389)
				     "forever" ("Forever" "" #x80C7)
				     "format" ("Format" "FormatString" #xDD84)
				     "formattrack" ("FormatTrack" "unit#,track#,buffer[,numtracks]" #xAD87)
				     "frac" ("Frac" "(Expression)" #xBC04)
				     "frames" ("Frames" "(Anim#)" #xAF05)
				     "free" ("Free" "" #x802B)
				     "freebank" ("FreeBank" "bank#" #xA603)
				     "freecatalog" ("FreeCatalog" "" #xA203)
				     "freechunky" ("FreeChunky" "Chunky#" #xA403)
				     "freefill" ("FreeFill" "frees memory allocated for 2d fill routines" #xBB86)
				     "freeiconobject" ("FreeIconObject" "- free the disk object of a icon" #x9D85)
				     "freeincdata" ("FreeIncData" "" #xB789)
				     "freemacrokey" ("FreeMacroKey" "Rawkey,Qualifier" #xC213)
				     "freemem" ("FreeMem" "address,size" #xA609)
				     "freepcfcache" ("FreePCFCache" "" nil)
				     "freepage" ("FreePage" "Page#" #xBA83)
				     "freeslices" ("FreeSlices" "" #xC80A)
				     "freetrackermodule" ("FreeTrackerModule" "TrackerModule#" #x9C07)
				     "freezonetable" ("FreeZoneTable" "table#" #xA00D)
				     "freq" ("Freq" "Channelmask,period" #xB381)
				     "fromcli" ("FromCLI" "result=FromCLI" #xB503)
				     "fullpath$" ("FullPath$" "(PathPart$,FilePart$) ;\"DH0:S\" + \"User-Startup\" -> \"DH0:S/User-Startup\"" #xB6A5)
				     "funclibversion" ("FuncLibVersion" "V1.36 29/1/95 Written By S Matty (C) LES" nil)
				     "function" ("Function" "" #x8009)
				     "gplot" ("GPlot" "Chunky#,x,y,color.b" #xA414)
				     "gpoint" ("GPoint" "(Chunky#,x,y)" #xA416)
				     "gtarrowsize" ("GTArrowSize" "size" #xC69E)
				     "gtbevelbox" ("GTBevelBox" "GTList#,x,y,w,h,flags" #xC691)
				     "gtbutton" ("GTButton" "GTList#,id,x,y,w,h,Text$,flags" #xC682)
				     "gtchangelist" ("GTChangeList" "GTList#,id [ ,List() ]" #xC692)
				     "gtcheckbox" ("GTCheckBox" "GTList#,id,x,y,w,h,Text$,flags" #xC683)
				     "gtcycle" ("GTCycle" "GTList#,id,x,y,w,h,Text$,flags,Options$[,active]" #xC684)
				     "gtdisable" ("GTDisable" "GTList#,Id" #xC69B)
				     "gtenable" ("GTEnable" "GTList#,Id" #xC69A)
				     "gtfreegadget" ("GTFreeGadget" "GTList#,id" #xC6A2)
				     "gtgadptr" ("GTGadPtr" "(GTList#,id)" #xC690)
				     "gtgetattrs" ("GTGetAttrs" "(GTList#,id,Tag)" #xC699)
				     "gtgetinteger" ("GTGetInteger" "GTList#,id" #xC697)
				     "gtgetstring" ("GTGetString" "GTList#,id" #xC696)
				     "gtgimmecludge" ("GTGimmeCludge" "On/Off" nil)
				     "gtinteger" ("GTInteger" "GTList#,id,x,y,w,h,Text$,flags,default" #xC685)
				     "gtlistview" ("GTListView" "GTList#,id,x,y,w,h,Text$,flags,list()[,selected[,top]]" #xC686)
				     "gtmx" ("GTMX" "GTList#,id,x,y,w,h,Text$,flags,Options$[,active]" #xC687)
				     "gtnumber" ("GTNumber" "GTList#,id,x,y,w,h,Text$,flags,value" #xC688)
				     "gtpalette" ("GTPalette" "GTList#,id,x,y,w,h,Text$,flags,depth[,Color]" #xC689)
				     "gtscroller" ("GTScroller" "GTList#,id,x,y,w,h,Text$,flags,Visible,Total[,Top]" #xC68A)
				     "gtsetattrs" ("GTSetAttrs" "GTList#,id [,Tag,Value...]" #xC693)
				     "gtsethighlight" ("GTSetHighlight" "GTList#,id,value" #xC6A1)
				     "gtsetinteger" ("GTSetInteger" "GTList#,id,value" #xC695)
				     "gtsetstring" ("GTSetString" "GTList#,id,string$" #xC694)
				     "gtshape" ("GTShape" "GTList#,id,x,y,flags,Shape#[,Shape#]" #xC698)
				     "gtslider" ("GTSlider" "GTList#,id,x,y,w,h,Text$,flags,Min,Max[,Level]" #xC68B)
				     "gtstatus" ("GTStatus" "GTList#,Id" #xC69D)
				     "gtstring" ("GTString" "GTList#,id,x,y,w,h,Text$,flags,MaxChars [,default$]" #xC68C)
				     "gttagvalue" ("GTTagValue" "([tagvalue])" #xA587)
				     "gttags" ("GTTags" "Tag,Value [,Tag,Value...]" #xC68F)
				     "gttext" ("GTText" "GTList#,id,x,y,w,h,Text$,flags,Display$" #xC68D)
				     "gttoggle" ("GTToggle" "GTList#,Id [,On|Off]" #xC69C)
				     "gadgetborder" ("GadgetBorder" "X,Y,Width,Height" #xC610)
				     "gadgethit" ("GadgetHit" "" #xC504)
				     "gadgetjam" ("GadgetJam" "Jammode" #xC619)
				     "gadgetpens" ("GadgetPens" "Foreground Colour[,Background Colour]" #xC617)
				     "gadgetstatus" ("GadgetStatus" "(GadgetList#,Id)" #xC61D)
				     "gameb" ("Gameb" "(Port)" #xDF05)
				     "get" ("Get" "File#,Record" #xBE06)
				     "getassigns" ("GetAssigns" "(Type) ;Types are: 0=Devices, 1=Directories 2=Volumes" #xB699)
				     "getccoffset" ("GetCCOffset" "- get current custom copper offset" #x858A)
				     "getcopins$" ("GetCopIns$" "copdata" #x9886)
				     "getcustomreg" ("GetCustomReg" "address" #x9893)
				     "getcustomregadr" ("GetCustomRegAdr" "name$" #x9894)
				     "getenv$" ("GetEnv$" "(Name$) ;Returns DOS environmental variable" #xB6A8)
				     "gethex$" ("GetHex$" "value,mode" #x9891)
				     "gethexadr$" ("GetHexAdr$" "*value,mode" #x9892)
				     "geticoninfo" ("GetIconInfo" "success.w=GetIconInfo(Info#,filename$)" #x9F02)
				     "geticonobject" ("GetIconObject" "(filename$)" #x9D81)
				     "getlocal$" ("GetLocal$" "(Name$) ;Returns DOS local variable" #xB6A7)
				     "getlocalestr" ("GetLocaleStr" "(#StringNumber,DefaultString$)" #xA204)
				     "getmedinstr" ("GetMedInstr" "Channel" #xA909)
				     "getmednote" ("GetMedNote" "Channel" #xA908)
				     "getmedvolume" ("GetMedVolume" "Channel" #xA907)
				     "getmodulename$" ("GetModuleName$" "(TrackerModule#)" #x9C0C)
				     "getmoduleposition" ("GetModulePosition" "" nil)
				     "getprogmode" ("GetProgMode" "mode,buffer" #x988B)
				     "getreg" ("GetReg" "" #x8029)
				     "getresultstring" ("GetResultString" "String=GetResultString(rexxmsg)" #xAE0B)
				     "getrexxcommand" ("GetRexxCommand" "String=GetRexxCommand(rexxmsg,ARGNum)" #xAE0A)
				     "getrexxresult" ("GetRexxResult" "Result=GetRexxResult(rexxmsg,ResultNum)" #xAE09)
				     "getstring$" ("GetString$" "(Title$,Default$,Visable size,Max length)" #x9A89)
				     "getsuperbitmap" ("GetSuperBitMap" "" #xC543)
				     "gettrackerevent" ("GetTrackerEvent" "" #x9C08)
				     "gettrackerlocation" ("GetTrackerLocation" "(TrackerModule#)" #x9C06)
				     "gettrackersize" ("GetTrackerSize" "(TrackerModule#)" #x9C05)
				     "getwheel" ("GetWheel" "wheel#" #x9A03)
				     "getzonex1" ("GetZoneX1" "(zone) - returns the start x pos of a zone" #xA012)
				     "getzonex2" ("GetZoneX2" "(zone) - returns the end x pos of a zone" #xA014)
				     "getzoney1" ("GetZoneY1" "(zone) - returns the start y pos of a zone" #xA013)
				     "getzoney2" ("GetZoneY2" "(zone) - returns the end pos of a zone" #xA015)
				     "getashape" ("GetaShape" "Shape#,X,Y,Width,Height" #xCD08)
				     "getasprite" ("GetaSprite" "Sprite#,Shape#" #xB801)
				     "gfx_base" ("Gfx_Base" "Returns pointer to graphics.library" #x9A91)
				     "gosub" ("Gosub" "" #x8006)
				     "goto" ("Goto" "" #x8005)
				     "graphicsbase" ("GraphicsBase" ";Returns Graphics Library base" #xB587)
				     "green" ("Green" "(Colour Register)" #xCE07)
				     "greychunky" ("GreyChunky" "chunky#" #xA40D)
				     "hcos" ("HCos" "(Float)" #xE006)
				     "hpropbody" ("HPropBody" "(GadgetList#,Id)" #xC608)
				     "hproppot" ("HPropPot" "(GadgetList#,Id)" #xC607)
				     "hsin" ("HSin" "(Float)" #xE00B)
				     "htan" ("HTan" "(Float)" #xE00E)
				     "handle" ("Handle" "Shape#,X,Y" #xCD05)
				     "handlerawkey" ("HandleRawKey" "" #xB105)
				     "hardcopy" ("HardCopy" "Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags" #xA302)
				     "hardcopy" ("Hardcopy" "Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags" #xA302)
				     "hex#" ("Hex#" "(HexString$) ;Converts hexadecimal (in string) value to decimal" #xB48D)
				     "hex$" ("Hex$" "(Expression)" #xDC84)
				     "hidescreen" ("HideScreen" "Screen#" #xCF0C)
				     "hotkeyhit" ("HotKeyHit" "" #xAC83)
				     "hours" ("Hours" ";gets system time and returns hour of day" #xA709)
				     "ilbmdepth" ("ILBMDepth" "" #xD087)
				     "ilbmgrab" ("ILBMGrab" "sourceaddr,bitmap#,palette#" #xA485)
				     "ilbmheight" ("ILBMHeight" "" #xD086)
				     "ilbminfo" ("ILBMInfo" "Filename$" #xD084)
				     "ilbmpalette" ("ILBMPalette" "(sourceaddr,palette#[,#offset)" #xA484)
				     "ilbmviewmode" ("ILBMViewMode" "" #xD088)
				     "ilbmwidth" ("ILBMWidth" "" #xD085)
				     "illegal" ("ILLEGAL" "" #x8077)
				     "incdir" ("INCDIR" "" #x80BF)
				     "include" ("INCLUDE" "" #x8013)
				     "iconbase" ("IconBase" ";Returns Icon Library base" #xB58B)
				     "icondeftool" ("IconDefTool" "tool$" #x9D8E)
				     "icondeftool$" ("IconDefTool$" "deftool$=IconDefTool$(Info#)" #x9F05)
				     "icondefaulttool" ("IconDefaultTool" "" nil)
				     "iconrender" ("IconRender" "render_flags" #x9D8D)
				     "iconstack" ("IconStack" "stackSize.l=IconType(Info#)" #x9F06)
				     "iconsubtool$" ("IconSubTool$" "boolean.w=IconSubTool$(type$,sub$) -1=Found" #x9F07)
				     "icontool$" ("IconTool$" "tool$=IconTool$(Info#,type$)" #x9F03)
				     "icontype" ("IconType" "type.w=IconType(Info#)" #x9F04)
				     "if" ("If" "" #x800B)
				     "implode" ("Implode" "Error/CrunchedLen=Bufferadr,DataLen" #xA501)
				     "infront" ("InFront" "Sprite Channel" #xB803)
				     "infrontb" ("InFrontB" "Sprite Channel" #xB805)
				     "infrontf" ("InFrontF" "Sprite Channel" #xB804)
				     "incbin" ("IncBin" "" #x802A)
				     "incbitmap" ("IncBitmap" "" #xB782)
				     "incdata" ("IncData" "" #xB788)
				     "incdataabs" ("IncDataAbs" "" #xB787)
				     "incmed" ("IncMed" "" #xB784)
				     "incmod" ("IncMod" "" #xB783)
				     "incnextshape" ("IncNextShape" "" #xB786)
				     "incshape" ("IncShape" "" #xB785)
				     "incsize" ("IncSize" "" #xB78C)
				     "incsound" ("IncSound" "" #xB781)
				     "inctext$" ("IncText$" "" #xB78B)
				     "index" ("Index" "List() ;Returns index from top of LIST" #xB281)
				     "initanim" ("InitAnim" "Anim#[,BitMap#]" #xAF03)
				     "initbank" ("InitBank" "bank#,size,memtype ;0=fast 2=chip 65536=clrmem" #xA602)
				     "initchunky" ("InitChunky" "Chunky#,width,height,flags (1=24bit 2=8bit)" #xA402)
				     "initcoplist" ("InitCopList" "CopList#[,type]|[,ypos,height,type,sprites,colors,numcustoms]" #xC782)
				     "initpage" ("InitPage" "Page#,BitMap#,NumBoxes" #xBA82)
				     "initpalette" ("InitPalette" "Palette#,NumColors" #xCE17)
				     "initshape" ("InitShape" "Shape#,Width,Height,Depth" #xCD10)
				     "initsound" ("InitSound" "Sound#,Length[,Period[,Repeat]]" #xBA08)
				     "initzoomxy" ("InitZoomXY" "source#,dest#,sourceadd,destadd" #xA106)
				     "inkey$" ("Inkey$" "[(Characters)]" #xDD02)
				     "innercls" ("InnerCls" "[Colour]" #xC52F)
				     "innerheight" ("InnerHeight" "" #xC52E)
				     "innerwidth" ("InnerWidth" "" #xC52D)
				     "installfns" ("InstallFNS" "(fontnum,address)" #xAE82)
				     "instr" ("Instr" "(String$,Findstring$[,Startpos])" #xDC89)
				     "int" ("Int" "(Expression)" #xBC02)
				     "int_base" ("Int_Base" "Returns pointer to intuition.library" #x9A90)
				     "intuitionbase" ("IntuitionBase" ";Returns Intuition Library base" #xB585)
				     "invmode" ("InvMode" "" #xCB05)
				     "iseven" ("IsEven" "" nil)
				     "islocale" ("IsLocale" "<>0 if locale exists" #xA201)
				     "isreqtoolsactive" ("IsReqToolsActive" "" #x9B1A)
				     "isreqtoolsactive" ("IsReqtoolsActive" "" #x9B1A)
				     "isrexxmsg" ("IsRexxMsg" "Boolean=IsRexxMsg(rexxmsg)" #xAE0D)
				     "itemhit" ("ItemHit" "" #xC508)
				     "itemstacksize" ("ItemStackSize" "Max Items" #xC00D)
				     "jadaptorstatus" ("JAdaptorStatus" "On/Off - status of four player adaptor reading" #xA011)
				     "jfire" ("JFire" "(port)" #xA006)
				     "jhoriz" ("JHoriz" "(port)" #xA008)
				     "jvert" ("JVert" "(port)" #xA007)
				     "joyy" ("JoYY" "(Port)" #xDF02)
				     "joyc" ("JoyC" "(Port)" #xB386)
				     "joyb" ("Joyb" "(Port)" #xDF04)
				     "joyr" ("Joyr" "(Port)" #xDF03)
				     "joyx" ("Joyx" "(Port)" #xDF01)
				     "joyy" ("Joyy" "(Port)" #xDF02)
				     "jumpmed" ("JumpMed" "Pattern#" #xA905)
				     "keycode" ("KeyCode" "" #xA59A)
				     "killfile" ("KillFile" "Filename$" #xBE03)
				     "killgreychunky" ("KillGreyChunky" "chunky#" #xA40E)
				     "killitem" ("KillItem" "Arrayname()" #xC005)
				     "lcase$" ("LCase$" "(String$)" #xDC97)
				     "lecludgeshapes" ("LECludgeShapes" "shape#,shape#,address,palette#[,copymemflag]" #x9706)
				     "lecompressshapes" ("LECompressShapes" "True|False" #x9705)
				     "leinitshape" ("LEInitShape" "shape#,width,height,depth" #x9707)
				     "leloadshapes" ("LELoadShapes" "shape#[,shape#],filename$[,palette#]" #x9703)
				     "lemaxshapedepth" ("LEMaxShapeDepth" "" #x970B)
				     "lemaxshapeheight" ("LEMaxShapeHeight" "" #x970A)
				     "lemaxshapewidth" ("LEMaxShapeWidth" "" #x9709)
				     "lesaveshapes" ("LESaveShapes" "shape#,shape#,filename$[,palette#]" #x9704)
				     "lescanshapes" ("LEScanShapes" "startshape#,endshape#" #x9708)
				     "lset$" ("LSet$" "(String$,Characters)" #xDC94)
				     "largest" ("Largest" "(Integer1,Integer2)" #xB486)
				     "largest.l" ("Largest.l" "(Long Integer1,Long Integer2)" #xB482)
				     "largest.q" ("Largest.q" "(Quick1,Quick2)" #xB484)
				     "largestfree" ("LargestFree" ";Returns largest block of memory available" #xB584)
				     "lastitem" ("LastItem" "Arrayname()" #xC00C)
				     "left$" ("Left$" "(String$,Length)" #xDC81)
				     "len" ("Len" "(String$)" #xDC8F)
				     "length" ("Length" "(bank)" #xA592)
				     "let" ("Let" "" #x8003)
				     "line" ("Line" "[x1,y1,]x2,y2,color[,width]" #xBB85)
				     "lisa" ("Lisa" "-- returns Lisa chip version" #xA583)
				     "list" ("List" "" #x80B3)
				     "listbase" ("ListBase" "(list)" #x8682)
				     "loadanim" ("LoadAnim" "Anim#,Filename$[,Palette#]" #xAF02)
				     "loadbank" ("LoadBank" "bank#,filename$[,memtype]" #xA604)
				     "loadbitmap" ("LoadBitMap" "BitMap#,Filename$[,Palette#]" #xD002)
				     "loadblitzfont" ("LoadBlitzFont" "BlitzFont#,Fontname.font$" #xC701)
				     "loadchunky" ("LoadChunky" "Chunky#,IFFfilename$" #xA404)
				     "loadfont" ("LoadFont" "IntuiFont#,Fontname.font$,Y size [,style]" #xC301)
				     "loadiff" ("LoadIFF" "(filename$,bitmap[,palette])" #xA486)
				     "loadmedmodule" ("LoadMedModule" "MedModule#,Name" #xA901)
				     "loadmodule" ("LoadModule" "Module#,Filename$" #xB002)
				     "loadpcf" ("LoadPCF" "" nil)
				     "loadpalette" ("LoadPalette" "Palette#,Filename$[,Palette Offset]" #xCE01)
				     "loadscreen" ("LoadScreen" "Screen#,Filename$[,Palette#]" #xCF03)
				     "loadshape" ("LoadShape" "Shape#,Filename$[,Palette#]" #xCD01)
				     "loadshapes" ("LoadShapes" "Shape#[,Shape#],Filename$" #xCD0A)
				     "loadsound" ("LoadSound" "Sound#,Filename$" #xBA03)
				     "loadsprites" ("LoadSprites" "Sprite#[,Sprite#],Filename$" #xB807)
				     "loadtape" ("LoadTape" "Tape#,filename$" #xC204)
				     "loadtrackermodule" ("LoadTrackerModule" "(TrackerModule#,Name)" #x9C01)
				     "loc" ("Loc" "(File#)" #xBE0C)
				     "locate" ("Locate" "X,Y" #xC704)
				     "lof" ("Lof" "(File#)" #xBE0A)
				     "log" ("Log" "(Float)" #xE009)
				     "log10" ("Log10" "(Float)" #xE008)
				     "loopsound" ("LoopSound" "Sound#,Channelmask[,Vol1[,Vol2...]]" #xBA07)
				     "mbuttons" ("MButtons" "" #xC522)
				     "mod" ("MOD" "" #x80B9)
				     "macro" ("Macro" "" #x800D)
				     "macrokey" ("MacroKey" "Tape#,Rawkey,Qualifier" #xC209)
				     "makecommodity" ("MakeCommodity" "(name$,title$,description$" #xAC81)
				     "makecookie" ("MakeCookie" "Shape#" #xCD02)
				     "makedir" ("MakeDir" "(dirname$)" #xA584)
				     "matchtoolvalue" ("MatchToolValue" "(tooltype$,value$)" #x9D86)
				     "matchwild" ("MatchWild" "(String$) ;TRUE=Match, FALSE=No Match" #xB69F)
				     "max" ("Max" "(a,b)" #xA58D)
				     "maxlen" ("MaxLen" "" #x8032)
				     "maxselect$" ("MaxSelect$" "Path$=(Title$,File$,Path$,Flags,number of files)" #x9A8C)
				     "maximum" ("Maximum" "" #x80C4)
				     "memfree" ("MemFree" "" #xA586)
				     "menuchecked" ("MenuChecked" "(MenuList#,Menu,Item[,Subitem])" #xC40C)
				     "menucolour" ("MenuColour" "Colour" #xC40B)
				     "menugap" ("MenuGap" "X Gap,Y Gap" #xC407)
				     "menuhit" ("MenuHit" "" #xC507)
				     "menuitem" ("MenuItem" "MenuList#,Flags,Menu,Item,Itemtext$[,Shortcut$]" #xC403)
				     "menustate" ("MenuState" "MenuList#[,Menu[,Item[,Subitem]]],On|Off" #xC40A)
				     "menutitle" ("MenuTitle" "MenuList#,Menu,Title$" #xC401)
				     "menus" ("Menus" "On|Off" #xC523)
				     "menusoff" ("MenusOff" "" #xC528)
				     "menuson" ("MenusOn" "" #xC527)
				     "mid$" ("Mid$" "(String$,Startchar[,Length])" #xDC83)
				     "midhandle" ("MidHandle" "Shape#" #xCD0D)
				     "min" ("Min" "(a,b)" #xA589)
				     "mins" ("Mins" ";returns minutes calculated at last call to hour" #xA70A)
				     "mixpalette" ("MixPalette" "Palette#,Palette#,DestPalette#,fraction" #xCE1B)
				     "mki$" ("Mki$" "(Integer)" #xDC8B)
				     "mkl$" ("Mkl$" "(Long)" #xDC8C)
				     "mkq$" ("Mkq$" "(Quick)" #xDC9A)
				     "module" ("Module" "" #xB001)
				     "modulepatterns" ("ModulePatterns" "(Module #)" #x9C12)
				     "modulepositionjump" ("ModulePositionJump" "(Position#)" nil)
				     "modulesamplename" ("ModuleSampleName" "(Module#,Sample#[0-30])" #x9C13)
				     "moduletochip" ("ModuleToChip" "(TrackerModule#)" nil)
				     "months" ("Months" ";returns month calculated in last call to date$" #xA706)
				     "moreentries" ("MoreEntries" ";True if more entries in Examined directory" #xB683)
				     "motoroff" ("MotorOff" "unit#" #xAD85)
				     "motoron" ("MotorOn" "unit#" #xAD82)
				     "mouse" ("Mouse" "On|Off" #xB601)
				     "mousearea" ("MouseArea" "Minx,Miny,Maxx,Maxy" #xB603)
				     "mousebutton" ("MouseButton" "Button,On|Off : 0=Left" #xC207)
				     "mouseenabled" ("MouseEnabled" "" #xBA96)
				     "mousewait" ("MouseWait" "" #x800A)
				     "mousex" ("MouseX" "" #xB604)
				     "mousexspeed" ("MouseXSpeed" "" #xB606)
				     "mousey" ("MouseY" "" #xB605)
				     "mouseyspeed" ("MouseYSpeed" "" #xB607)
				     "movefile" ("MoveFile" "[success=] MoveFile(Source$,Dest$)" #xB698)
				     "movescreen" ("MoveScreen" "Screen#,deltax,deltay" #xCF0E)
				     "newtype" ("NEWTYPE" "" #x8001)
				     "nprint" ("NPrint" "Expression[,Expression...]" #xDD82)
				     "nprintcon" ("NPrintCon" "Console#,Expression" #xA184)
				     "ntsc" ("NTSC" "" #xBC0B)
				     "namefile" ("NameFile" "[success=] Rename(Oldfilename$,Newfilename$)" #xB68F)
				     "newpalettemode" ("NewPaletteMode" "On|Off" #xCE14)
				     "newtooltype" ("NewToolType" "(tooltype$,value$[,status])" #x9D87)
				     "newzonetable" ("NewZoneTable" "table#,num_zones" #xA00B)
				     "next" ("Next" "" #x8017)
				     "nextappfile" ("NextAppFile" "" #x9E8A)
				     "nextbank" ("NextBank" "[startbank]" #xA596)
				     "nextfile$" ("NextFile$" "Returns next file form MaxSelect$" #x9A8B)
				     "nextframe" ("NextFrame" "Anim#" #xAF04)
				     "nextitem" ("NextItem" "(Arrayname())" #xC003)
				     "nocli" ("NoCli" "" #x80CC)
				     "nomoreentries" ("NoMoreEntries" ";Release lock on currently Examined object" #xB6A6)
				     "null" ("Null" "(String$) ;Returns address of null-termed string" #xB581)
				     "numdays" ("NumDays" "date$ ;converts dd/mm/yyyy to days since 1/1/1978" #xA703)
				     "numpars" ("NumPars" "pars.w=NumPars" #xB501)
				     "off" ("Off" "" #x80C6)
				     "on" ("On" "" #x80C5)
				     "opencd" ("OpenCD" "[devicename,unit] - open a CD compatible device" #x8701)
				     "openconsole" ("OpenConsole" "#Window,#Console" #xA182)
				     "opendisk" ("OpenDisk" "unit#" #xAD81)
				     "openfile" ("OpenFile" "(File#,Filename$)" #xBE01)
				     "openserial" ("OpenSerial" "device$,unit#,baud,io_serflags" #xAD01)
				     "outtext" ("OutText" "x,y,rastport,address/string" #x9898)
				     "outtextpen" ("OutTextPen" "rastport,pen" #x989A)
				     "pcfdepth" ("PCFDepth" "" nil)
				     "pcfheight" ("PCFHeight" "" nil)
				     "pcfinfo" ("PCFInfo" "" nil)
				     "pcfversion" ("PCFVersion" "" nil)
				     "pcfwidth" ("PCFWidth" "" nil)
				     "pcoll" ("PColl" "(Sprite Channel)" #xB40B)
				     "picreaterequest" ("PICreateRequest" "(Title$,Min,Max [,NoGagdet])" #x9B81)
				     "piendrequest" ("PIEndRequest" "" #x9B82)
				     "piupdaterequest" ("PIUpdateRequest" "(Value)" #x9B83)
				     "pload" ("PLoad" "(filename$,address)" nil)
				     "ppdecrunch" ("PPDecrunch" "Bufferadr,Bufferend,Destinationadr" #xA504)
				     "packpbm" ("PackPBM" "sourceaddr,destaddr,length" #xA481)
				     "paladjust" ("PalAdjust" "palette#,ratio.q[,start_col,end_col]" #xA088)
				     "palblue" ("PalBlue" "(colour#)" #xA083)
				     "palgreen" ("PalGreen" "(colour#)" #xA082)
				     "palrgb" ("PalRGB" "Palette#,Colour Register,Red,Green,Blue" #xCE0A)
				     "palred" ("PalRed" "(colour#)" #xA081)
				     "palette" ("Palette" "" #xCE09)
				     "paletteinfo" ("PaletteInfo" "palette#" #xA084)
				     "paletterange" ("PaletteRange" "Palette#,StartCol,EndCol,r0,g0,b0,r1,g1,b1" #xCE18)
				     "par$" ("Par$" "parameter$=Par$(Paramter#)" #xB502)
				     "parpath$" ("ParPath$" "path$=ParPath$(Par#,#type)" #xB504)
				     "pathlock" ("PathLock" "" #xB682)
				     "pathpart$" ("PathPart$" "(FullPath$) ;\"DH0:S/User-Startup\" -> \"DH0:S\"" #xB6A4)
				     "pausemodule" ("PauseModule" "" #x9C0D)
				     "peek" ("Peek" "[.Type](Address)" #xDA02)
				     "peekmax$" ("PeekMax$" "(address,max_chars)" #x988F)
				     "peeksound" ("PeekSound" "(Sound#,Offset)" #xBA0A)
				     "peekto$" ("PeekTo$" "(Address,byte)" #xB388)
				     "peeks$" ("Peeks$" "(Address,Length)" nil)
				     "peekto$" ("Peekto$" "(Address,byte)" #xB388)
				     "phoneticspeak" ("PhoneticSpeak" "phonetic string" #xAC04)
				     "pi" ("Pi" "" #x80BA)
				     "planartochunky" ("PlanarToChunky" "" nil)
				     "playback" ("PlayBack" "[Tape#]" #xC202)
				     "playmed" ("PlayMed" "" #xA903)
				     "playmodule" ("PlayModule" "Module#" #xB003)
				     "playtracker" ("PlayTracker" "" #x9C0F)
				     "playwait" ("PlayWait" "" #xC20F)
				     "plot" ("Plot" "X,Y,Colour" #xB203)
				     "point" ("Point" "X,Y,Colour" #xB204)
				     "pointer" ("Pointer" "Sprite#,Sprite Channel" #xB602)
				     "poke" ("Poke" "[.Type] Address,Data" #xDA01)
				     "poly" ("Poly" "numpts,*coords.w,color" #xBB8A)
				     "polyf" ("Polyf" "numpts,*coords.w,color[,color2]" #xBB8B)
				     "pop" ("Pop" "" #x80BE)
				     "popinput" ("PopInput" "" #xD20A)
				     "popitem" ("PopItem" "Arrayname()" #xC00A)
				     "popoutput" ("PopOutput" "" #xD20B)
				     "positionmouse" ("PositionMouse" "x,y" #xB608)
				     "positionsuperbitmap" ("PositionSuperBitMap" "x,y" #xC542)
				     "positionsuperbitmap" ("PositionSuperBitmap" "x,y" #xC542)
				     "previtem" ("PrevItem" "Arrayname()" #xC00B)
				     "print" ("Print" "Expression[,Expression...]" #xDD81)
				     "printcon" ("PrintCon" "Console#,Expression" #xA183)
				     "processchunky" ("ProcessChunky" "chunky#,contrast" #xA408)
				     "processor" ("Processor" "" #xE085)
				     "propgadget" ("PropGadget" "GadgetList#,X,Y,Flags,Id,Width,Height" #xC603)
				     "prtcommand" ("PrtCommand" "Command,Para1,Para2,Para3,Para4" #xA303)
				     "prttext" ("PrtText" "String" #xA301)
				     "pushitem" ("PushItem" "Arrayname()" #xC009)
				     "put" ("Put" "File#,Record" #xBE05)
				     "puticonobject" ("PutIconObject" "(filename$[,icontype]|[x,y])" #x9D84)
				     "putreg" ("PutReg" "" #x80BD)
				     "putsuperbitmap" ("PutSuperBitMap" "" #xC544)
				     "qamiga" ("QAMIGA" "" #x8036)
				     "qabs" ("QAbs" "(Quick)" #xBC08)
				     "qangle" ("QAngle" "(Src X,Src Y,Dest X,Dest Y)" #xBC10)
				     "qblit" ("QBlit" "Queue#,Shape#,X,Y[,Excessonoff]" #xCA02)
				     "qblitmode" ("QBlitMode" "BLTCON0" #xCA04)
				     "qfrac" ("QFrac" "(Quick)" #xBC05)
				     "qlimit" ("QLimit" "(Quick,Low,High)" #xBC0A)
				     "qwrap" ("QWrap" "(Quick,Low,High)" #xBC06)
				     "qualifier" ("Qualifier" "" #xC513)
				     "queue" ("Queue" "Queue#,Max Items" #xCA01)
				     "quickplay" ("QuickPlay" "On|Off" #xC20D)
				     "quiet" ("Quiet" "ChannelMask ;Stops specified currently playing sounds" #xB382)
				     "quiettrap" ("QuietTrap" "On|Off" #xC20B)
				     "rgb" ("RGB" "Colour Register,Red,Green,Blue" #xCE05)
				     "rianimframecount" ("RIAnimFrameCount" "" #x9C84)
				     "rianiminit" ("RIAnimInit" "(address,bitmap#,palette# [,xy_offset]|[,x,y])" #x9C81)
				     "rinextanimframe" ("RINextAnimFrame" "(bitmap#)" #x9C82)
				     "rrandomize" ("RRandomize" "Seed" #xB48B)
				     "rrnd" ("RRnd" "(Low,High)" #xB48C)
				     "rset$" ("RSet$" "(String$,Characters)" #xDC95)
				     "rtasyncpaletterequest" ("RTASyncPaletteRequest" "(Title$,FirstColour)" #x9B1B)
				     "rtasyncrequest" ("RTASyncRequest" "(Title$,BodyText$,GadgetText$)" #x9B15)
				     "rtcheckasyncpaletterequest" ("RTCheckASyncPaletteRequest" "" #x9B1C)
				     "rtcheckasyncrequest" ("RTCheckASyncRequest" "" #x9B16)
				     "rtezflagsrequest" ("RTEZFlagsRequest" "(Title$,BodyText$,GadgetText$,IDCMPFlags [,ReqPosition])" #x9B10)
				     "rtezfontrequest" ("RTEZFontRequest" "(Title$)" #x9B03)
				     "rtezfreepattern" ("RTEZFreePattern" "Requester#" #x9B0F)
				     "rtezgetlong" ("RTEZGetLong" "(Title$,BodyText$ [,DefaultValue])" #x9B06)
				     "rtezgetlongrange" ("RTEZGetLongRange" "(Title$,BodyText$,Min,Max [,DefaultValue])" #x9B07)
				     "rtezgetstring" ("RTEZGetString" "(Title$,BodyText$,MaxChars [,DefaultString])" #x9B08)
				     "rtezloadfile" ("RTEZLoadFile" "(Title$,Filename$)" #x9B02)
				     "rtezmultiloadfile" ("RTEZMultiLoadFile" "(Title$)" #x9B13)
				     "rtezpaletterequest" ("RTEZPaletteRequest" "(Title$,FirstColour)" #x9B05)
				     "rtezpathrequest" ("RTEZPathRequest" "(Title$)" #x9B0B)
				     "rtezrnextpathentry" ("RTEZRNextPathEntry" "" nil)
				     "rtezrequest" ("RTEZRequest" "(Title$,BodyText$,GadgetText$ [,ReqPosition [,DefaultResponse,Flags]])" #x9B01)
				     "rtezsavefile" ("RTEZSaveFile" "(Title$,Filename$)" #x9B09)
				     "rtezscreenmoderequest" ("RTEZScreenModeRequest" "(Title$ [,DisplayFlags])" #x9B04)
				     "rtezsetdefaultdirectory" ("RTEZSetDefaultDirectory" "Requester#,Directory$" #x9B0A)
				     "rtezsetpattern" ("RTEZSetPattern" "Requester#,Pattern$" #x9B0E)
				     "rtendasyncpaletterequest" ("RTEndASyncPaletteRequest" "" #x9B1D)
				     "rtendasyncrequest" ("RTEndASyncRequest" "" #x9B17)
				     "rtfilerequest" ("RTFileRequest" "(Title$,FileName$,TagList)" #x9B12)
				     "rtlockwindow" ("RTLockWindow" "(Window#)" #x9B0C)
				     "rtnextpathentry" ("RTNextPathEntry" "" #x9B14)
				     "rtrequest" ("RTRequest" "(BodyText$,GadgetText$,TagList)" #x9B11)
				     "rtrevision" ("RTRevision" "" #x9B19)
				     "rtunlockwindow" ("RTUnlockWindow" "Window#,Lock" #x9B0D)
				     "rtversion" ("RTVersion" "" #x9B18)
				     "rastport" ("RastPort" "(Window#)" #xC539)
				     "rawkey" ("RawKey" "" #xC514)
				     "rawstatus" ("RawStatus" "(Rawkey)" #xB102)
				     "remap" ("ReMap" "colour# to replace,destination colour# [,BitMap destintion" #xBB88)
				     "read" ("Read" "" #x801B)
				     "readchunky" ("ReadChunky" "Chunky#,rawfilename$" #xA406)
				     "readfile" ("ReadFile" "(File#,Filename$)" #xBE11)
				     "readmem" ("ReadMem" "File#,Address,Length" #xBE14)
				     "readsector" ("ReadSector" "unit#,sector#,buffer[,numsectors]" #xAD84)
				     "readserial" ("ReadSerial" "(unit#[,flags 1=wait on])" #xAD04)
				     "readserialmem" ("ReadSerialMem" "unit#,Address,Length" #xAD0B)
				     "readserialstring" ("ReadSerialString" "(unit#)" #xAD05)
				     "reboot" ("Reboot" "-- performs a cold reboot" #xA582)
				     "record" ("Record" "[Tape#]" #xC201)
				     "rectshit" ("RectsHit" "(X1,Y1,Width1,Height1,X2,Y2,Width2,Height2)" #xB409)
				     "red" ("Red" "(Colour Register)" #xCE06)
				     "redocolsplit" ("RedoColSplit" "cols_adr,numlines,ccoffset" #x8582)
				     "redraw" ("Redraw" "Window#,Id" #xC60B)
				     "redrawbox" ("RedrawBox" "Box#" #xBA86)
				     "redrawpage" ("RedrawPage" "" #xBA85)
				     "reducex2" ("ReduceX2" "source#,dest#,sourceadd,destadd,width,height" #xA10C)
				     "relmouse" ("RelMouse" "X Offset,Y Offset" #xC206)
				     "remicrvector_a" ("RemICRVector_a" "" #xF902)
				     "remicrvector_b" ("RemICRVector_b" "" #xF882)
				     "removefns" ("RemoveFNS" "fontnum" #xAE89)
				     "rename" ("Rename" "(oldfilename$,newfilename$)" #xA585)
				     "renderpoly" ("RenderPoly" "numpts,*coords.w,color" #xAB88)
				     "rendertobitmap" ("RenderToBitmap" "BitMap#[,DitherBitMap#]" #xAB86)
				     "rendertochunky" ("RenderToChunky" "CopList#[,split]" #xAB87)
				     "repeat" ("Repeat" "" #x80BB)
				     "repeats" ("Repeats" "(String$) ;Returns # repetitive characters at front of string" #xB288)
				     "replace$" ("Replace$" "(String$,Findstring$,Replacestring$)" #xDC8A)
				     "replyrexxmsg" ("ReplyRexxMsg" "rexxmsg,Result1,Result2,ResultString" #xAE08)
				     "reqcolours" ("ReqColours" "Text,Detail,Block[,File,Dir,Device[,GadText,GadBox,StringName,StringBox,Frame]]" #x9A88)
				     "reqfileloc" ("ReqFileLoc" "" #xA782)
				     "reqfilerequest" ("ReqFileRequest" "" #xA781)
				     "reqfilerequest$" ("ReqFileRequest$" "(Title$,File$,Path$,Flags)" #x9A85)
				     "reqfontsize" ("ReqFontSize" "Returns font size" #x9A8D)
				     "reqoutput" ("ReqOutput" "" #xA783)
				     "req_base" ("Req_Base" "Returns pointer to req.library" #x9A8E)
				     "request" ("Request" "(Title$,text$,button$) ;OS 2.0 & above System Requester" #xB58D)
				     "reserve" ("Reserve" "(length)|(bank,length[,requirements])" #xA595)
				     "resetlist" ("ResetList" "Arrayname()" #xC004)
				     "resetstring" ("ResetString" "GadgetList#,Id" #xC613)
				     "resettimer" ("ResetTimer" ";Resets timer to zero 'Ticks.'" #xB385)
				     "restore" ("Restore" "" #x80C8)
				     "return" ("Return" "" #x8007)
				     "rex_base" ("Rex_Base" "Returns pointer to RexxSys.library ?" #x9A92)
				     "rexxerror" ("RexxError" "ErrorString=RexxError(ErrorCode)" #xAE0E)
				     "rexxevent" ("RexxEvent" "rexxmsg=RexxEvent(PortAddress)" #xAE0C)
				     "rexxsysbase" ("RexxSysBase" ";Returns RexxSys Library base" #xB58C)
				     "rexxsysbase" ("RexxsysBase" ";Returns RexxSys Library base" #xB58C)
				     "right$" ("Right$" "(String$,Length)" #xDC82)
				     "rnd" ("Rnd" "[(Range)]" #xBC07)
				     "rotate" ("Rotate" "Shape#,Angle Ratio" #xBB04)
				     "rrandomize" ("Rrandomize" "Seed" #xB48B)
				     "rrnd" ("Rrnd" "(Low,High)" #xB48C)
				     "run" ("Run" "[*Process=] Run(Filename$,Args$[,StackSize])" #xB6AD)
				     "runerrsoff" ("Runerrsoff" "" #x80D3)
				     "runerrson" ("Runerrson" "" #x80D2)
				     "sblit" ("SBlit" "Stencil#,Shape#,X,Y[,Excessonoff]" #xBD02)
				     "sblitmode" ("SBlitMode" "BLTCON0" #xBD03)
				     "scoll" ("SColl" "(Sprite Channel,Sprite Channel)" #xB40A)
				     "shared" ("SHARED" "" #x8015)
				     "smousex" ("SMouseX" "" #xCF05)
				     "smousey" ("SMouseY" "" #xCF06)
				     "space$" ("SPACE$" "(number of spaces)" #xB282)
				     "safetoblit" ("SafeToBlit" "shape,x,y" #x9702)
				     "savebank" ("SaveBank" "bank#,filename$" #xA605)
				     "savebitmap" ("SaveBitmap" "BitMap#,Filename$[,Palette#]" #xB901)
				     "savecmap" ("SaveCMAP" "palette#,filename$" #xA08D)
				     "savechunky" ("SaveChunky" "Chunky#,IFFfilename$" #xA405)
				     "saveincdata" ("SaveIncData" "" #xB78A)
				     "savepalette" ("SavePalette" "Palette#,Filename$" #xB905)
				     "savescreen" ("SaveScreen" "Screen#,Filename$" #xB902)
				     "saveshape" ("SaveShape" "Shape#,Filename$[,Palette#]" #xB904)
				     "saveshapes" ("SaveShapes" "Shape#,Shape#,Filename$" #xCD09)
				     "savesprites" ("SaveSprites" "Sprite#,Sprite#,Filename$" #xB806)
				     "savetape" ("SaveTape" "Tape#,Filename$" #xC203)
				     "scale" ("Scale" "Shape#,X Ratio,Y Ratio[,Palette#]" #xBB01)
				     "scalechunkyx" ("ScaleChunkyX" "srcchunky#,destchunky#,newwidth" #xA40A)
				     "scalechunkyy" ("ScaleChunkyY" "srcchunky#,destchunky#,newheight" #xA40B)
				     "screen" ("Screen" "[Screen#,Mode[,Title$]]|[Screen#,X,Y,W,H,D,Viewmode,Title$,Dpen,Bpen[,BitMap#]" #xCF01)
				     "screenheight" ("ScreenHeight" ";Returns height in pixels of active screen" #xB590)
				     "screenpens" ("ScreenPens" "Text,Shine,Shadow,Fill,FillText,Background,HighLight" #xCF08)
				     "screentags" ("ScreenTags" "Screen#,Title$ [&TagList] or [[,Tag,Data]...]" #xCF0F)
				     "screenwidth" ("ScreenWidth" ";Returns width in pixels of active screen" #xB58F)
				     "screensbitmap" ("ScreensBitMap" "Screen#,BitMap#" #xD003)
				     "scroll" ("Scroll" "X1,Y1,Width,Height,X2,Y2[,BitMap#]" #xB201)
				     "searchbegin" ("SearchBegin" "(String$,byte,# from Begin) ;Searches string for Nth byte" #xB286)
				     "searchend" ("SearchEnd" "(String$,byte,# from End) ;Searches string backwards for Nth byte" #xB285)
				     "searchmem" ("SearchMem" "type,value,start_ad,end_ad" #x988D)
				     "searchmemfound" ("SearchMemFound" "" #x988E)
				     "searchstring" ("SearchString" "" nil)
				     "secs" ("Secs" ";returns seconds calculated at last call to hour" #xA70B)
				     "select" ("Select" "" #x800E)
				     "selectbox" ("SelectBox" "[Box#]|[x+,y+][0,x,y] ;deselects previously selected" #xBA87)
				     "selectmode" ("SelectMode" "1=Box, 0=Inverse" #xC61A)
				     "sendrexxcommand" ("SendRexxCommand" "rexxmsg,CommandString,ActionCodes" #xAE07)
				     "serialevent" ("SerialEvent" "(unit#)" #xAD0A)
				     "setblwait" ("SetBLWait" "Wait move for line 256 (eg:$ffe1fffe" #xC80E)
				     "setbplcon0" ("SetBPLCON0" "BPLCON0 Default" #xC80D)
				     "setbits" ("SetBits" "[success=] SetBits(Bits$,Filename$) ;<HSPARWED>" #xB69D)
				     "setbox" ("SetBox" "Box#[,Value]|[xprop,yprop]" #xBA8A)
				     "setboxcolor" ("SetBoxColor" "Box#,color" #xBA91)
				     "setboxstring" ("SetBoxString" "Box#,String$" #xBA8C)
				     "setboxtitle" ("SetBoxTitle" "Box#,String$" #xBA93)
				     "setcoll" ("SetColl" "Colour,Bitplanes[,Playfield 1=front, 2=back]" #xB404)
				     "setcollhi" ("SetCollHi" "Bitplanes" #xB405)
				     "setcollodd" ("SetCollOdd" "" #xB403)
				     "setcopybuffer" ("SetCopyBuffer" "BufferSize ;Default is 4096 bytes, min. 1024 bytes" #xB68E)
				     "setcxstatus" ("SetCxStatus" "on|off" #xAC95)
				     "setcycle" ("SetCycle" "Palette#,Cycle,Low Colour,High Colour[,Speed]" #xCE0B)
				     "setenv" ("SetEnv" "[success=] SetEnv(Name$,Value$) ;Sets DOS environmental variable" #xB6AA)
				     "seterr" ("SetErr" "" #x80B4)
				     "seteventfilter" ("SetEventFilter" "preprocess,postprocess" #xC53A)
				     "setfilecomment" ("SetFileComment" "[success=] SetFileComment(Filename$,Comment$)" #xB69C)
				     "setgadgetstatus" ("SetGadgetStatus" "(GadgetList#,Id,Value)" #xC621)
				     "sethprop" ("SetHProp" "GadgetList#,Id,Pot,Body" #xC605)
				     "sethotkey" ("SetHotKey" "(hotkeynum,hotkey$)" #xAC82)
				     "seticr_a" ("SetICR_a" "(resource,mask)" #xF904)
				     "seticr_b" ("SetICR_b" "(resource,mask)" #xF884)
				     "seticonhit" ("SetIconHit" "width,height" #x9D8A)
				     "seticontype" ("SetIconType" "object_type" #x9D8C)
				     "setint" ("SetInt" "" #x8030)
				     "setlocal" ("SetLocal" "[success=] SetLocal(Name$,Value$) ;Sets DOS local variable" #xB6A9)
				     "setmedmask" ("SetMedMask" "Channel Mask" #xA90A)
				     "setmedvolume" ("SetMedVolume" "Volume" #xA906)
				     "setmenu" ("SetMenu" "Menulist#" #xC402)
				     "setpagepens" ("SetPagePens" "Page#,c0,c1,c2,c3 (defaults: 3,1,2,3)" #xBA97)
				     "setperiod" ("SetPeriod" "Sound#,Period" #xBA0C)
				     "setserialbuffer" ("SetSerialBuffer" "unit#,bufferlength" #xAD07)
				     "setseriallens" ("SetSerialLens" "unit#,readlen,writelen,stopbits" #xAD08)
				     "setserialparams" ("SetSerialParams" "unit#" #xAD09)
				     "setstatus" ("SetStatus" "" nil)
				     "setstring" ("SetString" "GadgetList#,Id,String$" #xC61B)
				     "settextgadget" ("SetTextGadget" "GadgetList#,Id,Text$" #xC622)
				     "settoolvalue" ("SetToolValue" "(tooltype$,value$[,status])" #x9D83)
				     "setvprop" ("SetVProp" "GadgetList#,Id,Pot,Body" #xC606)
				     "setvoice" ("SetVoice" "rate(150),pitch(110),expression(1),sex,volume(64),freq(22200)" #xAC02)
				     "setwildstring" ("SetWildString" "[result=] SetWildString(Pattern$) ;0=Failed, 1=Found WildCards, 2=No WildCards" #xB69E)
				     "setzone" ("SetZone" "num,x1,y1[,x2,y2]|[,radius]" #xA002)
				     "setzonemode" ("SetZoneMode" "mode" #xA010)
				     "setuplesdebug" ("SetupLESDebug" "token_addr,tokenise" #x9896)
				     "sgn" ("Sgn" "(Expression)" #xBC03)
				     "shape" ("Shape" "" #xCD0C)
				     "shapegadget" ("ShapeGadget" "GadgetList#,X,Y,Flags,Id,Shape#[,Shape#]" #xC604)
				     "shapeheight" ("ShapeHeight" "(Shape#)" #xCD04)
				     "shapeitem" ("ShapeItem" "MenuList#,Flags,Menu,Item,Shape#" #xC405)
				     "shapespritehit" ("ShapeSpriteHit" "(Shape#,X,Y,Sprite#,X,Y)" #xB407)
				     "shapesub" ("ShapeSub" "MenuList#,Flags,Menu,Item,Subitem,Shape#" #xC406)
				     "shapetoicon" ("ShapeToIcon" "shape" #x9D8B)
				     "shapewidth" ("ShapeWidth" "(Shape#)" #xCD03)
				     "shapesbitmap" ("ShapesBitMap" "Shape#,BitMap#" #xD006)
				     "shapeshit" ("ShapesHit" "(Shape#,X,Y,Shape#,X,Y)" #xB406)
				     "shared" ("Shared" "" #x8015)
				     "show" ("Show" "Bitmap#[,X,Y]" #xC804)
				     "showb" ("ShowB" "Bitmap#[,X,Y[,ShowF X]]" #xC806)
				     "showbitmap" ("ShowBitMap" "[BitMap#]" #xCF0A)
				     "showbitmap" ("ShowBitmap" "[BitMap#]" #xCF0A)
				     "showblitz" ("ShowBlitz" "" #xC809)
				     "showf" ("ShowF" "Bitmap#[,X,Y[,ShowB X]]" #xC805)
				     "showpalette" ("ShowPalette" "Palette#" #xCE13)
				     "showrequesters" ("ShowRequesters" "[0=Cancel] [1=On Workbench Screen] [2=In Current Window]" #xB593)
				     "showscreen" ("ShowScreen" "Screen#" #xCF07)
				     "showsprite" ("ShowSprite" "Sprite#,X,Y,Sprite Channel" #xB802)
				     "showstencil" ("ShowStencil" "Buffer#,Stencil#" #xC905)
				     "sin" ("Sin" "(Float)" #xE00A)
				     "sizelimits" ("SizeLimits" "Min Width,Min Height,Max Width,Max Height" #xC532)
				     "sizeof" ("SizeOf" "" #x802F)
				     "slice" ("Slice" "[Slice#,Y,Flags]|[Slice#,Y,Width,Hite,Flgs,Bitplns,Sprts,Colrs,Fscrnw,Bscrnw]" #xC801)
				     "smallest" ("Smallest" "(Integer1,Integer2)" #xB487)
				     "smallest.l" ("Smallest.l" "(Long Integer1,Long Integer2)" #xB483)
				     "smallest.q" ("Smallest.q" "(Quick1,Quick2)" #xB485)
				     "solidmode" ("SolidMode" "" #xCB06)
				     "sort" ("Sort" "Arrayname()" #xB701)
				     "sortdown" ("SortDown" "" #xB703)
				     "sortlist" ("SortList" "Arrayname(),sizeof .type\offset" #xC00E)
				     "sortup" ("SortUp" "" #xB702)
				     "sound" ("Sound" "Sound#,Channelmask[,Vol1[,Vol2...]]" #xBA04)
				     "sounddata" ("SoundData" "Sound#,Offset,Data" #xBA09)
				     "space$" ("Space$" "(number of spaces)" #xB282)
				     "speak" ("Speak" "string" #xAC01)
				     "spotbox" ("SpotBox" "; returns box that mouse is over" #xBA9C)
				     "spritemode" ("SpriteMode" "0=16 1=32 2=64" #xB808)
				     "spriteshit" ("SpritesHit" "(Sprite#,X,Y,Sprite#,X,Y)" #xB408)
				     "sqr" ("Sqr" "(Float)" #xE00C)
				     "start" ("Start" "(bank)" #xA591)
				     "startmedmodule" ("StartMedModule" "MedModule#" #xA902)
				     "starttracker" ("StartTracker" "(TrackerModule#)" #x9C02)
				     "statement" ("Statement" "" #x8008)
				     "stencil" ("Stencil" "Stencil#,BitMap#" #xBD01)
				     "stopcycle" ("StopCycle" "" #xCE0C)
				     "stopmed" ("StopMed" "" #xA904)
				     "stopmodule" ("StopModule" "" #xB004)
				     "stoptracker" ("StopTracker" "" #x9C03)
				     "str$" ("Str$" "(Expression)" #xDD83)
				     "strtofls" ("StrToFls" "string$,destvar,maxlength[,fillchar]" #x8503)
				     "string$" ("String$" "(String$,Repeats)" #xDC88)
				     "stringgadget" ("StringGadget" "GadgetList#,X,Y,Flags,Id,Maxlen,Width" #xC602)
				     "stringsort" ("StringSort" "list,sizeof.type[,offset] - sort from start of list" #x8681)
				     "stringsortdir" ("StringSortDir" "direction" #x8684)
				     "stringsortitem" ("StringSortItem" "list,sizeof.type[,offset] - sort from current list item" #x8683)
				     "stringtext$" ("StringText$" "(GadgetList#,Id)" #xC614)
				     "striplead$" ("StripLead$" "(String$,Ascii)" #xDC92)
				     "striptrail$" ("StripTrail$" "(String$,Ascii)" #xDC93)
				     "subhit" ("SubHit" "" #xC509)
				     "subidcmp" ("SubIDCMP" "IDCMP_Flags" #xC536)
				     "subitem" ("SubItem" "MenuList#,Flags,Menu,Item,Subitem,Subitemtext$[,Shortcut$]" #xC404)
				     "subitemoff" ("SubItemOff" "X Offset,Y Offset" #xC408)
				     "swapbank" ("SwapBank" "(sourcebank,destbank)" #xA5A1)
				     "sysjsr" ("SysJsr" "" #x80C2)
				     "systemdate" ("SystemDate" "Returns system date as number of days since 1/1/1978" #xA701)
				     "tan" ("Tan" "(Float)" #xE00D)
				     "tapetrap" ("TapeTrap" "[Tape#]" #xC20A)
				     "taskname$" ("TaskName$" "task" #xE104)
				     "textgadget" ("TextGadget" "GadgetList#,X,Y,Flags,Id,Text$" #xC601)
				     "textrequest" ("TextRequest" "(Text,Title,Left Text[,[Middle Text,]Right Text])" #x9A83)
				     "texttimeout" ("TextTimeout" "Timeout Seconds" #x9A87)
				     "then" ("Then" "" #x8021)
				     "ticks" ("Ticks" ";'ticks' since last ResetTimer (1/50 secs. PAL, 1/60 NTSC)" #xB384)
				     "timer" ("Timer" "-- returns number of 50ths since machine startup" #xA588)
				     "to" ("To" "" #x8018)
				     "toggle" ("Toggle" "GadgetList#,Id [,On|Off]" #xC60E)
				     "togglebox" ("ToggleBox" "Box#" #xBA9B)
				     "tokejsr" ("TokeJsr" "" #x8039)
				     "trackervolume" ("TrackerVolume" "(Volume Range: 0-64)" #x9C10)
				     "translate$" ("Translate$" "returns phoneme translation of a string" #xAC03)
				     "true" ("True" "" #xBC0E)
				     "type" ("Type" "String$" #xC20C)
				     "ucase$" ("UCase$" "(String$)" #xDC98)
				     "used" ("USED" "" #x80D1)
				     "usepath" ("USEPATH" "" #x80CA)
				     "ustr$" ("UStr$" "(Expression)" #xDD86)
				     "unbuffer" ("UnBuffer" "Buffer#" #xC903)
				     "unleft$" ("UnLeft$" "(String$,Length)" #xDC90)
				     "unpackpbm" ("UnPackPBM" "sourceaddr,destaddr,length,destlength" #xA488)
				     "unqueue" ("UnQueue" "Queue#[,BitMap#]" #xCA03)
				     "unright$" ("UnRight$" "(String$,Length)" #xDC91)
				     "unsetenv" ("UnSetEnv" "[success=] UnSetEnv(Name$) ;Removes DOS environmental variable" #xB6AC)
				     "unsetlocal" ("UnSetLocal" "[success=] UnSetLocal(Name$) ;Removes DOS local variable" #xB6AB)
				     "unpackiff" ("UnpackIFF" "(sourceaddr,bitmap#[,numlines,xy_offset])" #xA483)
				     "unpackpcf" ("UnpackPCF" "" nil)
				     "until" ("Until" "" #x80BC)
				     "use" ("Use" "" #x802C)
				     "usecatalog" ("UseCatalog" "Catalogname" #xA202)
				     "usezonetable" ("UseZoneTable" "- select a zone table for use" #xA00C)
				     "used" ("Used" "" #x80D1)
				     "vpos" ("VPos" "" #xBC0D)
				     "vpropbody" ("VPropBody" "(GadgetList#,Id)" #xC60A)
				     "vproppot" ("VPropPot" "(GadgetList#,Id)" #xC609)
				     "vwait" ("VWait" "" #x8037)
				     "vwaitpos" ("VWaitPos" "RasterLine" #xB383)
				     "val" ("Val" "(String$)" #xBC01)
				     "viewport" ("ViewPort" "(Screen#)" #xCF09)
				     "voiceloc" ("VoiceLoc" "returns location of newvoice struct" #xAC05)
				     "volume" ("Volume" "Channelmask,Vol1[,Vol2...]" #xBA05)
				     "vpos" ("Vpos" "" #xBC0D)
				     "vwaitpos" ("VwaitPos" "RasterLine" #xB383)
				     "wbdepth" ("WBDepth" "" #xE083)
				     "wbextviewmode" ("WBExtViewMode" "" #xE088)
				     "wbheight" ("WBHeight" "" #xE082)
				     "wbstartup" ("WBStartup" "" #x80C3)
				     "wbviewmode" ("WBViewMode" "" #xE084)
				     "wbwidth" ("WBWidth" "" #xE081)
				     "wblit" ("WBlit" "Shape#,x,y" #xC53E)
				     "wbox" ("WBox" "X1,Y1,X2,Y2,Colour" #xC50C)
				     "wcircle" ("WCircle" "X,Y,Radius,Colour" #xC50D)
				     "wcls" ("WCls" "[Colour]" #xC50F)
				     "wcolour" ("WColour" "Foreground Colour[,Background Colour]" #xC51C)
				     "wcursx" ("WCursX" "" #xC524)
				     "wcursy" ("WCursY" "" #xC525)
				     "wellipse" ("WEllipse" "X,Y,X Radius,Y Radius,Colour" #xC50E)
				     "wjam" ("WJam" "Jammode" #xC51D)
				     "wleftoff" ("WLeftOff" "" #xC531)
				     "wline" ("WLine" "X1,Y1,X2,Y3[,Xn,Yn...],Colour" #xC51E)
				     "wlocate" ("WLocate" "Cursor x,Cursor y" #xC510)
				     "wmousex" ("WMouseX" "" #xC51A)
				     "wmousey" ("WMouseY" "" #xC51B)
				     "wmove" ("WMove" "X,Y" #xC529)
				     "wplot" ("WPlot" "X,Y,Colour" #xC50B)
				     "wpointer" ("WPointer" "Shape#" #xC526)
				     "wprintscroll" ("WPrintScroll" "" #xC53D)
				     "wscroll" ("WScroll" "X1,Y1,X2,Y2,Delta X,Delta Y" #xC519)
				     "wsize" ("WSize" "Width,Height" #xC52A)
				     "wtitle" ("WTitle" "windowtitle$,screentitle$" #xC53B)
				     "wtopoff" ("WTopOff" "" #xC530)
				     "wait" ("Wait" "" #xE103)
				     "waitblitter" ("WaitBlitter" "" #xA59E)
				     "waitcommodity" ("WaitCommodity" "" #xAC84)
				     "waitevent" ("WaitEvent" "" #xC502)
				     "waitfor" ("WaitFor" "(IDCMP Code)" #xB592)
				     "waittrackerevent" ("WaitTrackerEvent" "" #x9C0A)
				     "wbtoscreen" ("WbToScreen" "Screen#" #xCF02)
				     "weekday" ("WeekDay" ";returns day of week calculated in last call to date$" #xA708)
				     "wend" ("Wend" "" #x80C1)
				     "while" ("While" "" #x800C)
				     "window" ("Window" "Window#,X,Y,Width,Height,Flags,Title$,Dpen,Bpen[,GadgetList#[,BitMap#]]" #xC501)
				     "windowfont" ("WindowFont" "IntuiFont# [,SoftStyle]" #xC50A)
				     "windowheight" ("WindowHeight" "" #xC52C)
				     "windowinput" ("WindowInput" "Window#" #xC511)
				     "windowoutput" ("WindowOutput" "Window#" #xC512)
				     "windowtags" ("WindowTags" "Window#,Flags,Title$ [,&TagList] or [[,Tag,Data]...]" #xC545)
				     "windowwidth" ("WindowWidth" "" #xC52B)
				     "windowx" ("WindowX" "" #xC520)
				     "windowy" ("WindowY" "" #xC521)
				     "wline" ("Wline" "X1,Y1,X2,Y3[,Xn,Yn...],Colour" #xC51E)
				     "writeboot" ("WriteBoot" "unit#[,bootdata]" #xAD88)
				     "writechunky" ("WriteChunky" "Chunky#,rawfilename$" #xA407)
				     "writefile" ("WriteFile" "(File#,Filename$)" #xBE12)
				     "writemem" ("WriteMem" "File#,Address,Length" #xBE13)
				     "writesector" ("WriteSector" "unit#,sector#,buffer[,numsectors]" #xAD86)
				     "writeserial" ("WriteSerial" "unit#,byte" #xAD02)
				     "writeserialmem" ("WriteSerialMem" "unit#,Address,Length" #xAD0C)
				     "writeserialstring" ("WriteSerialString" "unit#,string[,Flags 1=DoIO 2=TrueString] " #xAD03)
				     "xbdecodesound" ("XBDecodeSound" "Sound#,MemoryLocation" #x820B)
				     "xbdiskbuffer" ("XBDiskBuffer" "Bufferlen" #x8202)
				     "xbdiskplay" ("XBDiskPlay" "Filename$,Channelmask[,Vol1[,Vol2...]]" #x8201)
				     "xbfilter" ("XBFilter" "On|Off" #x8206)
				     "xbinitsound" ("XBInitSound" "Sound#,Length[,Period[,Repeat]]" #x8208)
				     "xbloadsound" ("XBLoadSound" "Sound#,Filename$" #x8203)
				     "xbloopsound" ("XBLoopSound" "Sound#,Channelmask[,Vol1[,Vol2...]]" #x8207)
				     "xbpeeksound" ("XBPeekSound" "(Sound#,Offset)" #x820A)
				     "xbsetperiod" ("XBSetPeriod" "Sound#,Period" #x820C)
				     "xbsound" ("XBSound" "Sound#,Channelmask[,Vol1[,Vol2...]]" #x8204)
				     "xbsounddata" ("XBSoundData" "Sound#,Offset,Data" #x8209)
				     "xbvolume" ("XBVolume" "Channelmask,Vol1[,Vol2...]" #x8205)
				     "xflip" ("XFlip" "Shape#" #xBB02)
				     "xinclude" ("XINCLUDE" "" #x8012)
				     "xor" ("XOR" "(expression,expression) ;Returns Exclusive OR of two expressions" #xB481)
				     "xstatus" ("XStatus" "" #xC20E)
				     "xor" ("Xor" "(expression,expression) ;Returns Exclusive OR of two expressions" #xB481)
				     "yflip" ("YFlip" "Shape#" #xBB03)
				     "years" ("Years" ";returns year calculated in last call to date$" #xA707)
				     "zone" ("Zone" "(x,y)" #xA003)
				     "zoneinit" ("ZoneInit" "[zone_num#]|[#start_num,#end_num] - intialize zones" #xA001)
				     "zonemode" ("ZoneMode" "- returns -1 for 68020 mode or 0 for 68000 mode" #xA00F)
				     "zonetable" ("ZoneTable" "- returns address of the current zone table" #xA005)
				     "zonetablenumber" ("ZoneTableNumber" "- returns the number of the current zone table" #xA00E)
				     "zonetablesize" ("ZoneTableSize" "- returns size of the current zone table" #xA00A)
				     "zonetest" ("ZoneTest" "(start_num[,end_num],x,y)" #xA004)
				     "zoomx2" ("ZoomX2" "source#,dest#,sourceadd,destadd,width,height" #xA107)
				     "zoomx4" ("ZoomX4" "source#,dest#,sourceadd,destadd,width,height[,xy_select]" #xA103)
				     "zoomx8" ("ZoomX8" "source#,dest#,sourceadd,destadd,width,height" #xA10A)
				     "zoomxy" ("ZoomXY" "xzoom,yzoom,height" #xA105)
				     "cr_vbr" ("cr_vbr" "" #xE086)
				     "abcd" ("ABCD" "" #x803C)
				     "add" ("ADD" "" #x803D)
				     "adda" ("ADDA" "" #x803F)
				     "addi" ("ADDI" "" #x803E)
				     "addq" ("ADDQ" "" #x8040)
				     "addx" ("ADDX" "" #x8041)
				     "and" ("AND" "" #x8042)
				     "andi" ("ANDI" "" #x8043)
				     "asl" ("ASL" "" #x8044)
				     "asr" ("ASR" "" #x8045)
				     "bcc" ("BCC" "" #x8046)
				     "bcs" ("BCS" "" #x8047)
				     "beq" ("BEQ" "" #x8048)
				     "bge" ("BGE" "" #x8049)
				     "bgt" ("BGT" "" #x804A)
				     "bhi" ("BHI" "" #x804B)
				     "ble" ("BLE" "" #x804C)
				     "bls" ("BLS" "" #x804D)
				     "blt" ("BLT" "" #x804E)
				     "bmi" ("BMI" "" #x804F)
				     "bne" ("BNE" "" #x8050)
				     "bpl" ("BPL" "" #x8051)
				     "bvc" ("BVC" "" #x8052)
				     "bvs" ("BVS" "" #x8053)
				     "bra" ("BRA" "" #x8058)
				     "bsr" ("BSR" "" #x8059)
				     "bchg" ("BCHG" "" #x8054)
				     "bclr" ("BCLR" "" #x8055)
				     "bset" ("BSET" "" #x8056)
				     "btst" ("BTST" "" #x8057)
				     "chk" ("CHK" "" #x805A)
				     "clr" ("CLR" "" #x805B)
				     "cmp" ("CMP" "" #x805C)
				     "cmpa" ("CMPA" "" #x805E)
				     "cmpi" ("CMPI" "" #x805D)
				     "cmpm" ("CMPM" "" #x805F)
				     "dbcc" ("DBCC" "" #x8060)
				     "dbcs" ("DBCS" "" #x8061)
				     "dbeq" ("DBEQ" "" #x8062)
				     "dbf" ("DBF" "" #x806E)
				     "dbra" ("DBRA" "" #x806F)
				     "dbge" ("DBGE" "" #x8063)
				     "dbgt" ("DBGT" "" #x8064)
				     "dbhi" ("DBHI" "" #x8065)
				     "dble" ("DBLE" "" #x8066)
				     "dbls" ("DBLS" "" #x8067)
				     "dblt" ("DBLT" "" #x8068)
				     "dbmi" ("DBMI" "" #x8069)
				     "dbne" ("DBNE" "" #x806A)
				     "dbpl" ("DBPL" "" #x806B)
				     "dbt" ("DBT" "" #x8070)
				     "dbvc" ("DBVC" "" #x806C)
				     "dbvs" ("DBVS" "" #x806D)
				     "divs" ("DIVS" "" #x8071)
				     "divu" ("DIVU" "" #x8072)
				     "eor" ("EOR" "" #x8073)
				     "eori" ("EORI" "" #x8074)
				     "exg" ("EXG" "" #x8075)
				     "ext" ("EXT" "" #x8076)
				     "jmp" ("JMP" "" #x8078)
				     "jsr" ("JSR" "" #x8079)
				     "lea" ("LEA" "" #x807A)
				     "link" ("LINK" "" #x807B)
				     "lsl" ("LSL" "" #x807C)
				     "lsr" ("LSR" "" #x807D)
				     "move" ("MOVE" "" #x807E)
				     "movea" ("MOVEA" "" #x8080)
				     "movem" ("MOVEM" "" #x8082)
				     "movep" ("MOVEP" "" #x807F)
				     "moveq" ("MOVEQ" "" #x8081)
				     "muls" ("MULS" "" #x8083)
				     "mulu" ("MULU" "" #x8084)
				     "nbcd" ("NBCD" "" #x8085)
				     "neg" ("NEG" "" #x8086)
				     "negx" ("NEGX" "" #x8087)
				     "nop" ("NOP" "" #x8088)
				     "not" ("NOT" "" #x8089)
				     "or" ("OR" "" #x808A)
				     "ori" ("ORI" "" #x808B)
				     "pea" ("PEA" "" #x808C)
				     "reset" ("RESET" "" #x808D)
				     "rol" ("ROL" "" #x808E)
				     "ror" ("ROR" "" #x808F)
				     "roxl" ("ROXL" "" #x8090)
				     "roxr" ("ROXR" "" #x8091)
				     "rte" ("RTE" "" #x8092)
				     "rtr" ("RTR" "" #x8093)
				     "rts" ("RTS" "" #x8094)
				     "sbcd" ("SBCD" "" #x8095)
				     "scc" ("SCC" "" #x8096)
				     "scs" ("SCS" "" #x8097)
				     "seq" ("SEQ" "" #x8098)
				     "sf" ("SF" "" #x80A5)
				     "sge" ("SGE" "" #x8099)
				     "sgt" ("SGT" "" #x809A)
				     "shi" ("SHI" "" #x809B)
				     "sle" ("SLE" "" #x809C)
				     "sls" ("SLS" "" #x809D)
				     "slt" ("SLT" "" #x809E)
				     "smi" ("SMI" "" #x809F)
				     "sne" ("SNE" "" #x80A0)
				     "spl" ("SPL" "" #x80A1)
				     "st" ("ST" "" #x80A4)
				     "svc" ("SVC" "" #x80A2)
				     "svs" ("SVS" "" #x80A3)
				     "stop" ("STOP" "" #x802D)
				     "sub" ("SUB" "" #x80A7)
				     "suba" ("SUBA" "" #x80A9)
				     "subi" ("SUBI" "" #x80A8)
				     "subq" ("SUBQ" "" #x80AA)
				     "subx" ("SUBX" "" #x80AB)
				     "swap" ("SWAP" "" #x80AC)
				     "tas" ("TAS" "" #x80AD)
				     "trap" ("TRAP" "" #x80AE)
				     "trapv" ("TRAPV" "" #x80AF)
				     "tst" ("TST" "" #x80B0)
				     "unlk" ("UNLK" "" #x80B1)
				     "agarexxhost_" ("AGARexxHost_" "(rmsg,result)" #xFC01)
				     "abortio_" ("AbortIO_" "" #xFEC6)
				     "abortpkt_" ("AbortPkt_" "(port,pkt)" #xFE26)
				     "activatecxobj_" ("ActivateCxObj_" "(co,true)" #xF803)
				     "activategadget_" ("ActivateGadget_" "" #xFFC9)
				     "activatewindow_" ("ActivateWindow_" "" #xFFC7)
				     "addamigaguidehosta_" ("AddAmigaGuideHostA_" "" #xFC10)
				     "addanimob_" ("AddAnimOb_" "" #xFF16)
				     "addappicona_" ("AddAppIconA_" "" #xEE03)
				     "addappmenuitema_" ("AddAppMenuItemA_" "" #xEE05)
				     "addappwindowa_" ("AddAppWindowA_" "" #xEE01)
				     "addbob_" ("AddBob_" "(bob,rp)" #xFF0C)
				     "addbootnode_" ("AddBootNode_" "(bootPri,flags,deviceNode,configDev)" #xF682)
				     "addbuffers_" ("AddBuffers_" "(name,number)" #xFE73)
				     "addclass_" ("AddClass_" "" #xFFEC)
				     "addconfigdev_" ("AddConfigDev_" "" #xF681)
				     "adddtobject_" ("AddDTObject_" "(win,req,o,pos)" #xF788)
				     "adddevice_" ("AddDevice_" "" #xFEBE)
				     "adddosentry_" ("AddDosEntry_" "" #xFE6A)
				     "adddosnode_" ("AddDosNode_" "" #xF695)
				     "addfont_" ("AddFont_" "" #xFF4C)
				     "addfreelist_" ("AddFreeList_" "" #xF582)
				     "addglist_" ("AddGList_" "" #xFFC5)
				     "addgadget_" ("AddGadget_" "" #xFF83)
				     "addhead_" ("AddHead_" "(list,node)" #xFE9E)
				     "addievents_" ("AddIEvents_" "" #xF819)
				     "addintserver_" ("AddIntServer_" "(intNumber,interrupt)" #xFE92)
				     "addlibrary_" ("AddLibrary_" "" #xFEB8)
				     "addmemhandler_" ("AddMemHandler_" "" #xFEF4)
				     "addmemlist_" ("AddMemList_" "" #xFEDA)
				     "addnamedobject_" ("AddNamedObject_" "(namespace,object)" #xEE9E)
				     "addpart_" ("AddPart_" "" #xFC8B)
				     "addport_" ("AddPort_" "" #xFEB1)
				     "addresource_" ("AddResource_" "" #xFEC7)
				     "addsegment_" ("AddSegment_" "" #xFE7A)
				     "addsemaphore_" ("AddSemaphore_" "" #xFED7)
				     "addtail_" ("AddTail_" "(list,node)" #xFE9F)
				     "addtask_" ("AddTask_" "" #xFEA5)
				     "addvsprite_" ("AddVSprite_" "(vSprite,rp)" #xFF0D)
				     "alert_" ("Alert_" "" #xFE88)
				     "allocabs_" ("AllocAbs_" "(byteSize,location)" #xFE98)
				     "allocaslrequest_" ("AllocAslRequest_" "(reqType,tagList)" #xFB84)
				     "allocbitmap_" ("AllocBitMap_" "" #xFD0E)
				     "allocboardinfo_" ("AllocBoardInfo_" "" nil)
				     "allocboardmem_" ("AllocBoardMem_" "" #xF683)
				     "allocconfigdev_" ("AllocConfigDev_" "" #xF684)
				     "allocdbufinfo_" ("AllocDBufInfo_" "" #xFD16)
				     "allocdosobject_" ("AllocDosObject_" "(type,tags)" #xFE20)
				     "allocentry_" ("AllocEntry_" "" #xFE9B)
				     "allocexpansionmem_" ("AllocExpansionMem_" "(numSlots,slotAlign)" #xF685)
				     "allocfilerequest_" ("AllocFileRequest_" "" #xFB81)
				     "allociff_" ("AllocIFF_" "" #xF501)
				     "alloclocalitem_" ("AllocLocalItem_" "(type,id,ident,dataSize)" #xF51A)
				     "allocmem_" ("AllocMem_" "(byteSize,requirements)" #xFE97)
				     "allocmiscresource_" ("AllocMiscResource_" "(unitNum,name)" #xF001)
				     "allocnamedobjecta_" ("AllocNamedObjectA_" "(name,tags)" #xEE9F)
				     "allocpooled_" ("AllocPooled_" "(poolHeader,memSize)" #xFEE9)
				     "allocpotbits_" ("AllocPotBits_" "" #xEF81)
				     "allocraster_" ("AllocRaster_" "(width,height)" #xFF4E)
				     "allocremember_" ("AllocRemember_" "" #xFFBE)
				     "allocscreenbuffer_" ("AllocScreenBuffer_" "" #xFFF2)
				     "allocsignal_" ("AllocSignal_" "" #xFEAD)
				     "allocspritedataa_" ("AllocSpriteDataA_" "(bm,tags)" #xFD1E)
				     "alloctrap_" ("AllocTrap_" "" #xFEAF)
				     "allocunit_" ("AllocUnit_" "" #xF701)
				     "allocvec_" ("AllocVec_" "(byteSize,requirements)" #xFEE5)
				     "allocatetagitems_" ("AllocateTagItems_" "" #xEE87)
				     "allocate_" ("Allocate_" "(freeList,byteSize)" #xFE95)
				     "alohaworkbench_" ("AlohaWorkbench_" "" #xFFBF)
				     "amiga2date_" ("Amiga2Date_" "(seconds,result)" #xEE8E)
				     "amigaguidesignal_" ("AmigaGuideSignal_" "" #xFC06)
				     "andrectregion_" ("AndRectRegion_" "(region,rectangle)" #xFF50)
				     "andregionregion_" ("AndRegionRegion_" "(srcRegion,destRegion)" #xFF64)
				     "animate_" ("Animate_" "(anKey,rp)" #xFF17)
				     "applytagchanges_" ("ApplyTagChanges_" "(list,changeList)" #xEE99)
				     "areadraw_" ("AreaDraw_" "" #xFF27)
				     "areaellipse_" ("AreaEllipse_" "" #xFF1B)
				     "areaend_" ("AreaEnd_" "" #xFF28)
				     "areamove_" ("AreaMove_" "" #xFF26)
				     "askfont_" ("AskFont_" "(rp,textAttr)" #xFF4B)
				     "askkeymapdefault_" ("AskKeyMapDefault_" "" #xF482)
				     "asksoftstyle_" ("AskSoftStyle_" "" #xFF0A)
				     "aslrequest_" ("AslRequest_" "(requester,tagList)" #xFB86)
				     "assignadd_" ("AssignAdd_" "(name,lock)" #xFE62)
				     "assignlate_" ("AssignLate_" "(name,path)" #xFE60)
				     "assignlock_" ("AssignLock_" "(name,lock)" #xFE5F)
				     "assignpath_" ("AssignPath_" "(name,path)" #xFE61)
				     "attachcxobj_" ("AttachCxObj_" "(headObj,co)" #xF80A)
				     "attachpalextra_" ("AttachPalExtra_" "(cm,vp)" #xFD03)
				     "attemptlockdoslist_" ("AttemptLockDosList_" "" #xFE68)
				     "attemptlocklayerrom_" ("AttemptLockLayerRom_" "" #xFF67)
				     "attemptremnamedobject_" ("AttemptRemNamedObject_" "" #xEEA0)
				     "attemptsemaphoreshared_" ("AttemptSemaphoreShared_" "" #xFEEB)
				     "attemptsemaphore_" ("AttemptSemaphore_" "" #xFED3)
				     "autorequest_" ("AutoRequest_" "(window,body,posText,negText,pFlag,nFlag,width,height)" #xFFB6)
				     "availfonts_" ("AvailFonts_" "" #xFD82)
				     "availmem_" ("AvailMem_" "" #xFE9A)
				     "begincardaccess_" ("BeginCardAccess_" "" #xF984)
				     "beginrefresh_" ("BeginRefresh_" "" #xFFB7)
				     "beginupdate_" ("BeginUpdate_" "" #xF409)
				     "behindlayer_" ("BehindLayer_" "(dummy,layer)" #xF405)
				     "bestmodeida_" ("BestModeIDA_" "" #xFD23)
				     "bitmapscale_" ("BitMapScale_" "" #xFF6B)
				     "bltbitmaprastport_" ("BltBitMapRastPort_" "" #xFF61)
				     "bltbitmap_" ("BltBitMap_" "" #xFF01)
				     "bltclear_" ("BltClear_" "" #xFF2E)
				     "bltmaskbitmaprastport_" ("BltMaskBitMapRastPort_" "(srcBitMap,xSrc,ySrc,destRP,xDest,yDest,xSize,ySize,minterm,bltMask)" #xFF66)
				     "bltpattern_" ("BltPattern_" "" #xFF30)
				     "blttemplate_" ("BltTemplate_" "(source,xSrc,srcMod,destRP,xDest,yDest,xSize,ySize)" #xFF02)
				     "boardsprivate1_" ("BoardsPrivate1_" "" nil)
				     "buildeasyrequestargs_" ("BuildEasyRequestArgs_" "(window,easyStruct,idcmp,args)" #xFFDE)
				     "buildsysrequest_" ("BuildSysRequest_" "" #xFFB8)
				     "bumprevision_" ("BumpRevision_" "(newname,oldname)" #xF588)
				     "cbump_" ("CBump_" "" #xFF39)
				     "cmove_" ("CMove_" "" #xFF3A)
				     "cwait_" ("CWait_" "" #xFF3B)
				     "cachecleare_" ("CacheClearE_" "" #xFEDE)
				     "cacheclearu_" ("CacheClearU_" "" #xFEDD)
				     "cachecontrol_" ("CacheControl_" "(cacheBits,cacheMask)" #xFEDF)
				     "cachepostdma_" ("CachePostDMA_" "" #xFEF3)
				     "cachepredma_" ("CachePreDMA_" "" #xFEF2)
				     "calcivg_" ("CalcIVG_" "(v,vp)" #xFD02)
				     "callhookpkt_" ("CallHookPkt_" "" #xEE8D)
				     "cardaccessspeed_" ("CardAccessSpeed_" "(handle,nanoseconds)" #xF989)
				     "cardchangecount_" ("CardChangeCount_" "" #xF990)
				     "cardforcechange_" ("CardForceChange_" "" #xF98F)
				     "cardinterface_" ("CardInterface_" "" #xF991)
				     "cardmisccontrol_" ("CardMiscControl_" "(handle,control_bits)" #xF988)
				     "cardprogramvoltage_" ("CardProgramVoltage_" "(handle,voltage)" #xF98A)
				     "cardresetcard_" ("CardResetCard_" "" #xF98B)
				     "cardresetremove_" ("CardResetRemove_" "(handle,flag)" #xF987)
				     "cause_" ("Cause_" "" #xFE94)
				     "changeextspritea_" ("ChangeExtSpriteA_" "(vp,oldsprite,newsprite,tags)" #xFD1F)
				     "changemode_" ("ChangeMode_" "" #xFE45)
				     "changescreenbuffer_" ("ChangeScreenBuffer_" "(sc,sb)" #xFFF4)
				     "changesprite_" ("ChangeSprite_" "" #xFF42)
				     "changevpbitmap_" ("ChangeVPBitMap_" "" #xFD12)
				     "changewindowbox_" ("ChangeWindowBox_" "" #xFFCD)
				     "checkdate_" ("CheckDate_" "" #xEE90)
				     "checkio_" ("CheckIO_" "" #xFEC4)
				     "checksignal_" ("CheckSignal_" "" #xFE7D)
				     "childfree_" ("ChildFree_" "" #xFEEE)
				     "childorphan_" ("ChildOrphan_" "" #xFEEF)
				     "childstatus_" ("ChildStatus_" "" #xFEF0)
				     "childwait_" ("ChildWait_" "" #xFEF1)
				     "clearcxobjerror_" ("ClearCxObjError_" "" #xF808)
				     "cleardmrequest_" ("ClearDMRequest_" "" #xFF84)
				     "cleareol_" ("ClearEOL_" "" #xFF03)
				     "clearmenustrip_" ("ClearMenuStrip_" "" #xFF85)
				     "clearpointer_" ("ClearPointer_" "" #xFF86)
				     "clearrectregion_" ("ClearRectRegion_" "(region,rectangle)" #xFF53)
				     "clearregion_" ("ClearRegion_" "" #xFF54)
				     "clearrexxmsg_" ("ClearRexxMsg_" "(msgptr,count)" #xEF06)
				     "clearscreen_" ("ClearScreen_" "" #xFF04)
				     "cliinitnewcli_" ("CliInitNewcli_" "" #xFC92)
				     "cliinitrun_" ("CliInitRun_" "" #xFC93)
				     "cli_" ("Cli_" "" #xFE4B)
				     "clipblit_" ("ClipBlit_" "" #xFF58)
				     "clonetagitems_" ("CloneTagItems_" "" #xEE88)
				     "closeamigaguide_" ("CloseAmigaGuide_" "" #xFC05)
				     "closecatalog_" ("CloseCatalog_" "" #xF381)
				     "closeclipboard_" ("CloseClipboard_" "" #xF525)
				     "closedevice_" ("CloseDevice_" "" #xFEC1)
				     "closeengine_" ("CloseEngine_" "" #xFA02)
				     "closefont_" ("CloseFont_" "" #xFF09)
				     "closeiff_" ("CloseIFF_" "" #xF504)
				     "closelibrary_" ("CloseLibrary_" "" #xFEBB)
				     "closelocale_" ("CloseLocale_" "" #xF382)
				     "closemonitor_" ("CloseMonitor_" "" #xFF72)
				     "closescreen_" ("CloseScreen_" "" #xFF87)
				     "closewindow_" ("CloseWindow_" "" #xFF88)
				     "closeworkbench_" ("CloseWorkBench_" "" #xFF89)
				     "close_" ("Close_" "" #xFE02)
				     "coercemode_" ("CoerceMode_" "" #xFD11)
				     "coldreboot_" ("ColdReboot_" "" #xFEEC)
				     "collectionchunk_" ("CollectionChunk_" "" #xF512)
				     "collectionchunks_" ("CollectionChunks_" "" #xF513)
				     "comparedates_" ("CompareDates_" "(date1,date2)" #xFE74)
				     "configboard_" ("ConfigBoard_" "(board,configDev)" #xF686)
				     "configchain_" ("ConfigChain_" "" #xF687)
				     "convtolower_" ("ConvToLower_" "(locale,character)" #xF383)
				     "convtoupper_" ("ConvToUpper_" "(locale,character)" #xF384)
				     "converthsbtorgb_" ("ConvertHSBToRGB_" "" #xED81)
				     "convertrgbtohsb_" ("ConvertRGBToHSB_" "" #xED82)
				     "copymemquick_" ("CopyMemQuick_" "" #xFEDC)
				     "copymem_" ("CopyMem_" "" #xFEDB)
				     "copysbitmap_" ("CopySBitMap_" "" #xFF47)
				     "copytuple_" ("CopyTuple_" "(handle,buffer,tuplecode,size)" #xF98C)
				     "createargstring_" ("CreateArgstring_" "(string,length)" #xEF01)
				     "createbehindhooklayer_" ("CreateBehindHookLayer_" "" #xF41C)
				     "createbehindlayer_" ("CreateBehindLayer_" "(li,bm,x0,y0,x1,y1,flags,bm2)" #xF403)
				     "createcontext_" ("CreateContext_" "" #xF60F)
				     "createcxobj_" ("CreateCxObj_" "" #xF801)
				     "createdir_" ("CreateDir_" "" #xFE10)
				     "creategadgeta_" ("CreateGadgetA_" "(kind,gad,ng,taglist)" #xF601)
				     "createiorequest_" ("CreateIORequest_" "(port,size)" #xFEE0)
				     "createmenusa_" ("CreateMenusA_" "(newmenu,taglist)" #xF604)
				     "createmsgport_" ("CreateMsgPort_" "" #xFEE2)
				     "createnewproc_" ("CreateNewProc_" "" #xFE4C)
				     "createpool_" ("CreatePool_" "" #xFEE7)
				     "createproc_" ("CreateProc_" "(name,pri,segList,stackSize)" #xFE13)
				     "createrexxmsg_" ("CreateRexxMsg_" "" #xEF04)
				     "createupfronthooklayer_" ("CreateUpfrontHookLayer_" "" #xF41B)
				     "createupfrontlayer_" ("CreateUpfrontLayer_" "(li,bm,x0,y0,x1,y1,flags,bm2)" #xF402)
				     "currentchunk_" ("CurrentChunk_" "" #xF518)
				     "currentdir_" ("CurrentDir_" "" #xFE11)
				     "currenttime_" ("CurrentTime_" "(seconds,micros)" #xFF8A)
				     "cxbroker_" ("CxBroker_" "(nb,error)" #xF802)
				     "cxmsgdata_" ("CxMsgData_" "" #xF813)
				     "cxmsgid_" ("CxMsgID_" "" #xF814)
				     "cxmsgtype_" ("CxMsgType_" "" #xF812)
				     "cxobjerror_" ("CxObjError_" "" #xF807)
				     "cxobjtype_" ("CxObjType_" "" #xF806)
				     "date2amiga_" ("Date2Amiga_" "" #xEE8F)
				     "datestamp_" ("DateStamp_" "" #xFE1A)
				     "datetostr_" ("DateToStr_" "" #xFE75)
				     "deallocate_" ("Deallocate_" "" #xFE96)
				     "debug_" ("Debug_" "" #xFE89)
				     "delay_" ("Delay_" "" #xFE1B)
				     "deleteargstring_" ("DeleteArgstring_" "" #xEF02)
				     "deletecxobjall_" ("DeleteCxObjAll_" "" #xF805)
				     "deletecxobj_" ("DeleteCxObj_" "" #xF804)
				     "deletediskobject_" ("DeleteDiskObject_" "" #xF58C)
				     "deletefile_" ("DeleteFile_" "" #xFE08)
				     "deleteiorequest_" ("DeleteIORequest_" "" #xFEE1)
				     "deletelayer_" ("DeleteLayer_" "(dummy,layer)" #xF40B)
				     "deletemsgport_" ("DeleteMsgPort_" "" #xFEE3)
				     "deletepool_" ("DeletePool_" "" #xFEE8)
				     "deleterexxmsg_" ("DeleteRexxMsg_" "" #xEF05)
				     "deletevar_" ("DeleteVar_" "(name,flags)" #xFC90)
				     "deviceproc_" ("DeviceProc_" "" #xFE17)
				     "devicetuple_" ("DeviceTuple_" "(tuple_data,storage)" #xF98D)
				     "disable_" ("Disable_" "" #xFE8A)
				     "disownblitter_" ("DisownBlitter_" "" #xFF49)
				     "displayalert_" ("DisplayAlert_" "" #xFF8B)
				     "displaybeep_" ("DisplayBeep_" "" #xFF8C)
				     "disposecxmsg_" ("DisposeCxMsg_" "" #xF817)
				     "disposedtobject_" ("DisposeDTObject_" "" #xF785)
				     "disposefontcontents_" ("DisposeFontContents_" "" #xFD84)
				     "disposelayerinfo_" ("DisposeLayerInfo_" "" #xF415)
				     "disposeobject_" ("DisposeObject_" "" #xFFE6)
				     "disposeregion_" ("DisposeRegion_" "" #xFF55)
				     "divertcxmsg_" ("DivertCxMsg_" "" #xF815)
				     "doasynclayout_" ("DoAsyncLayout_" "(o,gpl)" #xF78A)
				     "docollision_" ("DoCollision_" "" #xFF0E)
				     "dodtmethoda_" ("DoDTMethodA_" "(o,win,req,msg)" #xF78B)
				     "dogadgetmethoda_" ("DoGadgetMethodA_" "(gad,win,req,message)" #xFFF9)
				     "dohookcliprects_" ("DoHookClipRects_" "" #xF420)
				     "doio_" ("DoIO_" "" #xFEC2)
				     "dopkt_" ("DoPkt_" "" #xFE22)
				     "doubleclick_" ("DoubleClick_" "(sSeconds,sMicros,cSeconds,cMicros)" #xFF8D)
				     "drawbevelboxa_" ("DrawBevelBoxA_" "(rport,left,top,width,height,taglist)" #xF610)
				     "drawborder_" ("DrawBorder_" "(rp,border,leftOffset,topOffset)" #xFF8E)
				     "drawellipse_" ("DrawEllipse_" "" #xFF1A)
				     "drawglist_" ("DrawGList_" "(rp,vp)" #xFF0F)
				     "drawimagestate_" ("DrawImageState_" "(rp,image,leftOffset,topOffset,state,drawInfo)" #xFFE2)
				     "drawimage_" ("DrawImage_" "(rp,image,leftOffset,topOffset)" #xFF8F)
				     "draw_" ("Draw_" "" #xFF25)
				     "duplockfromfh_" ("DupLockFromFH_" "" #xFE38)
				     "duplock_" ("DupLock_" "" #xFE0C)
				     "easyrequestargs_" ("EasyRequestArgs_" "(window,easyStruct,idcmpPtr,args)" #xFFDD)
				     "enable_" ("Enable_" "" #xFE8B)
				     "endcardaccess_" ("EndCardAccess_" "" #xF985)
				     "endnotify_" ("EndNotify_" "" #xFC8D)
				     "endrefresh_" ("EndRefresh_" "(window,complete)" #xFFB9)
				     "endrequest_" ("EndRequest_" "(requester,window)" #xFF90)
				     "endupdate_" ("EndUpdate_" "(layer,flag)" #xF40A)
				     "enqueuecxobj_" ("EnqueueCxObj_" "(headObj,co)" #xF80B)
				     "enqueue_" ("Enqueue_" "(list,node)" #xFEA3)
				     "entryhandler_" ("EntryHandler_" "(iff,type,id,position,handler,object)" #xF50C)
				     "eraseimage_" ("EraseImage_" "(rp,image,leftOffset,topOffset)" #xFFE4)
				     "eraserect_" ("EraseRect_" "" #xFF7E)
				     "errorreport_" ("ErrorReport_" "(code,type,arg1,device)" #xFE4A)
				     "exallend_" ("ExAllEnd_" "" #xFC9A)
				     "exall_" ("ExAll_" "" #xFE42)
				     "exnext_" ("ExNext_" "(lock,fileInfoBlock)" #xFE0E)
				     "examinefh_" ("ExamineFH_" "(fh,fib)" #xFE3B)
				     "examine_" ("Examine_" "(lock,fileInfoBlock)" #xFE0D)
				     "execute_" ("Execute_" "" #xFE1F)
				     "exithandler_" ("ExitHandler_" "(iff,type,id,position,handler,object)" #xF50D)
				     "exit_" ("Exit_" "" #xFE14)
				     "extendfont_" ("ExtendFont_" "(font,fontTags)" #xFF7F)
				     "fgetc_" ("FGetC_" "" #xFE2D)
				     "fgets_" ("FGets_" "" #xFE32)
				     "fputc_" ("FPutC_" "(fh,ch)" #xFE2E)
				     "fputs_" ("FPuts_" "(fh,str)" #xFE33)
				     "fread_" ("FRead_" "(fh,block,blocklen,number)" #xFE30)
				     "fwrite_" ("FWrite_" "(fh,block,blocklen,number)" #xFE31)
				     "fattenlayerinfo_" ("FattenLayerInfo_" "" #xF416)
				     "fault_" ("Fault_" "(code,header,buffer,len)" #xFE48)
				     "filepart_" ("FilePart_" "" #xFC89)
				     "fillrexxmsg_" ("FillRexxMsg_" "" #xEF07)
				     "filtertagchanges_" ("FilterTagChanges_" "" #xEE85)
				     "filtertagitems_" ("FilterTagItems_" "" #xEE8C)
				     "findarg_" ("FindArg_" "(keyword,template)" #xFE7F)
				     "findcliproc_" ("FindCliProc_" "" #xFE54)
				     "findcollection_" ("FindCollection_" "" #xF516)
				     "findcolor_" ("FindColor_" "" #xFD1D)
				     "findconfigdev_" ("FindConfigDev_" "" #xF688)
				     "finddisplayinfo_" ("FindDisplayInfo_" "" #xFF73)
				     "finddosentry_" ("FindDosEntry_" "" #xFE6B)
				     "findlocalitem_" ("FindLocalItem_" "(iff,type,id,ident)" #xF51E)
				     "findname_" ("FindName_" "(list,name)" #xFEA4)
				     "findnamedobject_" ("FindNamedObject_" "" #xEEA1)
				     "findport_" ("FindPort_" "" #xFEB7)
				     "findpropcontext_" ("FindPropContext_" "" #xF517)
				     "findprop_" ("FindProp_" "" #xF515)
				     "findresident_" ("FindResident_" "" #xFE86)
				     "findsegment_" ("FindSegment_" "" #xFE7B)
				     "findsemaphore_" ("FindSemaphore_" "" #xFED6)
				     "findtagitem_" ("FindTagItem_" "(tagVal,tagList)" #xEE81)
				     "findtask_" ("FindTask_" "" #xFEA7)
				     "findtooltype_" ("FindToolType_" "(toolTypeArray,typeName)" #xF586)
				     "findvar_" ("FindVar_" "(name,type)" #xFC91)
				     "flood_" ("Flood_" "(rp,mode,x,y)" #xFF33)
				     "flush_" ("Flush_" "" #xFE36)
				     "fontextent_" ("FontExtent_" "(font,fontExtent)" #xFF76)
				     "forbid_" ("Forbid_" "" #xFE8C)
				     "formatdate_" ("FormatDate_" "(locale,template,date,putCharFunc)" #xF385)
				     "formatstring_" ("FormatString_" "(locale,string,dataStream,putCharFunc)" #xF386)
				     "format_" ("Format_" "" #xFE70)
				     "freeargs_" ("FreeArgs_" "" #xFC88)
				     "freeaslrequest_" ("FreeAslRequest_" "" #xFB85)
				     "freebitmap_" ("FreeBitMap_" "" #xFD0F)
				     "freeboardinfo_" ("FreeBoardInfo_" "" nil)
				     "freeboardmem_" ("FreeBoardMem_" "(startSlot,slotSpec)" #xF689)
				     "freeclass_" ("FreeClass_" "" #xFFF1)
				     "freecolormap_" ("FreeColorMap_" "" #xFF5C)
				     "freeconfigdev_" ("FreeConfigDev_" "" #xF68A)
				     "freecoplist_" ("FreeCopList_" "" #xFF57)
				     "freecprlist_" ("FreeCprList_" "" #xFF5A)
				     "freedbufinfo_" ("FreeDBufInfo_" "" #xFD17)
				     "freedeviceproc_" ("FreeDeviceProc_" "" #xFE65)
				     "freediskobject_" ("FreeDiskObject_" "" #xF585)
				     "freedosentry_" ("FreeDosEntry_" "" #xFE6E)
				     "freedosobject_" ("FreeDosObject_" "(type,ptr)" #xFE21)
				     "freeentry_" ("FreeEntry_" "" #xFE9C)
				     "freeexpansionmem_" ("FreeExpansionMem_" "(startSlot,numSlots)" #xF68B)
				     "freefilerequest_" ("FreeFileRequest_" "" #xFB82)
				     "freefreelist_" ("FreeFreeList_" "" #xF581)
				     "freegbuffers_" ("FreeGBuffers_" "" #xFF60)
				     "freegadgets_" ("FreeGadgets_" "" #xF602)
				     "freeiff_" ("FreeIFF_" "" #xF505)
				     "freelocalitem_" ("FreeLocalItem_" "" #xF51D)
				     "freemem_" ("FreeMem_" "(memoryBlock,byteSize)" #xFE99)
				     "freemenus_" ("FreeMenus_" "" #xF605)
				     "freemiscresource_" ("FreeMiscResource_" "" #xF002)
				     "freenamedobject_" ("FreeNamedObject_" "" #xEEA2)
				     "freepooled_" ("FreePooled_" "" #xFEEA)
				     "freepotbits_" ("FreePotBits_" "" #xEF82)
				     "freeraster_" ("FreeRaster_" "" #xFF4F)
				     "freeremember_" ("FreeRemember_" "(rememberKey,reallyForget)" #xFFC0)
				     "freescreenbuffer_" ("FreeScreenBuffer_" "(sc,sb)" #xFFF3)
				     "freescreendrawinfo_" ("FreeScreenDrawInfo_" "(screen,drawInfo)" #xFFEE)
				     "freesignal_" ("FreeSignal_" "" #xFEAE)
				     "freespritedata_" ("FreeSpriteData_" "" #xFD20)
				     "freesprite_" ("FreeSprite_" "" #xFF41)
				     "freesysrequest_" ("FreeSysRequest_" "" #xFFBA)
				     "freetagitems_" ("FreeTagItems_" "" #xEE89)
				     "freetrap_" ("FreeTrap_" "" #xFEB0)
				     "freeunit_" ("FreeUnit_" "" #xF702)
				     "freevportcoplists_" ("FreeVPortCopLists_" "" #xFF56)
				     "freevec_" ("FreeVec_" "" #xFEE6)
				     "freevisualinfo_" ("FreeVisualInfo_" "" #xF612)
				     "gt_beginrefresh_" ("GT_BeginRefresh_" "" #xF60B)
				     "gt_endrefresh_" ("GT_EndRefresh_" "(win,complete)" #xF60C)
				     "gt_filterimsg_" ("GT_FilterIMsg_" "" #xF60D)
				     "gt_getgadgetattrsa_" ("GT_GetGadgetAttrsA_" "(gad,win,req,taglist)" #xF613)
				     "gt_getimsg_" ("GT_GetIMsg_" "" #xF608)
				     "gt_postfilterimsg_" ("GT_PostFilterIMsg_" "" #xF60E)
				     "gt_refreshwindow_" ("GT_RefreshWindow_" "(win,req)" #xF60A)
				     "gt_replyimsg_" ("GT_ReplyIMsg_" "" #xF609)
				     "gt_setgadgetattrsa_" ("GT_SetGadgetAttrsA_" "(gad,win,req,taglist)" #xF603)
				     "gadgetmouse_" ("GadgetMouse_" "" #xFFDB)
				     "getapen_" ("GetAPen_" "" #xFD06)
				     "getamigaguideattr_" ("GetAmigaGuideAttr_" "" #xFC0D)
				     "getamigaguidemsg_" ("GetAmigaGuideMsg_" "" #xFC07)
				     "getamigaguidestring_" ("GetAmigaGuideString_" "" #xFC12)
				     "getargstr_" ("GetArgStr_" "" #xFE52)
				     "getattr_" ("GetAttr_" "" #xFFE8)
				     "getbpen_" ("GetBPen_" "" #xFD07)
				     "getbitmapattr_" ("GetBitMapAttr_" "(bm,attrnum)" #xFD15)
				     "getboardname_" ("GetBoardName_" "" nil)
				     "getcc_" ("GetCC_" "" #xFECB)
				     "getcardmap_" ("GetCardMap_" "" #xF983)
				     "getcatalogstr_" ("GetCatalogStr_" "" #xF387)
				     "getcolormap_" ("GetColorMap_" "" #xFF5B)
				     "getconsoletask_" ("GetConsoleTask_" "" #xFE4E)
				     "getcurrentbinding_" ("GetCurrentBinding_" "(currentBinding,bindingSize)" #xF693)
				     "getcurrentdirname_" ("GetCurrentDirName_" "(buf,len)" #xFE57)
				     "getdtattrsa_" ("GetDTAttrsA_" "(o,attrs)" #xF787)
				     "getdtmethods_" ("GetDTMethods_" "" #xF78D)
				     "getdtstring_" ("GetDTString_" "" #xF790)
				     "getdttriggermethods_" ("GetDTTriggerMethods_" "" #xF78E)
				     "getdefdiskobject_" ("GetDefDiskObject_" "" #xF589)
				     "getdefprefs_" ("GetDefPrefs_" "(preferences,size)" #xFF91)
				     "getdefaultpubscreen_" ("GetDefaultPubScreen_" "" #xFFDC)
				     "getdeviceproc_" ("GetDeviceProc_" "(name,dp)" #xFE64)
				     "getdiskobjectnew_" ("GetDiskObjectNew_" "" #xF58B)
				     "getdiskobject_" ("GetDiskObject_" "" #xF583)
				     "getdisplayinfodata_" ("GetDisplayInfoData_" "" #xFF75)
				     "getdrmd_" ("GetDrMd_" "" #xFD08)
				     "getextspritea_" ("GetExtSpriteA_" "(ss,tags)" #xFD10)
				     "getfilesystask_" ("GetFileSysTask_" "" #xFE50)
				     "getgbuffers_" ("GetGBuffers_" "" #xFF18)
				     "geticon_" ("GetIcon_" "" #xF581)
				     "getlocalestr_" ("GetLocaleStr_" "(locale,stringNum)" #xF388)
				     "getmsg_" ("GetMsg_" "" #xFEB4)
				     "getoutlinepen_" ("GetOutlinePen_" "" #xFD09)
				     "getprefs_" ("GetPrefs_" "(preferences,size)" #xFF92)
				     "getprogramdir_" ("GetProgramDir_" "" #xFE5D)
				     "getprogramname_" ("GetProgramName_" "(buf,len)" #xFE59)
				     "getprompt_" ("GetPrompt_" "(buf,len)" #xFE5B)
				     "getrgb32_" ("GetRGB32_" "(cm,firstcolor,ncolors,table)" #xFD0D)
				     "getrgb4_" ("GetRGB4_" "(colorMap,entry)" #xFF5D)
				     "getrpattrsa_" ("GetRPAttrsA_" "(rp,tags)" #xFD22)
				     "getscreendata_" ("GetScreenData_" "(buffer,size,type,screen)" #xFFC3)
				     "getscreendrawinfo_" ("GetScreenDrawInfo_" "" #xFFED)
				     "getsprite_" ("GetSprite_" "(sprite,num)" #xFF40)
				     "gettagdata_" ("GetTagData_" "" #xEE82)
				     "getuniqueid_" ("GetUniqueID_" "" #xEEA6)
				     "getunitid_" ("GetUnitID_" "" #xF705)
				     "getunit_" ("GetUnit_" "" #xF703)
				     "getvpmodeid_" ("GetVPModeID_" "" #xFF7B)
				     "getvar_" ("GetVar_" "(name,buffer,size,flags)" #xFC8F)
				     "getvisualinfoa_" ("GetVisualInfoA_" "(screen,taglist)" #xF611)
				     "gfxassociate_" ("GfxAssociate_" "(associateNode,gfxNodePtr)" #xFF6A)
				     "gfxfree_" ("GfxFree_" "" #xFF69)
				     "gfxinternal1_" ("GfxInternal1_" "" #xFF67)
				     "gfxinternal2_" ("GfxInternal2_" "" #xFF68)
				     "gfxinternal3_" ("GfxInternal3_" "" #xFD07)
				     "gfxlookup_" ("GfxLookUp_" "" #xFF6F)
				     "gfxnew_" ("GfxNew_" "" #xFF68)
				     "gfxspare1_" ("GfxSpare1_" "" #xFD11)
				     "gfxspare2_" ("GfxSpare2_" "" #xFD22)
				     "giveunit_" ("GiveUnit_" "" #xF704)
				     "goodid_" ("GoodID_" "" #xF526)
				     "goodtype_" ("GoodType_" "" #xF527)
				     "helpcontrol_" ("HelpControl_" "(win,flags)" #xFFFC)
				     "idtostr_" ("IDtoStr_" "(id,buf)" #xF528)
				     "ieeedpabs_" ("IEEEDPAbs_" "(parm)" #xF285)
				     "ieeedpacos_" ("IEEEDPAcos_" "(parm)" #xF210)
				     "ieeedpadd_" ("IEEEDPAdd_" "(leftParm,rightParm)" #xF287)
				     "ieeedpasin_" ("IEEEDPAsin_" "(parm)" #xF20F)
				     "ieeedpatan_" ("IEEEDPAtan_" "(parm)" #xF201)
				     "ieeedpceil_" ("IEEEDPCeil_" "(parm)" #xF28C)
				     "ieeedpcmp_" ("IEEEDPCmp_" "(leftParm,rightParm)" #xF283)
				     "ieeedpcos_" ("IEEEDPCos_" "(parm)" #xF203)
				     "ieeedpcosh_" ("IEEEDPCosh_" "(parm)" #xF207)
				     "ieeedpdiv_" ("IEEEDPDiv_" "(dividend,divisor)" #xF28A)
				     "ieeedpexp_" ("IEEEDPExp_" "(parm)" #xF209)
				     "ieeedpfieee_" ("IEEEDPFieee_" "" #xF20E)
				     "ieeedpfix_" ("IEEEDPFix_" "(parm)" #xF281)
				     "ieeedpfloor_" ("IEEEDPFloor_" "(parm)" #xF28B)
				     "ieeedpflt_" ("IEEEDPFlt_" "" #xF282)
				     "ieeedplog10_" ("IEEEDPLog10_" "(parm)" #xF211)
				     "ieeedplog_" ("IEEEDPLog_" "(parm)" #xF20A)
				     "ieeedpmul_" ("IEEEDPMul_" "(factor1,factor2)" #xF289)
				     "ieeedpneg_" ("IEEEDPNeg_" "(parm)" #xF286)
				     "ieeedppow_" ("IEEEDPPow_" "(exp,arg)" #xF20B)
				     "ieeedpsin_" ("IEEEDPSin_" "(parm)" #xF202)
				     "ieeedpsincos_" ("IEEEDPSincos_" "" #xF205)
				     "ieeedpsinh_" ("IEEEDPSinh_" "(parm)" #xF206)
				     "ieeedpsqrt_" ("IEEEDPSqrt_" "(parm)" #xF20C)
				     "ieeedpsub_" ("IEEEDPSub_" "(leftParm,rightParm)" #xF288)
				     "ieeedptan_" ("IEEEDPTan_" "(parm)" #xF204)
				     "ieeedptanh_" ("IEEEDPTanh_" "(parm)" #xF208)
				     "ieeedptieee_" ("IEEEDPTieee_" "(parm)" #xF20D)
				     "ieeedptst_" ("IEEEDPTst_" "(parm)" #xF284)
				     "ieeespabs_" ("IEEESPAbs_" "" #xF185)
				     "ieeespacos_" ("IEEESPAcos_" "" #xF110)
				     "ieeespadd_" ("IEEESPAdd_" "(leftParm,rightParm)" #xF187)
				     "ieeespasin_" ("IEEESPAsin_" "" #xF10F)
				     "ieeespatan_" ("IEEESPAtan_" "" #xF101)
				     "ieeespceil_" ("IEEESPCeil_" "" #xF18C)
				     "ieeespcmp_" ("IEEESPCmp_" "(leftParm,rightParm)" #xF183)
				     "ieeespcos_" ("IEEESPCos_" "" #xF103)
				     "ieeespcosh_" ("IEEESPCosh_" "" #xF107)
				     "ieeespdiv_" ("IEEESPDiv_" "(dividend,divisor)" #xF18A)
				     "ieeespexp_" ("IEEESPExp_" "" #xF109)
				     "ieeespfieee_" ("IEEESPFieee_" "" #xF10E)
				     "ieeespfix_" ("IEEESPFix_" "" #xF181)
				     "ieeespfloor_" ("IEEESPFloor_" "" #xF18B)
				     "ieeespflt_" ("IEEESPFlt_" "" #xF182)
				     "ieeesplog10_" ("IEEESPLog10_" "" #xF111)
				     "ieeesplog_" ("IEEESPLog_" "" #xF10A)
				     "ieeespmul_" ("IEEESPMul_" "(leftParm,rightParm)" #xF189)
				     "ieeespneg_" ("IEEESPNeg_" "" #xF186)
				     "ieeesppow_" ("IEEESPPow_" "(exp,arg)" #xF10B)
				     "ieeespsin_" ("IEEESPSin_" "" #xF102)
				     "ieeespsincos_" ("IEEESPSincos_" "(cosptr,parm)" #xF105)
				     "ieeespsinh_" ("IEEESPSinh_" "" #xF106)
				     "ieeespsqrt_" ("IEEESPSqrt_" "" #xF10C)
				     "ieeespsub_" ("IEEESPSub_" "(leftParm,rightParm)" #xF188)
				     "ieeesptan_" ("IEEESPTan_" "" #xF104)
				     "ieeesptanh_" ("IEEESPTanh_" "" #xF108)
				     "ieeesptieee_" ("IEEESPTieee_" "" #xF10D)
				     "ieeesptst_" ("IEEESPTst_" "" #xF184)
				     "ifamigaxip_" ("IfAmigaXIP_" "" #xF98E)
				     "info_" ("Info_" "(lock,parameterBlock)" #xFE0F)
				     "inhibit_" ("Inhibit_" "(name,onoff)" #xFE72)
				     "initarea_" ("InitArea_" "" #xFF2B)
				     "initbitmap_" ("InitBitMap_" "(bitMap,depth,width,height)" #xFF3D)
				     "initcode_" ("InitCode_" "(startClass,version)" #xFE82)
				     "initgmasks_" ("InitGMasks_" "" #xFF19)
				     "initgels_" ("InitGels_" "" #xFF10)
				     "initiff_" ("InitIFF_" "" #xF521)
				     "initiffasclip_" ("InitIFFasClip_" "" #xF523)
				     "initiffasdos_" ("InitIFFasDOS_" "" #xF522)
				     "initlayers_" ("InitLayers_" "" #xF401)
				     "initmasks_" ("InitMasks_" "" #xFF11)
				     "initrastport_" ("InitRastPort_" "" #xFF1D)
				     "initrequester_" ("InitRequester_" "" #xFF93)
				     "initresident_" ("InitResident_" "(resident,segList)" #xFE87)
				     "initsemaphore_" ("InitSemaphore_" "" #xFED0)
				     "initstruct_" ("InitStruct_" "" #xFE83)
				     "inittmpras_" ("InitTmpRas_" "" #xFF4A)
				     "initvport_" ("InitVPort_" "" #xFF1E)
				     "initview_" ("InitView_" "" #xFF38)
				     "input_" ("Input_" "" #xFE05)
				     "insertcxobj_" ("InsertCxObj_" "" #xF80C)
				     "insert_" ("Insert_" "" #xFE9D)
				     "installclipregion_" ("InstallClipRegion_" "(layer,region)" #xF419)
				     "installlayerhook_" ("InstallLayerHook_" "(layer,hook)" #xF41D)
				     "installlayerinfohook_" ("InstallLayerInfoHook_" "(li,hook)" #xF41E)
				     "internalloadseg_" ("InternalLoadSeg_" "(fh,table,funcarray,stack)" #xFE77)
				     "internalunloadseg_" ("InternalUnLoadSeg_" "(seglist,freefunc)" #xFE78)
				     "intuitextlength_" ("IntuiTextLength_" "" #xFFB3)
				     "intuition_" ("Intuition_" "" #xFF82)
				     "invertkeymap_" ("InvertKeyMap_" "" #xF818)
				     "ioerr_" ("IoErr_" "" #xFE12)
				     "isalnum_" ("IsAlNum_" "(locale,character)" #xF389)
				     "isalpha_" ("IsAlpha_" "(locale,character)" #xF38A)
				     "iscntrl_" ("IsCntrl_" "(locale,character)" #xF38B)
				     "isdigit_" ("IsDigit_" "(locale,character)" #xF38C)
				     "isfilesystem_" ("IsFileSystem_" "" #xFE6F)
				     "isgraph_" ("IsGraph_" "(locale,character)" #xF38D)
				     "isinteractive_" ("IsInteractive_" "" #xFE1E)
				     "islower_" ("IsLower_" "(locale,character)" #xF38E)
				     "isprint_" ("IsPrint_" "(locale,character)" #xF38F)
				     "ispunct_" ("IsPunct_" "(locale,character)" #xF390)
				     "isrexxmsg_" ("IsRexxMsg_" "" #xEF08)
				     "isspace_" ("IsSpace_" "(locale,character)" #xF391)
				     "isupper_" ("IsUpper_" "(locale,character)" #xF392)
				     "isxdigit_" ("IsXDigit_" "(locale,character)" #xF393)
				     "itemaddress_" ("ItemAddress_" "(menuStrip,menuNumber)" #xFF94)
				     "layoutmenuitemsa_" ("LayoutMenuItemsA_" "" #xF606)
				     "layoutmenusa_" ("LayoutMenusA_" "" #xF607)
				     "lendmenus_" ("LendMenus_" "(fromwindow,towindow)" #xFFF8)
				     "lengthargstring_" ("LengthArgstring_" "" #xEF03)
				     "loadrgb32_" ("LoadRGB32_" "(vp,table)" #xFD0A)
				     "loadrgb4_" ("LoadRGB4_" "" #xFF1C)
				     "loadseg_" ("LoadSeg_" "" #xFE15)
				     "loadview_" ("LoadView_" "" #xFF21)
				     "localitemdata_" ("LocalItemData_" "" #xF51B)
				     "lockamigaguidebase_" ("LockAmigaGuideBase_" "" #xFC01)
				     "lockdoslist_" ("LockDosList_" "" #xFE66)
				     "lockibase_" ("LockIBase_" "" #xFFC1)
				     "locklayerinfo_" ("LockLayerInfo_" "" #xF410)
				     "locklayerrom_" ("LockLayerRom_" "" #xFF44)
				     "locklayer_" ("LockLayer_" "(dummy,layer)" #xF40C)
				     "locklayers_" ("LockLayers_" "" #xF40E)
				     "lockpubscreenlist_" ("LockPubScreenList_" "" #xFFD3)
				     "lockpubscreen_" ("LockPubScreen_" "" #xFFD1)
				     "lockrecord_" ("LockRecord_" "" #xFE27)
				     "lockrecords_" ("LockRecords_" "(recArray,timeout)" #xFE28)
				     "lockrexxbase_" ("LockRexxBase_" "" #xEF09)
				     "lock_" ("Lock_" "(name,type)" #xFE0A)
				     "makeclass_" ("MakeClass_" "" #xFFEB)
				     "makedosentry_" ("MakeDosEntry_" "(name,type)" #xFE6D)
				     "makedosnode_" ("MakeDosNode_" "" #xF694)
				     "makefunctions_" ("MakeFunctions_" "" #xFE85)
				     "makelibrary_" ("MakeLibrary_" "" #xFE84)
				     "makelink_" ("MakeLink_" "" #xFE44)
				     "makescreen_" ("MakeScreen_" "" #xFFBB)
				     "makevport_" ("MakeVPort_" "(view,vp)" #xFF20)
				     "mapansi_" ("MapANSI_" "" #xF484)
				     "maprawkey_" ("MapRawKey_" "(event,buffer,length,keyMap)" #xF483)
				     "maptags_" ("MapTags_" "" #xEE86)
				     "matchend_" ("MatchEnd_" "" #xFC85)
				     "matchfirst_" ("MatchFirst_" "(pat,anchor)" #xFC83)
				     "matchix_" ("MatchIX_" "(event,ix)" #xF81A)
				     "matchnext_" ("MatchNext_" "" #xFC84)
				     "matchpatternnocase_" ("MatchPatternNoCase_" "(pat,str)" #xFC98)
				     "matchpattern_" ("MatchPattern_" "(pat,str)" #xFC87)
				     "matchtoolvalue_" ("MatchToolValue_" "(typeString,value)" #xF587)
				     "maxcli_" ("MaxCli_" "" #xFE55)
				     "modenotavailable_" ("ModeNotAvailable_" "" #xFF7C)
				     "modifyidcmp_" ("ModifyIDCMP_" "(window,flags)" #xFF95)
				     "modifyprop_" ("ModifyProp_" "(gadget,window,requester,flags,horizPot,vertPot,horizBody,vertBody)" #xFF96)
				     "movelayerinfrontof_" ("MoveLayerInFrontOf_" "(layer_to_move,other_layer)" #xF418)
				     "movelayer_" ("MoveLayer_" "(dummy,layer,dx,dy)" #xF406)
				     "movescreen_" ("MoveScreen_" "" #xFF97)
				     "movesizelayer_" ("MoveSizeLayer_" "" #xF41A)
				     "movesprite_" ("MoveSprite_" "(vp,sprite,x,y)" #xFF43)
				     "movewindowinfrontof_" ("MoveWindowInFrontOf_" "(window,behindWindow)" #xFFCC)
				     "movewindow_" ("MoveWindow_" "" #xFF98)
				     "move_" ("Move_" "" #xFF24)
				     "mrgcop_" ("MrgCop_" "" #xFF1F)
				     "namefromfh_" ("NameFromFH_" "" #xFE3E)
				     "namefromlock_" ("NameFromLock_" "" #xFE3D)
				     "namedobjectname_" ("NamedObjectName_" "" #xEEA3)
				     "newdtobjecta_" ("NewDTObjectA_" "(name,attrs)" #xF784)
				     "newfontcontents_" ("NewFontContents_" "(fontsLock,fontName)" #xFD83)
				     "newlayerinfo_" ("NewLayerInfo_" "" #xF414)
				     "newloadseg_" ("NewLoadSeg_" "(file,tags)" #xFE79)
				     "newmodifyprop_" ("NewModifyProp_" "" #xFFCA)
				     "newobjecta_" ("NewObjectA_" "" #xFFE5)
				     "newregion_" ("NewRegion_" "" #xFF52)
				     "newscaleddiskfont_" ("NewScaledDiskFont_" "(sourceFont,destTextAttr)" #xFD85)
				     "nextboardinfo_" ("NextBoardInfo_" "" nil)
				     "nextdisplayinfo_" ("NextDisplayInfo_" "" #xFF74)
				     "nextdosentry_" ("NextDosEntry_" "(dlist,flags)" #xFE6C)
				     "nextobject_" ("NextObject_" "" #xFFEA)
				     "nextpubscreen_" ("NextPubScreen_" "(screen,namebuf)" #xFFD5)
				     "nexttagitem_" ("NextTagItem_" "" #xEE84)
				     "obtainbattsemaphore_" ("ObtainBattSemaphore_" "" #xFA81)
				     "obtainbestpena_" ("ObtainBestPenA_" "" #xFD04)
				     "obtainconfigbinding_" ("ObtainConfigBinding_" "" #xF690)
				     "obtaindatatypea_" ("ObtainDataTypeA_" "" #xF782)
				     "obtaingirport_" ("ObtainGIRPort_" "" #xFFD9)
				     "obtaininfoa_" ("ObtainInfoA_" "(glyphEngine,tagList)" #xFA04)
				     "obtainpen_" ("ObtainPen_" "(cm,n,r,g,b,f)" #xFD14)
				     "obtainsemaphorelist_" ("ObtainSemaphoreList_" "" #xFED4)
				     "obtainsemaphoreshared_" ("ObtainSemaphoreShared_" "" #xFEE4)
				     "obtainsemaphore_" ("ObtainSemaphore_" "" #xFED1)
				     "offgadget_" ("OffGadget_" "" #xFF99)
				     "offmenu_" ("OffMenu_" "(window,menuNumber)" #xFF9A)
				     "oldopenlibrary_" ("OldOpenLibrary_" "" #xFEBA)
				     "ongadget_" ("OnGadget_" "" #xFF9B)
				     "onmenu_" ("OnMenu_" "(window,menuNumber)" #xFF9C)
				     "openamigaguidea_" ("OpenAmigaGuideA_" "(nag,*)" #xFC03)
				     "openamigaguideasynca_" ("OpenAmigaGuideAsyncA_" "(nag,attrs)" #xFC04)
				     "opencataloga_" ("OpenCatalogA_" "" #xF394)
				     "openclipboard_" ("OpenClipboard_" "" #xF524)
				     "opendevice_" ("OpenDevice_" "(devName,unit,ioRequest,flags)" #xFEC0)
				     "opendiskfont_" ("OpenDiskFont_" "" #xFD81)
				     "openengine_" ("OpenEngine_" "" #xFA01)
				     "openfont_" ("OpenFont_" "" #xFF08)
				     "openfromlock_" ("OpenFromLock_" "" #xFE39)
				     "openiff_" ("OpenIFF_" "(iff,rwMode)" #xF502)
				     "openintuition_" ("OpenIntuition_" "" #xFF81)
				     "openlibrary_" ("OpenLibrary_" "(libName,version)" #xFECF)
				     "openlocale_" ("OpenLocale_" "" #xF395)
				     "openmonitor_" ("OpenMonitor_" "(monitorName,displayID)" #xFF71)
				     "openresource_" ("OpenResource_" "" #xFEC9)
				     "openscreentaglist_" ("OpenScreenTagList_" "(newScreen,tagList)" #xFFE1)
				     "openscreen_" ("OpenScreen_" "" #xFF9D)
				     "openwindowtaglist_" ("OpenWindowTagList_" "(newWindow,tagList)" #xFFE0)
				     "openwindow_" ("OpenWindow_" "" #xFF9E)
				     "openworkbench_" ("OpenWorkBench_" "" #xFF9F)
				     "open_" ("Open_" "(name,accessMode)" #xFE01)
				     "orrectregion_" ("OrRectRegion_" "(region,rectangle)" #xFF51)
				     "orregionregion_" ("OrRegionRegion_" "(srcRegion,destRegion)" #xFF62)
				     "output_" ("Output_" "" #xFE06)
				     "ownblitter_" ("OwnBlitter_" "" #xFF48)
				     "owncard_" ("OwnCard_" "" #xF981)
				     "packbooltags_" ("PackBoolTags_" "" #xEE83)
				     "packstructuretags_" ("PackStructureTags_" "" #xEE9C)
				     "parentchunk_" ("ParentChunk_" "" #xF519)
				     "parentdir_" ("ParentDir_" "" #xFE1D)
				     "parentoffh_" ("ParentOfFH_" "" #xFE3A)
				     "parsedate_" ("ParseDate_" "(locale,date,template,getCharFunc)" #xF396)
				     "parseiff_" ("ParseIFF_" "(iff,control)" #xF503)
				     "parseix_" ("ParseIX_" "(description,ix)" #xF811)
				     "parsepatternnocase_" ("ParsePatternNoCase_" "" #xFC97)
				     "parsepattern_" ("ParsePattern_" "" #xFC86)
				     "pathpart_" ("PathPart_" "" #xFC8A)
				     "permit_" ("Permit_" "" #xFE8D)
				     "pointinimage_" ("PointInImage_" "(point,image)" #xFFE3)
				     "polydraw_" ("PolyDraw_" "" #xFF34)
				     "popchunk_" ("PopChunk_" "" #xF50B)
				     "printdtobjecta_" ("PrintDTObjectA_" "(o,w,r,msg)" #xF78F)
				     "printfault_" ("PrintFault_" "(code,header)" #xFE49)
				     "printitext_" ("PrintIText_" "(rp,iText,left,top)" #xFFA0)
				     "procure_" ("Procure_" "(sigSem,bidMsg)" #xFECD)
				     "propchunk_" ("PropChunk_" "" #xF50E)
				     "propchunks_" ("PropChunks_" "" #xF50F)
				     "pubscreenstatus_" ("PubScreenStatus_" "(screen,statusFlags)" #xFFD8)
				     "pushchunk_" ("PushChunk_" "(iff,type,id,size)" #xF50A)
				     "putdefdiskobject_" ("PutDefDiskObject_" "" #xF58A)
				     "putdiskobject_" ("PutDiskObject_" "(name,diskobj)" #xF584)
				     "puticon_" ("PutIcon_" "(name,icon)" #xF582)
				     "putmsg_" ("PutMsg_" "(port,message)" #xFEB3)
				     "putstr_" ("PutStr_" "" #xFC95)
				     "qbsblit_" ("QBSBlit_" "" #xFF2D)
				     "qblit_" ("QBlit_" "" #xFF2A)
				     "queryoverscan_" ("QueryOverscan_" "" #xFFCB)
				     "rldispatch_" ("RLDispatch_" "(rmsg,result)" #xF781)
				     "rawdofmt_" ("RawDoFmt_" "(formatString,dataStream,putChProc,putChData)" #xFECA)
				     "readargs_" ("ReadArgs_" "" #xFE7E)
				     "readbattclock_" ("ReadBattClock_" "" #xFB02)
				     "readbattmem_" ("ReadBattMem_" "" #xFA83)
				     "readcardstatus_" ("ReadCardStatus_" "" #xF986)
				     "readchunkbytes_" ("ReadChunkBytes_" "" #xF506)
				     "readchunkrecords_" ("ReadChunkRecords_" "(iff,buf,bytesPerRecord,numRecords)" #xF508)
				     "readexpansionbyte_" ("ReadExpansionByte_" "(board,offset)" #xF68C)
				     "readexpansionrom_" ("ReadExpansionRom_" "(board,configDev)" #xF68D)
				     "readitem_" ("ReadItem_" "" #xFC81)
				     "readlink_" ("ReadLink_" "" #xFE43)
				     "readpixelarray8_" ("ReadPixelArray8_" "" #xFF79)
				     "readpixelline8_" ("ReadPixelLine8_" "(rp,xstart,ystart,width,array,tempRP)" #xFF77)
				     "readpixel_" ("ReadPixel_" "" #xFF31)
				     "readunitid_" ("ReadUnitID_" "" #xF706)
				     "read_" ("Read_" "" #xFE03)
				     "rectfill_" ("RectFill_" "" #xFF2F)
				     "refreshdtobjecta_" ("RefreshDTObjectA_" "(o,win,req,attrs)" #xF789)
				     "refreshglist_" ("RefreshGList_" "(gadgets,window,requester,numGad)" #xFFC4)
				     "refreshgadgets_" ("RefreshGadgets_" "" #xFFA1)
				     "refreshtagitemclones_" ("RefreshTagItemClones_" "(clone,original)" #xEE8A)
				     "refreshwindowframe_" ("RefreshWindowFrame_" "" #xFFC8)
				     "relabel_" ("Relabel_" "(drive,newname)" #xFE71)
				     "releasebattsemaphore_" ("ReleaseBattSemaphore_" "" #xFA82)
				     "releasecard_" ("ReleaseCard_" "(handle,flags)" #xF982)
				     "releaseconfigbinding_" ("ReleaseConfigBinding_" "" #xF691)
				     "releasedatatype_" ("ReleaseDataType_" "" #xF783)
				     "releasegirport_" ("ReleaseGIRPort_" "" #xFFDA)
				     "releaseinfoa_" ("ReleaseInfoA_" "(glyphEngine,tagList)" #xFA05)
				     "releasenamedobject_" ("ReleaseNamedObject_" "" #xEEA4)
				     "releasepen_" ("ReleasePen_" "(cm,n)" #xFD13)
				     "releasesemaphorelist_" ("ReleaseSemaphoreList_" "" #xFED5)
				     "releasesemaphore_" ("ReleaseSemaphore_" "" #xFED2)
				     "remassignlist_" ("RemAssignList_" "(name,lock)" #xFE63)
				     "remconfigdev_" ("RemConfigDev_" "" #xF68E)
				     "remdevice_" ("RemDevice_" "" #xFEBF)
				     "remdosentry_" ("RemDosEntry_" "" #xFE69)
				     "remfont_" ("RemFont_" "" #xFF4D)
				     "remhead_" ("RemHead_" "" #xFEA1)
				     "remibob_" ("RemIBob_" "" #xFF12)
				     "remintserver_" ("RemIntServer_" "(intNumber,interrupt)" #xFE93)
				     "remlibrary_" ("RemLibrary_" "" #xFEB9)
				     "remmemhandler_" ("RemMemHandler_" "" #xFEF5)
				     "remnamedobject_" ("RemNamedObject_" "(object,message)" #xEEA5)
				     "remport_" ("RemPort_" "" #xFEB2)
				     "remresource_" ("RemResource_" "" #xFEC8)
				     "remsegment_" ("RemSegment_" "" #xFE7C)
				     "remsemaphore_" ("RemSemaphore_" "" #xFED8)
				     "remtail_" ("RemTail_" "" #xFEA2)
				     "remtask_" ("RemTask_" "" #xFEA6)
				     "remvsprite_" ("RemVSprite_" "" #xFF13)
				     "remakedisplay_" ("RemakeDisplay_" "" #xFFBC)
				     "removeamigaguidehosta_" ("RemoveAmigaGuideHostA_" "(hh,attrs)" #xFC11)
				     "removeappicon_" ("RemoveAppIcon_" "" #xEE04)
				     "removeappmenuitem_" ("RemoveAppMenuItem_" "" #xEE06)
				     "removeappwindow_" ("RemoveAppWindow_" "" #xEE02)
				     "removeclass_" ("RemoveClass_" "" #xFFF0)
				     "removecxobj_" ("RemoveCxObj_" "" #xF80D)
				     "removedtobject_" ("RemoveDTObject_" "(win,o)" #xF78C)
				     "removeglist_" ("RemoveGList_" "" #xFFC6)
				     "removegadget_" ("RemoveGadget_" "(window,gadget)" #xFFA2)
				     "remove_" ("Remove_" "" #xFEA0)
				     "rename_" ("Rename_" "(oldName,newName)" #xFE09)
				     "replyamigaguidemsg_" ("ReplyAmigaGuideMsg_" "" #xFC08)
				     "replymsg_" ("ReplyMsg_" "" #xFEB5)
				     "replypkt_" ("ReplyPkt_" "" #xFE25)
				     "reportmouse_" ("ReportMouse_" "(flag,window)" #xFFA3)
				     "requestfile_" ("RequestFile_" "" #xFB83)
				     "request_" ("Request_" "(requester,window)" #xFFA4)
				     "resetbattclock_" ("ResetBattClock_" "" #xFB01)
				     "resetmenustrip_" ("ResetMenuStrip_" "(window,menu)" #xFFEF)
				     "rethinkdisplay_" ("RethinkDisplay_" "" #xFFBD)
				     "routecxmsg_" ("RouteCxMsg_" "(cxm,co)" #xF816)
				     "runcommand_" ("RunCommand_" "(seg,stack,paramptr,paramlen)" #xFE4D)
				     "sdivmod32_" ("SDivMod32_" "(dividend,divisor)" #xEE93)
				     "smult32_" ("SMult32_" "(arg1,arg2)" #xEE91)
				     "smult64_" ("SMult64_" "(arg1,arg2)" #xEE9A)
				     "spabs_" ("SPAbs_" "" #xF305)
				     "spacos_" ("SPAcos_" "" #xF090)
				     "spadd_" ("SPAdd_" "(leftParm,rightParm)" #xF307)
				     "spasin_" ("SPAsin_" "" #xF08F)
				     "spatan_" ("SPAtan_" "" #xF081)
				     "spceil_" ("SPCeil_" "" #xF30C)
				     "spcmp_" ("SPCmp_" "(leftParm,rightParm)" #xF303)
				     "spcos_" ("SPCos_" "" #xF083)
				     "spcosh_" ("SPCosh_" "" #xF087)
				     "spdiv_" ("SPDiv_" "(leftParm,rightParm)" #xF30A)
				     "spexp_" ("SPExp_" "" #xF089)
				     "spfieee_" ("SPFieee_" "" #xF08E)
				     "spfix_" ("SPFix_" "" #xF301)
				     "spfloor_" ("SPFloor_" "" #xF30B)
				     "spflt_" ("SPFlt_" "" #xF302)
				     "splog10_" ("SPLog10_" "" #xF091)
				     "splog_" ("SPLog_" "" #xF08A)
				     "spmul_" ("SPMul_" "(leftParm,rightParm)" #xF309)
				     "spneg_" ("SPNeg_" "" #xF306)
				     "sppow_" ("SPPow_" "(power,arg)" #xF08B)
				     "spsin_" ("SPSin_" "" #xF082)
				     "spsincos_" ("SPSincos_" "(cosResult,parm)" #xF085)
				     "spsinh_" ("SPSinh_" "" #xF086)
				     "spsqrt_" ("SPSqrt_" "" #xF08C)
				     "spsub_" ("SPSub_" "(leftParm,rightParm)" #xF308)
				     "sptan_" ("SPTan_" "" #xF084)
				     "sptanh_" ("SPTanh_" "" #xF088)
				     "sptieee_" ("SPTieee_" "" #xF08D)
				     "sptst_" ("SPTst_" "" #xF304)
				     "samedevice_" ("SameDevice_" "(lock1,lock2)" #xFC99)
				     "samelock_" ("SameLock_" "(lock1,lock2)" #xFE40)
				     "scalerdiv_" ("ScalerDiv_" "" #xFF6C)
				     "screendepth_" ("ScreenDepth_" "" #xFFF5)
				     "screenposition_" ("ScreenPosition_" "(screen,flags,x1,y1,x2,y2)" #xFFF6)
				     "screentoback_" ("ScreenToBack_" "" #xFFA5)
				     "screentofront_" ("ScreenToFront_" "" #xFFA6)
				     "scrolllayer_" ("ScrollLayer_" "(dummy,layer,dx,dy)" #xF408)
				     "scrollrasterbf_" ("ScrollRasterBF_" "" #xFD1C)
				     "scrollraster_" ("ScrollRaster_" "" #xFF3E)
				     "scrollvport_" ("ScrollVPort_" "" #xFF5E)
				     "scrollwindowraster_" ("ScrollWindowRaster_" "" #xFFF7)
				     "seek_" ("Seek_" "" #xFE07)
				     "selectinput_" ("SelectInput_" "" #xFE2B)
				     "selectoutput_" ("SelectOutput_" "" #xFE2C)
				     "sendamigaguidecmda_" ("SendAmigaGuideCmdA_" "" #xFC0B)
				     "sendamigaguidecontexta_" ("SendAmigaGuideContextA_" "(cl,attrs)" #xFC0A)
				     "sendio_" ("SendIO_" "" #xFEC3)
				     "sendpkt_" ("SendPkt_" "" #xFE23)
				     "setabpendrmd_" ("SetABPenDrMd_" "(rp,apen,bpen,drawmode)" #xFD0C)
				     "setapen_" ("SetAPen_" "(rp,pen)" #xFF35)
				     "setamigaguideattrsa_" ("SetAmigaGuideAttrsA_" "(cl,attrs)" #xFC0C)
				     "setamigaguidecontexta_" ("SetAmigaGuideContextA_" "" #xFC09)
				     "setargstr_" ("SetArgStr_" "" #xFE53)
				     "setattrsa_" ("SetAttrsA_" "(object,tagList)" #xFFE7)
				     "setbpen_" ("SetBPen_" "(rp,pen)" #xFF36)
				     "setchiprev_" ("SetChipRev_" "" #xFD0B)
				     "setcollision_" ("SetCollision_" "" #xFF14)
				     "setcomment_" ("SetComment_" "(name,comment)" #xFE18)
				     "setconsoletask_" ("SetConsoleTask_" "" #xFE4F)
				     "setcurrentbinding_" ("SetCurrentBinding_" "(currentBinding,bindingSize)" #xF692)
				     "setcurrentdirname_" ("SetCurrentDirName_" "" #xFE56)
				     "setcxobjpri_" ("SetCxObjPri_" "(co,pri)" #xF809)
				     "setdmrequest_" ("SetDMRequest_" "(window,requester)" #xFFA7)
				     "setdtattrsa_" ("SetDTAttrsA_" "(o,win,req,attrs)" #xF786)
				     "setdefaultpubscreen_" ("SetDefaultPubScreen_" "" #xFFD6)
				     "setdrmd_" ("SetDrMd_" "(rp,drawMode)" #xFF37)
				     "setedithook_" ("SetEditHook_" "" #xFFCE)
				     "setexcept_" ("SetExcept_" "(newSignals,signalSet)" #xFEAA)
				     "setfiledate_" ("SetFileDate_" "(name,date)" #xFE3C)
				     "setfilesize_" ("SetFileSize_" "" #xFE46)
				     "setfilesystask_" ("SetFileSysTask_" "" #xFE51)
				     "setfilterix_" ("SetFilterIX_" "(filter,ix)" #xF810)
				     "setfilter_" ("SetFilter_" "(filter,text)" #xF80F)
				     "setfont_" ("SetFont_" "(rp,textFont)" #xFF07)
				     "setfunction_" ("SetFunction_" "" #xFEBC)
				     "setgadgetattrsa_" ("SetGadgetAttrsA_" "(gadget,window,requester,tagList)" #xFFE9)
				     "setinfoa_" ("SetInfoA_" "(glyphEngine,tagList)" #xFA03)
				     "setintvector_" ("SetIntVector_" "(intNumber,interrupt)" #xFE91)
				     "setioerr_" ("SetIoErr_" "" #xFE47)
				     "setkeymapdefault_" ("SetKeyMapDefault_" "" #xF481)
				     "setlocalitempurge_" ("SetLocalItemPurge_" "(localItem,purgeHook)" #xF51C)
				     "setmaxpen_" ("SetMaxPen_" "(rp,maxpen)" #xFD1A)
				     "setmenustrip_" ("SetMenuStrip_" "(window,menu)" #xFFA8)
				     "setmode_" ("SetMode_" "(fh,mode)" #xFE41)
				     "setmousequeue_" ("SetMouseQueue_" "(window,queueLength)" #xFFCF)
				     "setoutlinepen_" ("SetOutlinePen_" "(rp,pen)" #xFD18)
				     "setowner_" ("SetOwner_" "(name,owner_info)" #xFC9B)
				     "setpointer_" ("SetPointer_" "(window,pointer,height,width,xOffset,yOffset)" #xFFA9)
				     "setprefs_" ("SetPrefs_" "" #xFFB2)
				     "setprogramdir_" ("SetProgramDir_" "" #xFE5C)
				     "setprogramname_" ("SetProgramName_" "" #xFE58)
				     "setprompt_" ("SetPrompt_" "" #xFE5A)
				     "setprotection_" ("SetProtection_" "(name,protect)" #xFE19)
				     "setpubscreenmodes_" ("SetPubScreenModes_" "" #xFFD7)
				     "setrgb32cm_" ("SetRGB32CM_" "" #xFD1B)
				     "setrgb32_" ("SetRGB32_" "" #xFD05)
				     "setrgb4cm_" ("SetRGB4CM_" "" #xFF65)
				     "setrgb4_" ("SetRGB4_" "" #xFF2C)
				     "setrpattrsa_" ("SetRPAttrsA_" "(rp,tags)" #xFD21)
				     "setrast_" ("SetRast_" "(rp,pen)" #xFF23)
				     "setsr_" ("SetSR_" "(newSR,mask)" #xFE8E)
				     "setsignal_" ("SetSignal_" "(newSignals,signalSet)" #xFEA9)
				     "setsoftstyle_" ("SetSoftStyle_" "" #xFF0B)
				     "settaskpri_" ("SetTaskPri_" "(task,priority)" #xFEA8)
				     "settranslate_" ("SetTranslate_" "(translator,events)" #xF80E)
				     "setvbuf_" ("SetVBuf_" "(fh,buff,type,size)" #xFE37)
				     "setvar_" ("SetVar_" "(name,buffer,size,flags)" #xFC8E)
				     "setwindowpointera_" ("SetWindowPointerA_" "(win,taglist)" #xFFFA)
				     "setwindowtitles_" ("SetWindowTitles_" "" #xFFAA)
				     "setwritemask_" ("SetWriteMask_" "(rp,msk)" #xFD19)
				     "showtitle_" ("ShowTitle_" "(screen,showIt)" #xFFAB)
				     "signal_" ("Signal_" "(task,signalSet)" #xFEAC)
				     "sizelayer_" ("SizeLayer_" "(dummy,layer,dx,dy)" #xF407)
				     "sizewindow_" ("SizeWindow_" "" #xFFAC)
				     "sortglist_" ("SortGList_" "" #xFF15)
				     "sortlayercr_" ("SortLayerCR_" "" #xF41F)
				     "splitname_" ("SplitName_" "" #xFE3F)
				     "stackswap_" ("StackSwap_" "" #xFEED)
				     "startnotify_" ("StartNotify_" "" #xFC8C)
				     "stopchunk_" ("StopChunk_" "" #xF510)
				     "stopchunks_" ("StopChunks_" "" #xF511)
				     "stoponexit_" ("StopOnExit_" "" #xF514)
				     "storeitemincontext_" ("StoreItemInContext_" "" #xF520)
				     "storelocalitem_" ("StoreLocalItem_" "" #xF51F)
				     "strconvert_" ("StrConvert_" "" #xF397)
				     "strtodate_" ("StrToDate_" "" #xFE76)
				     "strtolong_" ("StrToLong_" "(string,value)" #xFC82)
				     "stricmp_" ("Stricmp_" "(string1,string2)" #xEE95)
				     "stripfont_" ("StripFont_" "" #xFD01)
				     "strncmp_" ("StrnCmp_" "" #xF398)
				     "strnicmp_" ("Strnicmp_" "" #xEE96)
				     "sumkickdata_" ("SumKickData_" "" #xFED9)
				     "sumlibrary_" ("SumLibrary_" "" #xFEBD)
				     "superstate_" ("SuperState_" "" #xFE8F)
				     "supervisor_" ("Supervisor_" "" #xFE81)
				     "swapbitsrastportcliprect_" ("SwapBitsRastPortClipRect_" "(rp,cr)" #xF411)
				     "syncsbitmap_" ("SyncSBitMap_" "" #xFF46)
				     "sysreqhandler_" ("SysReqHandler_" "" #xFFDF)
				     "systemtaglist_" ("SystemTagList_" "(command,tags)" #xFE5E)
				     "tedgetcurrentline_" ("TEDGetCurrentLine_" "()-90" #xEC0B)
				     "tedgetfilename_" ("TEDGetFilename_" "()-102" #xEC0D)
				     "tedgetfirstline_" ("TEDGetFirstLine_" "()-84" #xEC0A)
				     "tedgetjumptable_" ("TEDGetJumpTable_" "()-60" #xEC06)
				     "tedgetlabelcount_" ("TEDGetLabelCount_" "()-48" #xEC04)
				     "tedgetlabellist_" ("TEDGetLabelList_" "()-42" #xEC03)
				     "tedsetjumptable_" ("TEDSetJumpTable_" "()-54" #xEC05)
				     "taginarray_" ("TagInArray_" "(tagValue,tagArray)" #xEE8B)
				     "textextent_" ("TextExtent_" "(rp,string,count,textExtent)" #xFF6D)
				     "textfit_" ("TextFit_" "(rp,string,strLen,textExtent,constrainingExtent,strDirection,constrainingBitWidth,constrainingBitHeight)" #xFF6E)
				     "textlength_" ("TextLength_" "" #xFF05)
				     "text_" ("Text_" "" #xFF06)
				     "thinlayerinfo_" ("ThinLayerInfo_" "" #xF417)
				     "timeddisplayalert_" ("TimedDisplayAlert_" "(alertNumber,string,height,time)" #xFFFB)
				     "tolower_" ("ToLower_" "" #xEE98)
				     "toupper_" ("ToUpper_" "" #xEE97)
				     "typeofmem_" ("TypeOfMem_" "" #xFECC)
				     "ucopperlistinit_" ("UCopperListInit_" "(uCopList,n)" #xFF5F)
				     "udivmod32_" ("UDivMod32_" "(dividend,divisor)" #xEE94)
				     "umult32_" ("UMult32_" "(arg1,arg2)" #xEE92)
				     "umult64_" ("UMult64_" "(arg1,arg2)" #xEE9B)
				     "ungetc_" ("UnGetC_" "(fh,character)" #xFE2F)
				     "unloadseg_" ("UnLoadSeg_" "" #xFE16)
				     "unlockdoslist_" ("UnLockDosList_" "" #xFE67)
				     "unlockrecord_" ("UnLockRecord_" "" #xFE29)
				     "unlockrecords_" ("UnLockRecords_" "" #xFE2A)
				     "unlock_" ("UnLock_" "" #xFE0B)
				     "unlockamigaguidebase_" ("UnlockAmigaGuideBase_" "" #xFC02)
				     "unlockibase_" ("UnlockIBase_" "" #xFFC2)
				     "unlocklayerinfo_" ("UnlockLayerInfo_" "" #xF413)
				     "unlocklayerrom_" ("UnlockLayerRom_" "" #xFF45)
				     "unlocklayer_" ("UnlockLayer_" "" #xF40D)
				     "unlocklayers_" ("UnlockLayers_" "" #xF40F)
				     "unlockpubscreenlist_" ("UnlockPubScreenList_" "" #xFFD4)
				     "unlockpubscreen_" ("UnlockPubScreen_" "(name,screen)" #xFFD2)
				     "unlockrexxbase_" ("UnlockRexxBase_" "" #xEF0A)
				     "unpackstructuretags_" ("UnpackStructureTags_" "" #xEE9D)
				     "upfrontlayer_" ("UpfrontLayer_" "(dummy,layer)" #xF404)
				     "userstate_" ("UserState_" "" #xFE90)
				     "vbeampos_" ("VBeamPos_" "" #xFF3C)
				     "vfprintf_" ("VFPrintf_" "" #xFE35)
				     "vfwritef_" ("VFWritef_" "" #xFE34)
				     "vprintf_" ("VPrintf_" "(format,argarray)" #xFC96)
				     "vacate_" ("Vacate_" "(sigSem,bidMsg)" #xFECE)
				     "videocontrol_" ("VideoControl_" "(colorMap,tagarray)" #xFF70)
				     "viewaddress_" ("ViewAddress_" "" #xFFAD)
				     "viewportaddress_" ("ViewPortAddress_" "" #xFFAE)
				     "wbinfo_" ("WBInfo_" "" #xEE07)
				     "wbenchtoback_" ("WBenchToBack_" "" #xFFB4)
				     "wbenchtofront_" ("WBenchToFront_" "" #xFFB5)
				     "waitbovp_" ("WaitBOVP_" "" #xFF3F)
				     "waitblit_" ("WaitBlit_" "" #xFF22)
				     "waitforchar_" ("WaitForChar_" "(file,timeout)" #xFE1C)
				     "waitio_" ("WaitIO_" "" #xFEC5)
				     "waitpkt_" ("WaitPkt_" "" #xFE24)
				     "waitport_" ("WaitPort_" "" #xFEB6)
				     "waittof_" ("WaitTOF_" "" #xFF29)
				     "wait_" ("Wait_" "" #xFEAB)
				     "weightamatch_" ("WeighTAMatch_" "" #xFF7D)
				     "whichlayer_" ("WhichLayer_" "" #xF412)
				     "windowlimits_" ("WindowLimits_" "" #xFFB1)
				     "windowtoback_" ("WindowToBack_" "" #xFFAF)
				     "windowtofront_" ("WindowToFront_" "" #xFFB0)
				     "writebattclock_" ("WriteBattClock_" "" #xFB03)
				     "writebattmem_" ("WriteBattMem_" "" #xFA84)
				     "writechars_" ("WriteChars_" "(buf,buflen)" #xFC94)
				     "writechunkbytes_" ("WriteChunkBytes_" "" #xF507)
				     "writechunkrecords_" ("WriteChunkRecords_" "(iff,buf,bytesPerRecord,numRecords)" #xF509)
				     "writeexpansionbyte_" ("WriteExpansionByte_" "" #xF68F)
				     "writepixelarray8_" ("WritePixelArray8_" "" #xFF7A)
				     "writepixelline8_" ("WritePixelLine8_" "(rp,xstart,ystart,width,array,tempRP)" #xFF78)
				     "writepixel_" ("WritePixel_" "" #xFF32)
				     "writepotgo_" ("WritePotgo_" "(word,mask)" #xEF83)
				     "write_" ("Write_" "" #xFE04)
				     "xfa_allocframes_" ("XFA_AllocFrames_" "" nil)
				     "xfa_animframes_" ("XFA_AnimFrames_" "" nil)
				     "xfa_animmem_" ("XFA_AnimMem_" "" nil)
				     "xfa_cmapptr_" ("XFA_CMapPtr_" "" nil)
				     "xfa_changepackbitmap_" ("XFA_ChangePackBitMap_" "" nil)
				     "xfa_closepackstuff_" ("XFA_ClosePackStuff_" "" nil)
				     "xfa_closeplaystuff_" ("XFA_ClosePlayStuff_" "" nil)
				     "xfa_closeread_" ("XFA_CloseRead_" "" nil)
				     "xfa_freeanim_" ("XFA_FreeAnim_" "" nil)
				     "xfa_freeframe_" ("XFA_FreeFrame_" "" nil)
				     "xfa_freeframes_" ("XFA_FreeFrames_" "" nil)
				     "xfa_getpackmode_" ("XFA_GetPackMode_" "" nil)
				     "xfa_headptr_" ("XFA_HeadPtr_" "" nil)
				     "xfa_isskip_" ("XFA_IsSkip_" "" nil)
				     "xfa_liberr_" ("XFA_LibErr_" "" nil)
				     "xfa_loadanim_" ("XFA_LoadAnim_" "" nil)
				     "xfa_openpackstuff_" ("XFA_OpenPackStuff_" "" nil)
				     "xfa_openplaystuff_" ("XFA_OpenPlayStuff_" "" nil)
				     "xfa_openread_" ("XFA_OpenRead_" "" nil)
				     "xfa_packbitmap_" ("XFA_PackBitMap_" "" nil)
				     "xfa_packmem_l_" ("XFA_PackMem_L_" "" nil)
				     "xfa_packmem_w_" ("XFA_PackMem_W_" "" nil)
				     "xfa_play_" ("XFA_Play_" "" nil)
				     "xfa_posonframe_" ("XFA_PosOnFrame_" "" nil)
				     "xfa_putframe_" ("XFA_PutFrame_" "" nil)
				     "xfa_putseqframe_" ("XFA_PutSeqFrame_" "" nil)
				     "xfa_putskip_" ("XFA_PutSkip_" "" nil)
				     "xfa_readframe_" ("XFA_ReadFrame_" "" nil)
				     "xfa_saveanim_" ("XFA_SaveAnim_" "" nil)
				     "xfa_savescreen_" ("XFA_SaveScreen_" "" nil)
				     "xfa_setframesarray_" ("XFA_SetFramesArray_" "" nil)
				     "xfa_setpack_" ("XFA_SetPack_" "" nil)
				     "xfa_unpackbitmap_" ("XFA_UnPackBitMap_" "" nil)
				     "xfa_unpackbitmap_l_" ("XFA_UnPackBitMap_L_" "" nil)
				     "xfa_unpackbitmap_w_" ("XFA_UnPackBitMap_W_" "" nil)
				     "xfa_usecmap_" ("XFA_UseCMap_" "" nil)
				     "xfa_usehead_" ("XFA_UseHead_" "" nil)
				     "xprotocolhostmon_" ("XProtocolHostMon_" "(io,serbuff,actual,maxsize)" #x8105)
				     "xprotocolusermon_" ("XProtocolUserMon_" "(io,serbuff,actual,maxsize)" #x8106)
				     "xorrectregion_" ("XorRectRegion_" "(region,rectangle)" #xFF59)
				     "xorregionregion_" ("XorRegionRegion_" "(srcRegion,destRegion)" #xFF63)
				     "zipwindow_" ("ZipWindow_" "" #xFFD0))))

(defvar bb2-is-current-file-tokenized nil "Is the current file tokenized?")

(defvar bb2-ted-indent-p nil "Use TED style simple 2 space indenting")
(setq bb2-ted-indent-p t)

(defconst bb2-trigger-characters
  (mapcar 'string-to-char '(";" " " "(" "," "'" "{" "}"))
  "When the user types one of these characters, we trigger the keyword replacement logic.")

(defconst bb2-mode-syntax-table
  (let ((table (make-syntax-table)))
    ;; ' is a string delimiter
    (modify-syntax-entry ?' "\"" table)
    ;; " is a string delimiter
    (modify-syntax-entry ?\" "\"" table)
    ;; ; is a comment start
    (modify-syntax-entry ?\; "<" table)
    ;; /n is a comment end
    (modify-syntax-entry ?\n ">" table)
    ;;underscore is part of a word
    (modify-syntax-entry ?_ "w" table)
    ;; $ is part of a word
    (modify-syntax-entry ?\$ "w" table)
    ;; \ is punctuation, not an escape character
    ;; but \\ is escape in AmiBlitz? how to do it?
    (modify-syntax-entry ?\\ "." table)
    ;; operators are punctuation
    (modify-syntax-entry ?\= "." table)
    (modify-syntax-entry ?\+ "." table)
    (modify-syntax-entry ?\- "." table)
    (modify-syntax-entry ?\* "." table)
    (modify-syntax-entry ?\/ "." table)
    table))

(defun bb2-get-keywords-list (keyword-type)
  "Return a list of 'blitz or 'amiga keywords from the main table"
  (let ((kw '()))
    (maphash
     (lambda (k v)
       (let ((amigados-keyword-p (string-suffix-p "_" k)))
	 (if (or (and (eq keyword-type 'blitz)
		      (not amigados-keyword-p))
		 (and (eq keyword-type 'amiga)
		      amigados-keyword-p))
	     (push (car v) kw))))
     bb2-keywords)
    (nreverse kw)))

(defvar bb2-keywords-regexp nil "regular expression for bb2 keywords")
(setq bb2-keywords-regexp (regexp-opt (bb2-get-keywords-list 'blitz) 'words))

;; constants- ie. #something_like_this
(defvar bb2-const-regexp nil "regular expression for bb2 constants")
(setq bb2-const-regexp "#[a-zA-Z0-9_@]+")

;; types, ie .w .l .q string$ .newtype
(defvar bb2-types-regexp nil "regular expression for bb2 types")
(setq bb2-types-regexp "\\B\\$\\|\\(\\b\\|[[:blank:]]+\\)\\.[a-zA-Z_0-9]+")

(defvar bb2-amigados-keywords-regexp nil "regular expression for AmigaDOS keywords")
(setq bb2-amigados-keywords-regexp (regexp-opt (bb2-get-keywords-list 'amiga) 'words))

(defvar bb2-highlights nil)
(setq bb2-highlights
      `((,bb2-keywords-regexp . font-lock-keyword-face)
	(,bb2-amigados-keywords-regexp . font-lock-builtin-face)
	(,bb2-const-regexp . font-lock-constant-face)
	(,bb2-types-regexp . font-lock-type-face)))

(defun bb2-use-ted-indent ()
  "Set bb2-mode to use simple 2 space indent like TED on Amiga"
  (setq indent-tabs-mode nil)
  (setq tab-width 2)
  (set (make-local-variable 'tab-stop-list) '(0 2 4 6))
  (setq standard-indent 2)  
  ; replace indent-relative
  (setq indent-line-function 'insert-tab)  
  ;turn off electric-indent for this mode
  (electric-indent-local-mode -1))

(defun keywordize-keyhook ()
  (if (bb2-should-replace-keyword-p)
      (save-excursion (bb2-keywordize-symbol -1))))

(defun bb2-should-replace-keyword-p ()
  "check if user pressed a key that triggers keyword replacement"
  (and (bb2-not-just-initialized-p)
       (or (bb2-user-pressed-special-p)
	   (and (bb2-user-is-typing-p)
		(bb2-user-pressed-trigger-key-p)))))

(defun bb2-not-just-initialized-p ()
  (not (eq this-command 'bb2-mode)))

;; The bb2 editor changed keywords on up or down.
;; this doesn't work with the mechanism taken from sql-up.
(defun bb2-user-pressed-special-p ()
  "Did the user press enter?"  
  (and (< 0 (length (this-command-keys-vector)))
       (or (equal 13 last-command-event)
	   (equal 10 last-command-event))))

(defun bb2-user-is-typing-p ()
  (eq this-command #'self-insert-command))

(defun bb2-user-pressed-trigger-key-p ()
  "Did the user enter a character from our list?"
  (let ((bb2-current-char last-command-event))
    (member bb2-current-char bb2-trigger-characters)))

(defun bb2-keywordize-symbol (direction)
  "direction is 1 for forward or -1 for backward"
  (forward-symbol direction)
  (bb2-process-symbol (thing-at-point 'symbol)
		      (bounds-of-thing-at-point 'symbol)))

(defun bb2-process-symbol (symbol symbol-boundaries)
  "Find the Blitz 2 keyword for a given symbol then replace the symbol with that keyword"
  (let ((found-keyword (bb2-find-keyword symbol)))
    (when found-keyword
      (delete-region (car symbol-boundaries) (cdr symbol-boundaries))
      (insert found-keyword))))

(defun bb2-find-keyword (symbol)
  "Return the Blitz 2 keyword for a given symbol"
  (car (gethash symbol bb2-keywords)))

(defun bb2-keywordize-region (start-pos end-pos)
  "Capitalize Blitz 2 keywords within a region"
  (interactive "r")
  (save-excursion
    (goto-char start-pos)
    (while (< (point) end-pos)
      (bb2-keywordize-symbol 1))))

(defun bb2-eldoc-function ()
  "Retrieve the Blitz 2 help string for the keyword at the current point"
  (let ((symbol (thing-at-point 'symbol)))
    (if (char-or-string-p symbol)
	(setq symbol (downcase symbol)))
    (cadr (gethash symbol bb2-keywords))))

(defun bb2-make-token-table ()
  "Create a table of <token,keyword> from the main data table"
  (let ((token-table (make-hash-table)))
    (maphash (lambda (k v)
	       (if (car (cddr v))
		   (puthash (car (cddr v)) (car v) token-table)))
	     bb2-keywords)
    token-table))

(defun bb2-load-binary-file (filename)
  "Load a binary file and return a string containing its byte values"
  (with-temp-buffer
    (set-buffer-multibyte nil)
    (setq buffer-file-coding-system 'binary)
    (insert-file-contents-literally filename)
    (buffer-substring-no-properties (point-min) (point-max))))

(defun bb2-bytes-to-token (byte1 byte2)
  "Convert 2 bytes from a binary file into a blitz token"
  (logior (ash byte1 8) (logand byte2 255)))

(defun bb2-get-keyword-for-token (token token-table)
  "Get the blitz 2 keyword for a given token, or ##[$<token>] if not found"
  (let ((found-token (gethash token token-table)))
    (if found-token
	found-token
      (format "##[$%x]" token))))

(defun bb2-tokens-to-string (bytes)
  "Convert a tokenized string of Blitz II src into a plain text string.
Returns an empty string if we identify it as ascii src"
  (let ((token-table (bb2-make-token-table))
	(outstr '())
	(i 0))
    (while (< i (length bytes))
      (let ((b1 (aref bytes i)))	
	(cond
	 ; its an ASCII file, bail out!
	 ((or (= b1 13) (= b1 10))
	  (setq outstr '())
	  (setq i (length bytes)))
	     
	 ; newline character
	 ((= b1 0)
	  (push "\n" outstr)
	  (setq i (1+ i)))
	 
	  ; plain text
	 ((and (> b1 31) (< b1 127))
	  (push (byte-to-string b1) outstr)
	  (setq i (1+ i)))
	 
	 ; not sure what these are in blitz
	 ((and (< b1 32) (> b1 0))
	  (push (format "%d" b1) outstr)
	  (setq i (1+ i)))
	 
	 ; blitz token
	 ((> b1 127)
	  (let ((b2 (aref bytes (1+ i))))
	    (push (bb2-get-keyword-for-token (bb2-bytes-to-token b1 b2) token-table) outstr))
	  (setq i (+ 2 i)))
	     
	 (t (setq i (1+ i))))))
    (mapconcat 'identity (nreverse outstr) "")))

;; we convert the text to latin-1 for detokenizing. latin-1 is the Amiga's default encoding
(defun bb2-get-buffer-contents (buffer)
  "Return the contents of a buffer as a latin-1 string"
  (with-current-buffer buffer
    (encode-coding-string
     (buffer-substring-no-properties (point-min) (point-max))
     'latin-1)))

;; currently we only convert newlines to 0 - don't know of any other special chars
(defun bb2-translate-special-char (b)
  "Return a Blitz 2 special character for a given ascii byte or return it unchanged"
  (if (= b 10) 0 b))

(defun bb2-token-to-bytes (token)
  "Split a Blitz 2 token value into 2 bytes and return them in a list"
  (list (logand (ash token -8) 255) (logand token 255)))

(defun bb2-token-for-keyword (keyword)
  "Return a Blitz 2 token for a given keyword. Signal an error if no token"
  (let ((found-token (car (cddr (gethash (downcase keyword) bb2-keywords)))))
    (if found-token
	found-token
      (error "No token for keyword \"%s\"" keyword))))

(defun bb2-token-list-for-keyword (keyword)
  "Return a Blitz 2 token for a given keyword as a list of bytes.
If there is no token, return the keyword as a list of bytes"
  (let ((found-token (car (cddr (gethash (downcase keyword) bb2-keywords)))))
    (if found-token
	(bb2-token-to-bytes found-token)
      (string-to-list keyword))))

;; this can probably be improved :)
(defun bb2-string-to-tokens (chars)
  "Convert a string of Blitz 2 source into a list of tokenized chars."
  (let ((tokenized '())
	(word "")
	(word-endings (mapcar 'string-to-char '(" " "(" "\ " "." ":" ";")))
	(comment-char (string-to-char ";"))
	(comment-p nil)
	(i 0))
    (while (< i (length chars))
      (let ((b (bb2-translate-special-char (aref chars i))))
	
	(if (= b comment-char)
	    (setq comment-p t))
		    
	(if (not (member b word-endings))
	    (setq word (concat word (char-to-string b)))
	  (if (and (not comment-p)
		   (gethash (downcase word) bb2-keywords))
	      (mapc (lambda (y) (push y tokenized))
		    (bb2-token-list-for-keyword word))
	    (mapc (lambda (y) (push y tokenized)) (vconcat word)))
	  (setq word "")
	  (push b tokenized))

	(if (and (= b 0)
		 comment-p)
	    (setq comment-p nil)))
	
      (setq i (1+ i)))
    (nreverse tokenized)))

(defun bb2-replace-buffer-contents (buffer str)
  "Replace the contents of a buffer with a string"
  (save-excursion
    (with-current-buffer buffer
      (erase-buffer)
      (insert str))))

(defun bb2-maybe-convert-buffer (buffer)
  "If the given buffer contains a tokenized file convert its contents to plain text"
  (if (> (buffer-size) 0)	
      (let ((detokenized-text (bb2-tokens-to-string (bb2-get-buffer-contents buffer))))
	(when (> (length detokenized-text) 0)
	  (bb2-replace-buffer-contents buffer detokenized-text)
	  (set (make-local-variable 'bb2-is-current-file-tokenized) t)
	  (setq mode-name "bb2 tokenized")
	  (set-buffer-modified-p nil)))))

(defun bb2-before-save ()
  "before-save-hook function. If the buffer is tokenized replace its contents with tokens before saving"
  (when bb2-is-current-file-tokenized
    (let ((tokenized-text (bb2-string-to-tokens (bb2-get-buffer-contents (current-buffer)))))    
      (when (> (length tokenized-text) 0)
	(bb2-replace-buffer-contents (current-buffer) (mapconcat 'unibyte-string tokenized-text ""))
	(set-buffer-modified-p nil)))))

(defun bb2-after-save ()
  "post-save-hook function. If the buffer is tokenized, convert it back to text after saving"
  (bb2-maybe-convert-buffer (current-buffer)))

(defun bb2-update-modeline ()
  (if bb2-is-current-file-tokenized
      (setq mode-name "bb2 tokenized")
    (setq mode-name "bb2")))

(defun bb2-toggle-tokenized ()
  "Toggle a Blitz 2 buffer between ascii and tokenized"
  (interactive)
  (setq bb2-is-current-file-tokenized (not bb2-is-current-file-tokenized))
  (bb2-update-modeline))

(define-derived-mode bb2-mode prog-mode "bb2"
  "Major mode for Blitz Basic II code"
  :syntax-table bb2-mode-syntax-table
 
  (if bb2-ted-indent-p
      (bb2-use-ted-indent))
  
  ;; font-lock-defaults last param sets case-insensitivity
  (setq font-lock-defaults '((bb2-highlights) nil t))
  (font-lock-fontify-buffer)
  
  (set (make-local-variable 'eldoc-documentation-function)
       'bb2-eldoc-function)

  (add-hook 'before-save-hook 'bb2-before-save nil t)
  (add-hook 'after-save-hook 'bb2-after-save nil t)
  (add-hook 'post-command-hook 'keywordize-keyhook nil t)
  (eldoc-mode)

  (bb2-maybe-convert-buffer (current-buffer)))

;; associate  bb2-mode to ascii files only at the moment
(add-to-list 'auto-mode-alist '("\\.bb.ascii\\'" . bb2-mode))
(add-to-list 'auto-mode-alist '("\\.bb\\'" . bb2-mode))
(add-to-list 'auto-mode-alist '("\\.bb2\\'" . bb2-mode))
(add-to-list 'auto-mode-alist '("\\.bb2.ascii\\'" . bb2-mode))

(provide 'bb2-mode)
